{
	"id": "8999ca2a4525d6bf27afd47c345548ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"hardhat/contracts/CanvassingSurvey.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\n\ncontract CanvassingSurvey is Ownable, ReentrancyGuard, Pausable {\n    IERC20Metadata public immutable cUSD;\n\n    mapping(address => bool) private usersWhitelistedForSurvey;\n    mapping(address => bool) private participantsWhoHaveClaimedRewards;\n\n    uint256 public rewardAmountPerParticipantInWei;\n    uint256 public targetNumberOfParticipants;\n    uint256 public numberOfRewardedParticipants;\n\n    event OneUserAddressWhitelisted(address participantWalletAddress);\n    event MultipleUserAddressesWhitelisted(address[] walletAddresses);\n    event OneWhitelistedUserAddressBlacklisted(\n        address participantWalletAddress\n    );\n    event MultipleWhitelistedUserAddressesBlacklisted(\n        address[] walletAddresses\n    );\n    event ParticipantRewarded(\n        address participantWalletAddress,\n        uint256 rewardAmount\n    );\n    event ParticipantMarkedAsRewarded(address participantWalletAddress);\n    event RewardFundsWithdrawn(\n        address researcherWalletAddress,\n        uint256 rewardAmount\n    );\n    event RewardAmountUpdated(\n        uint256 oldcUSDRewardAmountPerParticipantInWei,\n        uint256 newcUSDRewardAmountPerParticipantInWei\n    );\n\n    event TargetNumberOfParticipantsUpdates(\n        uint256 oldTargetNumberOfParticipants,\n        uint256 newTargetNumberOfParticipants\n    );\n\n    error ZeroAddress();\n    error InvalidRewardAmountGiven();\n    error InvalidNumberOfTargetParticipants();\n    error UserAddressNotWhitelisted(address walletAddress);\n    error UserAddressAlreadyWhitelisted(address walletAddress);\n    error ParticipantAlreadyRewarded(address walletAddress);\n    error NoRewardFunds();\n    error RewardTransferFailed();\n    error AllParticipantsRewarded();\n\n    error WithdrawalFailed();\n    error InvalidArrayLength();\n    error InsufficientContractBalance();\n\n    modifier onlyWhitelistedAddress(address walletAddress) {\n        if (!usersWhitelistedForSurvey[walletAddress]) {\n            revert UserAddressNotWhitelisted(walletAddress);\n        }\n        _;\n    }\n    modifier mustBeWhitelisted(address walletAddress) {\n        if (!usersWhitelistedForSurvey[walletAddress]) {\n            revert UserAddressNotWhitelisted(walletAddress);\n        }\n        _;\n    }\n\n    modifier mustBeBlacklisted(address walletAddress) {\n        if (usersWhitelistedForSurvey[walletAddress]) {\n            revert UserAddressAlreadyWhitelisted(walletAddress);\n        }\n        _;\n    }\n    modifier onlyUnrewardedParticipant(address participantWalletAddress) {\n        if (participantsWhoHaveClaimedRewards[participantWalletAddress]) {\n            revert ParticipantAlreadyRewarded(participantWalletAddress);\n        }\n        _;\n    }\n\n    constructor(\n        address researcherWalletAddress,\n        uint256 _rewardAmountPerParticipantInWei,\n        uint256 _targetNumberOfParticipants,\n        address cUSDTokenAddress\n    ) Ownable(researcherWalletAddress) {\n        if (\n            researcherWalletAddress == address(0) ||\n            cUSDTokenAddress == address(0)\n        ) {\n            revert ZeroAddress();\n        }\n        if (_rewardAmountPerParticipantInWei == 0) {\n            revert InvalidRewardAmountGiven();\n        }\n\n        if (_targetNumberOfParticipants == 0) {\n            revert InvalidNumberOfTargetParticipants();\n        }\n\n        cUSD = IERC20Metadata(cUSDTokenAddress);\n\n        rewardAmountPerParticipantInWei = _rewardAmountPerParticipantInWei;\n        targetNumberOfParticipants = _targetNumberOfParticipants;\n    }\n\n    function whitelistOneAddress(address walletAddress)\n        external\n        onlyOwner\n        mustBeBlacklisted(walletAddress)\n    {\n        if (walletAddress == address(0)) {\n            revert ZeroAddress();\n        }\n        usersWhitelistedForSurvey[walletAddress] = true;\n        emit OneUserAddressWhitelisted(walletAddress);\n    }\n\n    function blacklistOneWhitelistedAddress(address walletAddress)\n        external\n        onlyOwner\n        mustBeWhitelisted(walletAddress)\n    {\n        if (walletAddress == address(0)) {\n            revert ZeroAddress();\n        }\n        usersWhitelistedForSurvey[walletAddress] = false;\n        emit OneWhitelistedUserAddressBlacklisted(walletAddress);\n    }\n\n    function whitelistMultipleAddresses(address[] calldata walletAddresses)\n        external\n        onlyOwner\n    {\n        uint256 length = walletAddresses.length;\n        if (length == 0) {\n            revert InvalidArrayLength();\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            if (walletAddresses[i] == address(0)) {\n                revert ZeroAddress();\n            }\n            if (usersWhitelistedForSurvey[walletAddresses[i]]) {\n                revert UserAddressAlreadyWhitelisted(walletAddresses[i]);\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            usersWhitelistedForSurvey[walletAddresses[i]] = true;\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit MultipleUserAddressesWhitelisted(walletAddresses);\n    }\n\n    function blacklistMultipleWhitelistedAddresses(\n        address[] calldata walletAddresses\n    ) external onlyOwner {\n        uint256 length = walletAddresses.length;\n        if (length == 0) {\n            revert InvalidArrayLength();\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            if (walletAddresses[i] == address(0)) {\n                revert ZeroAddress();\n            }\n            if (!usersWhitelistedForSurvey[walletAddresses[i]]) {\n                revert UserAddressNotWhitelisted(walletAddresses[i]);\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            usersWhitelistedForSurvey[walletAddresses[i]] = false;\n            unchecked {\n                ++i;\n            }\n        }\n        emit MultipleWhitelistedUserAddressesBlacklisted(walletAddresses);\n    }\n\n    function processRewardClaimByParticipant(address walletAddress)\n        external\n        whenNotPaused\n        nonReentrant\n        onlyWhitelistedAddress(walletAddress)\n        onlyUnrewardedParticipant(walletAddress)\n    {\n        if (cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei) {\n            revert InsufficientContractBalance();\n        }\n\n        markParticipantAsHavingClaimedReward(walletAddress);\n        rewardParticipant(walletAddress);\n    }\n\n    function markParticipantAsHavingClaimedReward(\n        address participantWalletAddress\n    ) private {\n        participantsWhoHaveClaimedRewards[participantWalletAddress] = true;\n        emit ParticipantMarkedAsRewarded(participantWalletAddress);\n    }\n\n    function rewardParticipant(address participantWalletAddress) private {\n        if (numberOfRewardedParticipants == targetNumberOfParticipants) {\n            revert AllParticipantsRewarded();\n        }\n        bool success = cUSD.transfer(\n            participantWalletAddress,\n            rewardAmountPerParticipantInWei\n        );\n        if (!success) {\n            revert RewardTransferFailed();\n        }\n        unchecked {\n            ++numberOfRewardedParticipants;\n        }\n        emit ParticipantRewarded(\n            participantWalletAddress,\n            rewardAmountPerParticipantInWei\n        );\n    }\n\n    function withdrawAllRewardFundsToResearcher()\n        external\n        onlyOwner\n        whenNotPaused\n        nonReentrant\n    {\n        uint256 balance = cUSD.balanceOf(address(this));\n        if (balance == 0) {\n            revert NoRewardFunds();\n        }\n        bool success = cUSD.transfer(owner(), balance);\n        if (!success) {\n            revert WithdrawalFailed();\n        }\n        emit RewardFundsWithdrawn(owner(), balance);\n    }\n\n    function updateRewardAmountPerParticipant(\n        uint256 _newRewardAmountPerParticipantInWei\n    ) external onlyOwner {\n        if (_newRewardAmountPerParticipantInWei == 0) {\n            revert InvalidRewardAmountGiven();\n        }\n        uint256 oldRewardAmountPerParticipantInWei = rewardAmountPerParticipantInWei;\n\n        uint256 newRewardAmountPerParticipantInWei = _newRewardAmountPerParticipantInWei;\n        rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei;\n\n        emit RewardAmountUpdated(\n            oldRewardAmountPerParticipantInWei,\n            newRewardAmountPerParticipantInWei\n        );\n    }\n\n    function updateTargetNumberOfParticipants(\n        uint256 _newTargetNumberOfParticipants\n    ) external onlyOwner {\n        if (_newTargetNumberOfParticipants == 0) {\n            revert InvalidNumberOfTargetParticipants();\n        }\n\n        uint256 oldTargetNumberOfParticipants = targetNumberOfParticipants;\n\n        uint256 newTargetNumberOfParticipants = _newTargetNumberOfParticipants;\n\n        targetNumberOfParticipants = newTargetNumberOfParticipants;\n\n        emit TargetNumberOfParticipantsUpdates(\n            oldTargetNumberOfParticipants,\n            newTargetNumberOfParticipants\n        );\n    }\n\n    function pauseSurvey() external onlyOwner {\n        _pause();\n    }\n\n    function unpauseSurvey() external onlyOwner {\n        _unpause();\n    }\n\n    function getWhitelistedAddressesFromRegisteredAddresses(\n        address[] calldata registeredAddresses\n    ) external view returns (address[] memory) {\n        uint256 length = registeredAddresses.length;\n        if (length == 0) {\n            revert InvalidArrayLength();\n        }\n\n        uint256 whitelistedCount = 0;\n        for (uint256 i = 0; i < length; ) {\n            if (usersWhitelistedForSurvey[registeredAddresses[i]]) {\n                whitelistedCount++;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        address[] memory whitelistedAddresses = new address[](whitelistedCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < length; ) {\n            if (usersWhitelistedForSurvey[registeredAddresses[i]]) {\n                whitelistedAddresses[index++] = registeredAddresses[i];\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        return whitelistedAddresses;\n    }\n\n    function checkIfParticipantHasAlreadyClaimedReward(address walletAddress)\n        external\n        view\n        returns (bool)\n    {\n        return participantsWhoHaveClaimedRewards[walletAddress];\n    }\n\n    function checkIfUserAddressIsWhitelisted(address walletAddress)\n        external\n        view\n        returns (bool)\n    {\n        return usersWhitelistedForSurvey[walletAddress];\n    }\n\n    function checkIfUserAddressIsBlacklisted(address walletAddress)\n        external\n        view\n        returns (bool)\n    {\n        return !usersWhitelistedForSurvey[walletAddress];\n    }\n\n    function getRewardAmountPerParticipantInWei()\n        external\n        view\n        returns (uint256)\n    {\n        return rewardAmountPerParticipantInWei;\n    }\n\n    function getNumberOfRewardedParticipants() external view returns (uint256) {\n        return numberOfRewardedParticipants;\n    }\n}\n\n// researcherWalletAddress:             0xE49B05F2c7DD51f61E415E1DFAc10B80074B001A\n// _rewardAmountPerParticipantInWei:    250000000000000000\n// _targetNumberOfParticipants:         1\n// cUSDTokenAddress:                    0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 290,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/CanvassingSurvey.sol": {
				"CanvassingSurvey": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "researcherWalletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardAmountPerParticipantInWei",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_targetNumberOfParticipants",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "cUSDTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllParticipantsRewarded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientContractBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNumberOfTargetParticipants",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRewardAmountGiven",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoRewardFunds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "ParticipantAlreadyRewarded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RewardTransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "UserAddressAlreadyWhitelisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "UserAddressNotWhitelisted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawalFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "MultipleUserAddressesWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "MultipleWhitelistedUserAddressesBlacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								}
							],
							"name": "OneUserAddressWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								}
							],
							"name": "OneWhitelistedUserAddressBlacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								}
							],
							"name": "ParticipantMarkedAsRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ParticipantRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldcUSDRewardAmountPerParticipantInWei",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newcUSDRewardAmountPerParticipantInWei",
									"type": "uint256"
								}
							],
							"name": "RewardAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "researcherWalletAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "RewardFundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldTargetNumberOfParticipants",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTargetNumberOfParticipants",
									"type": "uint256"
								}
							],
							"name": "TargetNumberOfParticipantsUpdates",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "blacklistMultipleWhitelistedAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "blacklistOneWhitelistedAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cUSD",
							"outputs": [
								{
									"internalType": "contract IERC20Metadata",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "checkIfParticipantHasAlreadyClaimedReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "checkIfUserAddressIsBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "checkIfUserAddressIsWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfRewardedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmountPerParticipantInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "registeredAddresses",
									"type": "address[]"
								}
							],
							"name": "getWhitelistedAddressesFromRegisteredAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numberOfRewardedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauseSurvey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "processRewardClaimByParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmountPerParticipantInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetNumberOfParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpauseSurvey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRewardAmountPerParticipantInWei",
									"type": "uint256"
								}
							],
							"name": "updateRewardAmountPerParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTargetNumberOfParticipants",
									"type": "uint256"
								}
							],
							"name": "updateTargetNumberOfParticipants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "whitelistMultipleAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "whitelistOneAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllRewardFundsToResearcher",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/CanvassingSurvey.sol\":301:11347  contract CanvassingSurvey is Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":2982:3793  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3178:3201  researcherWalletAddress */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:912   */\n  mstore\n    /* \"#utility.yul\":834:852   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3230:3267  researcherWalletAddress == address(0) */\n  dup5\n  and\n  iszero\n  dup1\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3230:3313  researcherWalletAddress == address(0) ||... */\n  tag_17\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3283:3313  cUSDTokenAddress == address(0) */\n  dup2\n  and\n  iszero\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3230:3313  researcherWalletAddress == address(0) ||... */\ntag_17:\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3213:3369  if (... */\n  iszero\n  tag_18\n  jumpi\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3345:3358  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3213:3369  if (... */\ntag_18:\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3382:3414  _rewardAmountPerParticipantInWei */\n  dup3\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3418:3419  0 */\n  0x00\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3382:3419  _rewardAmountPerParticipantInWei == 0 */\n  sub\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3378:3479  if (_rewardAmountPerParticipantInWei == 0) {... */\n  tag_19\n  jumpi\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3442:3468  InvalidRewardAmountGiven() */\n  mload(0x40)\n  shl(0xe4, 0x0d428a01)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3378:3479  if (_rewardAmountPerParticipantInWei == 0) {... */\ntag_19:\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3493:3520  _targetNumberOfParticipants */\n  dup2\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3524:3525  0 */\n  0x00\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3493:3525  _targetNumberOfParticipants == 0 */\n  sub\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3489:3594  if (_targetNumberOfParticipants == 0) {... */\n  tag_20\n  jumpi\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3548:3583  InvalidNumberOfTargetParticipants() */\n  mload(0x40)\n  shl(0xe2, 0x36c5eec7)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3489:3594  if (_targetNumberOfParticipants == 0) {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3604:3643  cUSD = IERC20Metadata(cUSDTokenAddress) */\n  and\n  0x80\n  mstore\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3654:3685  rewardAmountPerParticipantInWei */\n  0x05\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3654:3720  rewardAmountPerParticipantInWei = _rewardAmountPerParticipantInWei */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3730:3756  targetNumberOfParticipants */\n  0x06\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":3730:3786  targetNumberOfParticipants = _targetNumberOfParticipants */\n  sstore\n  pop\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":301:11347  contract CanvassingSurvey is Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_23:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_26:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:710   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  0x00\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  0x00\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_28:\n    /* \"#utility.yul\":410:450   */\n  tag_29\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":512:514   */\n  0x20\n    /* \"#utility.yul\":497:515   */\n  dup7\n  add\n    /* \"#utility.yul\":491:516   */\n  mload\n    /* \"#utility.yul\":606:608   */\n  0x40\n    /* \"#utility.yul\":591:609   */\n  dup8\n  add\n    /* \"#utility.yul\":585:610   */\n  mload\n    /* \"#utility.yul\":400:450   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":491:516   */\n  swap4\n  pop\n    /* \"#utility.yul\":585:610   */\n  swap2\n  pop\n    /* \"#utility.yul\":655:704   */\n  tag_30\n    /* \"#utility.yul\":700:702   */\n  0x60\n    /* \"#utility.yul\":685:703   */\n  dup7\n  add\n    /* \"#utility.yul\":655:704   */\n  tag_23\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":645:704   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:710   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":715:918   */\ntag_24:\n    /* \"hardhat/contracts/CanvassingSurvey.sol\":301:11347  contract CanvassingSurvey is Ownable, ReentrancyGuard, Pausable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":301:11347  contract CanvassingSurvey is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x85737020\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xe082fe2a\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xe082fe2a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe3bb2d40\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe8a748e7\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf22069df\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xfc05542a\n      eq\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0x85737020\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa0858343\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa34db0a0\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa6a09811\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc9539f71\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      dup1\n      0x6ff65c20\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x6ff65c20\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7069243c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x741ae614\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7a0abf08\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x81aeb13b\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0x1318fbf1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1fccf672\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3960fc66\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x528780cc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x64bb632f\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":650:693  uint256 public numberOfRewardedParticipants */\n    tag_3:\n      tag_30\n      sload(0x07)\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":650:693  uint256 public numberOfRewardedParticipants */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":371:407  IERC20Metadata public immutable cUSD */\n    tag_4:\n      tag_34\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":364:415   */\n      dup2\n      mstore\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":371:407  IERC20Metadata public immutable cUSD */\n      tag_32\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9402:9473  function unpauseSurvey() external onlyOwner {... */\n    tag_5:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8712:9323  function updateTargetNumberOfParticipants(... */\n    tag_6:\n      tag_38\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":776:790   */\n      swap1\n      iszero\n        /* \"#utility.yul\":769:791   */\n      iszero\n        /* \"#utility.yul\":751:792   */\n      dup2\n      mstore\n        /* \"#utility.yul\":739:741   */\n      0x20\n        /* \"#utility.yul\":724:742   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":611:798   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8070:8706  function updateRewardAmountPerParticipant(... */\n    tag_8:\n      tag_38\n      tag_49\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10459:10662  function checkIfParticipantHasAlreadyClaimedReward(address walletAddress)... */\n    tag_9:\n      tag_44\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10607:10655  participantsWhoHaveClaimedRewards[walletAddress] */\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10580:10584  bool */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10607:10655  participantsWhoHaveClaimedRewards[walletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10607:10640  participantsWhoHaveClaimedRewards */\n      0x04\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10607:10655  participantsWhoHaveClaimedRewards[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10459:10662  function checkIfParticipantHasAlreadyClaimedReward(address walletAddress)... */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":11051:11212  function getRewardAmountPerParticipantInWei()... */\n    tag_10:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":11174:11205  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":11051:11212  function getRewardAmountPerParticipantInWei()... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_38\n      tag_60\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":11218:11345  function getNumberOfRewardedParticipants() external view returns (uint256) {... */\n    tag_12:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":11310:11338  numberOfRewardedParticipants */\n      sload(0x07)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":11218:11345  function getNumberOfRewardedParticipants() external view returns (uint256) {... */\n      jump(tag_30)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":551:597  uint256 public rewardAmountPerParticipantInWei */\n    tag_13:\n      tag_30\n      sload(0x05)\n      dup2\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4510:5371  function whitelistMultipleAddresses(address[] calldata walletAddresses)... */\n    tag_14:\n      tag_38\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10859:11045  function checkIfUserAddressIsBlacklisted(address walletAddress)... */\n    tag_15:\n      tag_44\n      tag_72\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10998:11038  usersWhitelistedForSurvey[walletAddress] */\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10970:10974  bool */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10998:11038  usersWhitelistedForSurvey[walletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10998:11023  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10998:11038  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10997:11038  !usersWhitelistedForSurvey[walletAddress] */\n      iszero\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10859:11045  function checkIfUserAddressIsBlacklisted(address walletAddress)... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_34)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6257:6730  function processRewardClaimByParticipant(address walletAddress)... */\n    tag_17:\n      tag_38\n      tag_80\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9479:10453  function getWhitelistedAddressesFromRegisteredAddresses(... */\n    tag_18:\n      tag_82\n      tag_83\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":603:644  uint256 public targetNumberOfParticipants */\n    tag_19:\n      tag_30\n      sload(0x06)\n      dup2\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5377:6251  function blacklistMultipleWhitelistedAddresses(... */\n    tag_20:\n      tag_38\n      tag_91\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9329:9396  function pauseSurvey() external onlyOwner {... */\n    tag_21:\n      tag_38\n      tag_94\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4143:4504  function blacklistOneWhitelistedAddress(address walletAddress)... */\n    tag_22:\n      tag_38\n      tag_96\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3799:4137  function whitelistOneAddress(address walletAddress)... */\n    tag_23:\n      tag_38\n      tag_99\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7616:8064  function withdrawAllRewardFundsToResearcher()... */\n    tag_24:\n      tag_38\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_38\n      tag_104\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10668:10853  function checkIfUserAddressIsWhitelisted(address walletAddress)... */\n    tag_26:\n      tag_44\n      tag_107\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10806:10846  usersWhitelistedForSurvey[walletAddress] */\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10779:10783  bool */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10806:10846  usersWhitelistedForSurvey[walletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10806:10831  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10806:10846  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10668:10853  function checkIfUserAddressIsWhitelisted(address walletAddress)... */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9402:9473  function unpauseSurvey() external onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9456:9466  _unpause() */\n      tag_114\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9456:9464  _unpause */\n      tag_115\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9456:9466  _unpause() */\n      jump\t// in\n    tag_114:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9402:9473  function unpauseSurvey() external onlyOwner {... */\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8712:9323  function updateTargetNumberOfParticipants(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_117:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8841:8871  _newTargetNumberOfParticipants */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8875:8876  0 */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8841:8876  _newTargetNumberOfParticipants == 0 */\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8837:8945  if (_newTargetNumberOfParticipants == 0) {... */\n      tag_119\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8899:8934  InvalidNumberOfTargetParticipants() */\n      mload(0x40)\n      shl(0xe2, 0x36c5eec7)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8837:8945  if (_newTargetNumberOfParticipants == 0) {... */\n    tag_119:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8995:9021  targetNumberOfParticipants */\n      0x06\n      dup1\n      sload\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9113:9171  targetNumberOfParticipants = newTargetNumberOfParticipants */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9187:9316  TargetNumberOfParticipantsUpdates(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2811:2836   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2867:2869   */\n      0x20\n        /* \"#utility.yul\":2852:2870   */\n      dup2\n      add\n        /* \"#utility.yul\":2845:2879   */\n      dup5\n      swap1\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9113:9171  targetNumberOfParticipants = newTargetNumberOfParticipants */\n      dup4\n      swap2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9187:9316  TargetNumberOfParticipantsUpdates(... */\n      0x2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef\n      swap2\n        /* \"#utility.yul\":2784:2802   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9187:9316  TargetNumberOfParticipantsUpdates(... */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8827:9323  {... */\n      pop\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8712:9323  function updateTargetNumberOfParticipants(... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8070:8706  function updateRewardAmountPerParticipant(... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8204:8239  _newRewardAmountPerParticipantInWei */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8243:8244  0 */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8204:8244  _newRewardAmountPerParticipantInWei == 0 */\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8200:8304  if (_newRewardAmountPerParticipantInWei == 0) {... */\n      tag_126\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8267:8293  InvalidRewardAmountGiven() */\n      mload(0x40)\n      shl(0xe4, 0x0d428a01)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8200:8304  if (_newRewardAmountPerParticipantInWei == 0) {... */\n    tag_126:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8358:8389  rewardAmountPerParticipantInWei */\n      0x05\n      dup1\n      sload\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8490:8558  rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8574:8699  RewardAmountUpdated(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2811:2836   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2867:2869   */\n      0x20\n        /* \"#utility.yul\":2852:2870   */\n      dup2\n      add\n        /* \"#utility.yul\":2845:2879   */\n      dup5\n      swap1\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8490:8558  rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei */\n      dup4\n      swap2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8574:8699  RewardAmountUpdated(... */\n      0xf0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c94\n      swap2\n        /* \"#utility.yul\":2784:2802   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8574:8699  RewardAmountUpdated(... */\n      tag_120\n        /* \"#utility.yul\":2637:2885   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4510:5371  function whitelistMultipleAddresses(address[] calldata walletAddresses)... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4648:4663  walletAddresses */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4631:4645  uint256 length */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4684:4695  length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4680:4749  if (length == 0) {... */\n      tag_139\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4718:4738  InvalidArrayLength() */\n      mload(0x40)\n      shl(0xe1, 0x4ec48105)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4680:4749  if (length == 0) {... */\n    tag_139:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4764:4773  uint256 i */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4759:5120  for (uint256 i = 0; i < length; ) {... */\n    tag_140:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4783:4789  length */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4779:4780  i */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4779:4789  i < length */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4759:5120  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4841:4842  0 */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4811:4826  walletAddresses */\n      dup5\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4827:4828  i */\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4811:4829  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4811:4843  walletAddresses[i] == address(0) */\n      and\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4807:4898  if (walletAddresses[i] == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4870:4883  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4807:4898  if (walletAddresses[i] == address(0)) {... */\n    tag_147:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4915:4940  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4915:4960  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4941:4956  walletAddresses */\n      dup6\n      dup6\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4957:4958  i */\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4941:4959  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_149\n      tag_145\n      jump\t// in\n    tag_149:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4915:4960  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4911:5051  if (usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5017:5032  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5033:5034  i */\n      dup3\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5017:5035  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_153\n      tag_145\n      jump\t// in\n    tag_153:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_154:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4987:5036  UserAddressAlreadyWhitelisted(walletAddresses[i]) */\n      mload(0x40)\n      shl(0xe1, 0x3746725b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4987:5036  UserAddressAlreadyWhitelisted(walletAddresses[i]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4987:5036  UserAddressAlreadyWhitelisted(walletAddresses[i]) */\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4911:5051  if (usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n    tag_151:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5092:5095  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4759:5120  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5135:5144  uint256 i */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5130:5300  for (uint256 i = 0; i < length; ) {... */\n    tag_156:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5154:5160  length */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5150:5151  i */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5150:5160  i < length */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5130:5300  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5226:5230  true */\n      0x01\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5178:5203  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5178:5223  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5204:5219  walletAddresses */\n      dup7\n      dup7\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5220:5221  i */\n      dup6\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5204:5222  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_145\n      jump\t// in\n    tag_160:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5178:5223  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5178:5230  usersWhitelistedForSurvey[walletAddresses[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5272:5275  ++i */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5130:5300  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5315:5364  MultipleUserAddressesWhitelisted(walletAddresses) */\n      0x9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5348:5363  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5315:5364  MultipleUserAddressesWhitelisted(walletAddresses) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6257:6730  function processRewardClaimByParticipant(address walletAddress)... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_167\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2189:2229  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2189:2214  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2189:2229  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6412:6425  walletAddress */\n      dup2\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2189:2229  usersWhitelistedForSurvey[walletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2184:2303  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n      tag_173\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2252:2292  UserAddressNotWhitelisted(walletAddress) */\n      mload(0x40)\n      shl(0xe0, 0xde55cc33)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2252:2292  UserAddressNotWhitelisted(walletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2252:2292  UserAddressNotWhitelisted(walletAddress) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2184:2303  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2814:2873  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2814:2847  participantsWhoHaveClaimedRewards */\n      0x04\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2814:2873  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6461:6474  walletAddress */\n      dup3\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2814:2873  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2810:2959  if (participantsWhoHaveClaimedRewards[participantWalletAddress]) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2896:2948  ParticipantAlreadyRewarded(participantWalletAddress) */\n      mload(0x40)\n      shl(0xe3, 0x01ee5f6f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2896:2948  ParticipantAlreadyRewarded(participantWalletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2896:2948  ParticipantAlreadyRewarded(participantWalletAddress) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2810:2959  if (participantsWhoHaveClaimedRewards[participantWalletAddress]) {... */\n    tag_176:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6526:6557  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6494:6523  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6517:6521  this */\n      address\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6494:6523  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6494:6498  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6494:6508  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6494:6523  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6494:6557  cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6490:6620  if (cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei) {... */\n      iszero\n      tag_184\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6580:6609  InsufficientContractBalance() */\n      mload(0x40)\n      shl(0xe0, 0x786e0a99)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6490:6620  if (cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei) {... */\n    tag_184:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6630:6681  markParticipantAsHavingClaimedReward(walletAddress) */\n      tag_185\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6667:6680  walletAddress */\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6630:6666  markParticipantAsHavingClaimedReward */\n      tag_186\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6630:6681  markParticipantAsHavingClaimedReward(walletAddress) */\n      jump\t// in\n    tag_185:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6691:6723  rewardParticipant(walletAddress) */\n      tag_187\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6709:6722  walletAddress */\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6691:6708  rewardParticipant */\n      tag_188\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6691:6723  rewardParticipant(walletAddress) */\n      jump\t// in\n    tag_187:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2312:2313  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_189:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6257:6730  function processRewardClaimByParticipant(address walletAddress)... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9479:10453  function getWhitelistedAddressesFromRegisteredAddresses(... */\n    tag_84:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9612:9628  address[] memory */\n      0x60\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9657:9676  registeredAddresses */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9640:9654  uint256 length */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9697:9708  length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9693:9762  if (length == 0) {... */\n      tag_192\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9731:9751  InvalidArrayLength() */\n      mload(0x40)\n      shl(0xe1, 0x4ec48105)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9693:9762  if (length == 0) {... */\n    tag_192:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9772:9796  uint256 whitelistedCount */\n      0x00\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9810:10033  for (uint256 i = 0; i < length; ) {... */\n    tag_193:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9834:9840  length */\n      dup3\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9830:9831  i */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9830:9840  i < length */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9810:10033  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9862:9887  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9862:9911  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9888:9907  registeredAddresses */\n      dup8\n      dup8\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9908:9909  i */\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9888:9910  registeredAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_197\n      jumpi\n      tag_197\n      tag_145\n      jump\t// in\n    tag_197:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9862:9911  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9858:9964  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9931:9949  whitelistedCount++ */\n      dup2\n      tag_200\n      dup2\n      tag_201\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9858:9964  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n    tag_199:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10005:10008  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9810:10033  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_193)\n    tag_194:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10043:10080  address[] memory whitelistedAddresses */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10097:10113  whitelistedCount */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10083:10114  new address[](whitelistedCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_203\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_205\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_205:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10043:10114  address[] memory whitelistedAddresses = new address[](whitelistedCount) */\n      swap1\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10124:10137  uint256 index */\n      0x00\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10151:10410  for (uint256 i = 0; i < length; ) {... */\n    tag_206:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10175:10181  length */\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10171:10172  i */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10171:10181  i < length */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10151:10410  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10203:10228  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10203:10252  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10229:10248  registeredAddresses */\n      dup10\n      dup10\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10249:10250  i */\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10229:10251  registeredAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_210\n      jumpi\n      tag_210\n      tag_145\n      jump\t// in\n    tag_210:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10203:10252  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10199:10341  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10304:10323  registeredAddresses */\n      dup8\n      dup8\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10324:10325  i */\n      dup3\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10304:10326  registeredAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_214\n      tag_145\n      jump\t// in\n    tag_214:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_215:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10272:10292  whitelistedAddresses */\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10293:10300  index++ */\n      dup4\n      tag_216\n      dup2\n      tag_201\n      jump\t// in\n    tag_216:\n      swap5\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10272:10301  whitelistedAddresses[index++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_218\n      tag_145\n      jump\t// in\n    tag_218:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10272:10326  whitelistedAddresses[index++] = registeredAddresses[i] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10199:10341  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n    tag_212:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10382:10385  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10151:10410  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_206)\n    tag_207:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":10426:10446  whitelistedAddresses */\n      swap1\n      swap7\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9479:10453  function getWhitelistedAddressesFromRegisteredAddresses(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5377:6251  function blacklistMultipleWhitelistedAddresses(... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5520:5535  walletAddresses */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5503:5517  uint256 length */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5556:5567  length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5552:5621  if (length == 0) {... */\n      tag_222\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5590:5610  InvalidArrayLength() */\n      mload(0x40)\n      shl(0xe1, 0x4ec48105)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5552:5621  if (length == 0) {... */\n    tag_222:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5636:5645  uint256 i */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5631:5989  for (uint256 i = 0; i < length; ) {... */\n    tag_223:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5655:5661  length */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5651:5652  i */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5651:5661  i < length */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5631:5989  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5713:5714  0 */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5683:5698  walletAddresses */\n      dup5\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5699:5700  i */\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5683:5701  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_145\n      jump\t// in\n    tag_227:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5683:5715  walletAddresses[i] == address(0) */\n      and\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5679:5770  if (walletAddresses[i] == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5742:5755  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5679:5770  if (walletAddresses[i] == address(0)) {... */\n    tag_229:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5788:5813  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5788:5833  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5814:5829  walletAddresses */\n      dup6\n      dup6\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5830:5831  i */\n      dup5\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5814:5832  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_145\n      jump\t// in\n    tag_231:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5788:5833  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5783:5920  if (!usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n      tag_233\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5886:5901  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5902:5903  i */\n      dup3\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5886:5904  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_235\n      tag_145\n      jump\t// in\n    tag_235:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_236:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5860:5905  UserAddressNotWhitelisted(walletAddresses[i]) */\n      mload(0x40)\n      shl(0xe0, 0xde55cc33)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5860:5905  UserAddressNotWhitelisted(walletAddresses[i]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5860:5905  UserAddressNotWhitelisted(walletAddresses[i]) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5783:5920  if (!usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n    tag_233:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5961:5964  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5631:5989  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6004:6013  uint256 i */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5999:6170  for (uint256 i = 0; i < length; ) {... */\n    tag_238:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6023:6029  length */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6019:6020  i */\n      dup2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6019:6029  i < length */\n      lt\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5999:6170  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6095:6100  false */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6047:6072  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6047:6092  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6073:6088  walletAddresses */\n      dup7\n      dup7\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6089:6090  i */\n      dup6\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6073:6091  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_242\n      tag_145\n      jump\t// in\n    tag_242:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_243\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6047:6092  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6047:6100  usersWhitelistedForSurvey[walletAddresses[i]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6142:6145  ++i */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":5999:6170  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_238)\n    tag_239:\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6184:6244  MultipleWhitelistedUserAddressesBlacklisted(walletAddresses) */\n      0xd68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6228:6243  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6184:6244  MultipleWhitelistedUserAddressesBlacklisted(walletAddresses) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9329:9396  function pauseSurvey() external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_246:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9381:9389  _pause() */\n      tag_114\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9381:9387  _pause */\n      tag_249\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":9381:9389  _pause() */\n      jump\t// in\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4143:4504  function blacklistOneWhitelistedAddress(address walletAddress)... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2390:2430  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2390:2415  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2390:2430  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4267:4280  walletAddress */\n      dup2\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2390:2430  usersWhitelistedForSurvey[walletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2385:2504  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n      tag_253\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2453:2493  UserAddressNotWhitelisted(walletAddress) */\n      mload(0x40)\n      shl(0xe0, 0xde55cc33)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2453:2493  UserAddressNotWhitelisted(walletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2453:2493  UserAddressNotWhitelisted(walletAddress) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2385:2504  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4300:4327  walletAddress == address(0) */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4296:4374  if (walletAddress == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4350:4363  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4296:4374  if (walletAddress == address(0)) {... */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4383:4423  usersWhitelistedForSurvey[walletAddress] */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4426:4431  false */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4383:4423  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4383:4408  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4383:4423  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4383:4431  usersWhitelistedForSurvey[walletAddress] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4446:4497  OneWhitelistedUserAddressBlacklisted(walletAddress) */\n      swap1\n      mload\n        /* \"#utility.yul\":364:415   */\n      swap2\n      dup3\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4446:4497  OneWhitelistedUserAddressBlacklisted(walletAddress) */\n      0xa354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e2\n      swap2\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4446:4497  OneWhitelistedUserAddressBlacklisted(walletAddress) */\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4143:4504  function blacklistOneWhitelistedAddress(address walletAddress)... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3799:4137  function whitelistOneAddress(address walletAddress)... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2591:2631  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2591:2616  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2591:2631  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3912:3925  walletAddress */\n      dup2\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2591:2631  usersWhitelistedForSurvey[walletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2587:2709  if (usersWhitelistedForSurvey[walletAddress]) {... */\n      iszero\n      tag_261\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2654:2698  UserAddressAlreadyWhitelisted(walletAddress) */\n      mload(0x40)\n      shl(0xe1, 0x3746725b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2654:2698  UserAddressAlreadyWhitelisted(walletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2654:2698  UserAddressAlreadyWhitelisted(walletAddress) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":2587:2709  if (usersWhitelistedForSurvey[walletAddress]) {... */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3945:3972  walletAddress == address(0) */\n      dup3\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3941:4019  if (walletAddress == address(0)) {... */\n      tag_264\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3995:4008  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":3941:4019  if (walletAddress == address(0)) {... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4028:4068  usersWhitelistedForSurvey[walletAddress] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4028:4053  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4028:4068  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4028:4075  usersWhitelistedForSurvey[walletAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4071:4075  true */\n      0x01\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4028:4075  usersWhitelistedForSurvey[walletAddress] = true */\n      or\n      swap1\n      sstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4090:4130  OneUserAddressWhitelisted(walletAddress) */\n      swap1\n      mload\n        /* \"#utility.yul\":364:415   */\n      swap2\n      dup3\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4090:4130  OneUserAddressWhitelisted(walletAddress) */\n      0x1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d27\n      swap2\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":4090:4130  OneUserAddressWhitelisted(walletAddress) */\n      tag_257\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7616:8064  function withdrawAllRewardFundsToResearcher()... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_269\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_271:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7772:7801  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7795:7799  this */\n      address\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7772:7801  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7754:7769  uint256 balance */\n      0x00\n      swap1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7772:7776  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7772:7786  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7772:7801  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_275\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_275:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_276\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_276:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7754:7801  uint256 balance = cUSD.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7815:7822  balance */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7826:7827  0 */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7815:7827  balance == 0 */\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7811:7876  if (balance == 0) {... */\n      tag_277\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7850:7865  NoRewardFunds() */\n      mload(0x40)\n      shl(0xe2, 0x16e3ff05)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7811:7876  if (balance == 0) {... */\n    tag_277:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7885:7897  bool success */\n      0x00\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7900:7904  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7900:7913  cUSD.transfer */\n      and\n      0xa9059cbb\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7914:7921  owner() */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7914:7921  owner() */\n    tag_278:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7900:7931  cUSD.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      swap1\n      swap2\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7900:7931  cUSD.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4374:4425   */\n      mstore\n        /* \"#utility.yul\":4441:4459   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4434:4468   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":4347:4365   */\n      0x44\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7900:7931  cUSD.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_282:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_283\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7885:7931  bool success = cUSD.transfer(owner(), balance) */\n      swap1\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7946:7953  success */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7941:8005  if (!success) {... */\n      tag_285\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7976:7994  WithdrawalFailed() */\n      mload(0x40)\n      shl(0xe0, 0x27fcd9d1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7941:8005  if (!success) {... */\n    tag_285:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8019:8057  RewardFundsWithdrawn(owner(), balance) */\n      0x2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8040:8047  owner() */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8040:8047  owner() */\n    tag_286:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8019:8057  RewardFundsWithdrawn(owner(), balance) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4374:4425   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4456:4458   */\n      0x20\n        /* \"#utility.yul\":4441:4459   */\n      dup3\n      add\n        /* \"#utility.yul\":4434:4468   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":8019:8057  RewardFundsWithdrawn(owner(), balance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7744:8064  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_155\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":364:415   */\n      dup2\n      mstore\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6736:6989  function markParticipantAsHavingClaimedReward(... */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6848:6907  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6848:6881  participantsWhoHaveClaimedRewards */\n      0x04\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6848:6907  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6848:6914  participantsWhoHaveClaimedRewards[participantWalletAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6910:6914  true */\n      0x01\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6848:6914  participantsWhoHaveClaimedRewards[participantWalletAddress] = true */\n      or\n      swap1\n      sstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6929:6982  ParticipantMarkedAsRewarded(participantWalletAddress) */\n      swap1\n      mload\n        /* \"#utility.yul\":364:415   */\n      swap2\n      dup3\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6929:6982  ParticipantMarkedAsRewarded(participantWalletAddress) */\n      0x654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943\n      swap2\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6929:6982  ParticipantMarkedAsRewarded(participantWalletAddress) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6736:6989  function markParticipantAsHavingClaimedReward(... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":6995:7610  function rewardParticipant(address participantWalletAddress) private {... */\n    tag_188:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7110:7136  targetNumberOfParticipants */\n      sload(0x06)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7078:7106  numberOfRewardedParticipants */\n      sload(0x07)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7078:7136  numberOfRewardedParticipants == targetNumberOfParticipants */\n      sub\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7074:7195  if (numberOfRewardedParticipants == targetNumberOfParticipants) {... */\n      tag_318\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7159:7184  AllParticipantsRewarded() */\n      mload(0x40)\n      shl(0xea, 0x27007f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7074:7195  if (numberOfRewardedParticipants == targetNumberOfParticipants) {... */\n    tag_318:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7284:7315  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7219:7325  cUSD.transfer(... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      dup4\n      dup2\n      and\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7219:7325  cUSD.transfer(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4374:4425   */\n      mstore\n        /* \"#utility.yul\":4441:4459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4434:4468   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7204:7216  bool success */\n      0x00\n      swap2\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7219:7223  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7219:7232  cUSD.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4347:4365   */\n      0x44\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7219:7325  cUSD.transfer(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_321\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_321:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_322\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_322:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7204:7325  bool success = cUSD.transfer(... */\n      swap1\n      pop\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7340:7347  success */\n      dup1\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7335:7403  if (!success) {... */\n      tag_323\n      jumpi\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7370:7392  RewardTransferFailed() */\n      mload(0x40)\n      shl(0xe4, 0x078ecf41)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7335:7403  if (!success) {... */\n    tag_323:\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7438:7466  numberOfRewardedParticipants */\n      0x07\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7436:7466  ++numberOfRewardedParticipants */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7562:7593  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7491:7603  ParticipantRewarded(... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      dup6\n      and\n        /* \"#utility.yul\":4374:4425   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4456:4458   */\n      0x20\n        /* \"#utility.yul\":4441:4459   */\n      dup2\n      add\n        /* \"#utility.yul\":4434:4468   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7491:7603  ParticipantRewarded(... */\n      0x8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e\n      swap2\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"hardhat/contracts/CanvassingSurvey.sol\":7491:7603  ParticipantRewarded(... */\n      tag_257\n        /* \"#utility.yul\":4200:4474   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_307\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":426:606   */\n    tag_42:\n        /* \"#utility.yul\":485:491   */\n      0x00\n        /* \"#utility.yul\":538:540   */\n      0x20\n        /* \"#utility.yul\":526:535   */\n      dup3\n        /* \"#utility.yul\":517:524   */\n      dup5\n        /* \"#utility.yul\":513:536   */\n      sub\n        /* \"#utility.yul\":509:541   */\n      slt\n        /* \"#utility.yul\":506:558   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":554:555   */\n      0x00\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":544:556   */\n      revert\n        /* \"#utility.yul\":506:558   */\n    tag_340:\n      pop\n        /* \"#utility.yul\":577:600   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":426:606   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:976   */\n    tag_335:\n        /* \"#utility.yul\":871:891   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":920:951   */\n      dup2\n      and\n        /* \"#utility.yul\":910:952   */\n      dup2\n      eq\n        /* \"#utility.yul\":900:970   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":966:967   */\n      0x00\n        /* \"#utility.yul\":963:964   */\n      0x00\n        /* \"#utility.yul\":956:968   */\n      revert\n        /* \"#utility.yul\":900:970   */\n    tag_343:\n        /* \"#utility.yul\":803:976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1167   */\n    tag_53:\n        /* \"#utility.yul\":1040:1046   */\n      0x00\n        /* \"#utility.yul\":1093:1095   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup3\n        /* \"#utility.yul\":1072:1079   */\n      dup5\n        /* \"#utility.yul\":1068:1091   */\n      sub\n        /* \"#utility.yul\":1064:1096   */\n      slt\n        /* \"#utility.yul\":1061:1113   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1106:1107   */\n      0x00\n        /* \"#utility.yul\":1099:1111   */\n      revert\n        /* \"#utility.yul\":1061:1113   */\n    tag_345:\n        /* \"#utility.yul\":1132:1161   */\n      tag_346\n        /* \"#utility.yul\":1151:1160   */\n      dup3\n        /* \"#utility.yul\":1132:1161   */\n      tag_335\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1122:1161   */\n      swap4\n        /* \"#utility.yul\":981:1167   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1172:1782   */\n    tag_69:\n        /* \"#utility.yul\":1258:1264   */\n      0x00\n        /* \"#utility.yul\":1266:1272   */\n      0x00\n        /* \"#utility.yul\":1319:1321   */\n      0x20\n        /* \"#utility.yul\":1307:1316   */\n      dup4\n        /* \"#utility.yul\":1298:1305   */\n      dup6\n        /* \"#utility.yul\":1294:1317   */\n      sub\n        /* \"#utility.yul\":1290:1322   */\n      slt\n        /* \"#utility.yul\":1287:1339   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":1335:1336   */\n      0x00\n        /* \"#utility.yul\":1332:1333   */\n      0x00\n        /* \"#utility.yul\":1325:1337   */\n      revert\n        /* \"#utility.yul\":1287:1339   */\n    tag_348:\n        /* \"#utility.yul\":1375:1384   */\n      dup3\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n        /* \"#utility.yul\":1408:1426   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1400:1406   */\n      dup2\n        /* \"#utility.yul\":1397:1427   */\n      gt\n        /* \"#utility.yul\":1394:1444   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":1440:1441   */\n      0x00\n        /* \"#utility.yul\":1437:1438   */\n      0x00\n        /* \"#utility.yul\":1430:1442   */\n      revert\n        /* \"#utility.yul\":1394:1444   */\n    tag_349:\n        /* \"#utility.yul\":1463:1485   */\n      dup4\n      add\n        /* \"#utility.yul\":1516:1520   */\n      0x1f\n        /* \"#utility.yul\":1508:1521   */\n      dup2\n      add\n        /* \"#utility.yul\":1504:1531   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1494:1549   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":1545:1546   */\n      0x00\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1535:1547   */\n      revert\n        /* \"#utility.yul\":1494:1549   */\n    tag_350:\n        /* \"#utility.yul\":1585:1587   */\n      dup1\n        /* \"#utility.yul\":1572:1588   */\n      calldataload\n        /* \"#utility.yul\":1611:1629   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1603:1609   */\n      dup2\n        /* \"#utility.yul\":1600:1630   */\n      gt\n        /* \"#utility.yul\":1597:1647   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1640:1641   */\n      0x00\n        /* \"#utility.yul\":1633:1645   */\n      revert\n        /* \"#utility.yul\":1597:1647   */\n    tag_351:\n        /* \"#utility.yul\":1696:1703   */\n      dup6\n        /* \"#utility.yul\":1691:1693   */\n      0x20\n        /* \"#utility.yul\":1681:1687   */\n      dup3\n        /* \"#utility.yul\":1678:1679   */\n      0x05\n        /* \"#utility.yul\":1674:1688   */\n      shl\n        /* \"#utility.yul\":1670:1672   */\n      dup5\n        /* \"#utility.yul\":1666:1689   */\n      add\n        /* \"#utility.yul\":1662:1694   */\n      add\n        /* \"#utility.yul\":1659:1704   */\n      gt\n        /* \"#utility.yul\":1656:1721   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1714:1715   */\n      0x00\n        /* \"#utility.yul\":1707:1719   */\n      revert\n        /* \"#utility.yul\":1656:1721   */\n    tag_352:\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1740:1751   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":1770:1776   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1172:1782   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1995:2632   */\n    tag_86:\n        /* \"#utility.yul\":2185:2187   */\n      0x20\n        /* \"#utility.yul\":2197:2218   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2267:2280   */\n      dup3\n      mload\n        /* \"#utility.yul\":2170:2188   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2289:2311   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2137:2141   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2368:2383   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2342:2344   */\n      0x40\n        /* \"#utility.yul\":2327:2345   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2137:2141   */\n      dup4\n        /* \"#utility.yul\":2411:2606   */\n    tag_355:\n        /* \"#utility.yul\":2425:2431   */\n      dup2\n        /* \"#utility.yul\":2422:2423   */\n      dup2\n        /* \"#utility.yul\":2419:2432   */\n      lt\n        /* \"#utility.yul\":2411:2606   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":2490:2503   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2486:2525   */\n      and\n        /* \"#utility.yul\":2474:2526   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2581:2596   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2546:2558   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2522:2523   */\n      0x01\n        /* \"#utility.yul\":2440:2449   */\n      add\n        /* \"#utility.yul\":2411:2606   */\n      jump(tag_355)\n    tag_357:\n      pop\n        /* \"#utility.yul\":2623:2626   */\n      swap1\n      swap6\n        /* \"#utility.yul\":1995:2632   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2890:3017   */\n    tag_145:\n        /* \"#utility.yul\":2951:2961   */\n      0x4e487b71\n        /* \"#utility.yul\":2946:2949   */\n      0xe0\n        /* \"#utility.yul\":2942:2962   */\n      shl\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2963   */\n      mstore\n        /* \"#utility.yul\":2982:2986   */\n      0x32\n        /* \"#utility.yul\":2979:2980   */\n      0x04\n        /* \"#utility.yul\":2972:2987   */\n      mstore\n        /* \"#utility.yul\":3006:3010   */\n      0x24\n        /* \"#utility.yul\":3003:3004   */\n      0x00\n        /* \"#utility.yul\":2996:3011   */\n      revert\n        /* \"#utility.yul\":3022:3637   */\n    tag_163:\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"#utility.yul\":3234:3255   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3207:3225   */\n      dup2\n      add\n        /* \"#utility.yul\":3290:3312   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3174:3178   */\n      0x00\n        /* \"#utility.yul\":3369:3375   */\n      dup4\n        /* \"#utility.yul\":3343:3345   */\n      0x40\n        /* \"#utility.yul\":3328:3346   */\n      dup4\n      add\n        /* \"#utility.yul\":3174:3178   */\n      dup3\n        /* \"#utility.yul\":3403:3611   */\n    tag_361:\n        /* \"#utility.yul\":3417:3423   */\n      dup6\n        /* \"#utility.yul\":3414:3415   */\n      dup2\n        /* \"#utility.yul\":3411:3424   */\n      lt\n        /* \"#utility.yul\":3403:3611   */\n      iszero\n      tag_363\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3482:3508   */\n      tag_364\n        /* \"#utility.yul\":3501:3507   */\n      dup5\n        /* \"#utility.yul\":3482:3508   */\n      tag_335\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3478:3530   */\n      and\n        /* \"#utility.yul\":3466:3531   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3586:3601   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":3551:3563   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":3439:3440   */\n      0x01\n        /* \"#utility.yul\":3432:3441   */\n      add\n        /* \"#utility.yul\":3403:3611   */\n      jump(tag_361)\n    tag_363:\n      pop\n        /* \"#utility.yul\":3628:3631   */\n      swap6\n        /* \"#utility.yul\":3022:3637   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3642:3826   */\n    tag_183:\n        /* \"#utility.yul\":3712:3718   */\n      0x00\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"#utility.yul\":3753:3762   */\n      dup3\n        /* \"#utility.yul\":3744:3751   */\n      dup5\n        /* \"#utility.yul\":3740:3763   */\n      sub\n        /* \"#utility.yul\":3736:3768   */\n      slt\n        /* \"#utility.yul\":3733:3785   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3781:3782   */\n      0x00\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3771:3783   */\n      revert\n        /* \"#utility.yul\":3733:3785   */\n    tag_366:\n      pop\n        /* \"#utility.yul\":3804:3820   */\n      mload\n      swap2\n        /* \"#utility.yul\":3642:3826   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3831:4063   */\n    tag_201:\n        /* \"#utility.yul\":3870:3873   */\n      0x00\n        /* \"#utility.yul\":3891:3908   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3888:4028   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":3950:3960   */\n      0x4e487b71\n        /* \"#utility.yul\":3945:3948   */\n      0xe0\n        /* \"#utility.yul\":3941:3961   */\n      shl\n        /* \"#utility.yul\":3938:3939   */\n      0x00\n        /* \"#utility.yul\":3931:3962   */\n      mstore\n        /* \"#utility.yul\":3985:3989   */\n      0x11\n        /* \"#utility.yul\":3982:3983   */\n      0x04\n        /* \"#utility.yul\":3975:3990   */\n      mstore\n        /* \"#utility.yul\":4013:4017   */\n      0x24\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4003:4018   */\n      revert\n        /* \"#utility.yul\":3888:4028   */\n    tag_368:\n      pop\n        /* \"#utility.yul\":4055:4056   */\n      0x01\n        /* \"#utility.yul\":4044:4057   */\n      add\n      swap1\n        /* \"#utility.yul\":3831:4063   */\n      jump\t// out\n        /* \"#utility.yul\":4068:4195   */\n    tag_204:\n        /* \"#utility.yul\":4129:4139   */\n      0x4e487b71\n        /* \"#utility.yul\":4124:4127   */\n      0xe0\n        /* \"#utility.yul\":4120:4140   */\n      shl\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4110:4141   */\n      mstore\n        /* \"#utility.yul\":4160:4164   */\n      0x41\n        /* \"#utility.yul\":4157:4158   */\n      0x04\n        /* \"#utility.yul\":4150:4165   */\n      mstore\n        /* \"#utility.yul\":4184:4188   */\n      0x24\n        /* \"#utility.yul\":4181:4182   */\n      0x00\n        /* \"#utility.yul\":4174:4189   */\n      revert\n        /* \"#utility.yul\":4479:4756   */\n    tag_284:\n        /* \"#utility.yul\":4546:4552   */\n      0x00\n        /* \"#utility.yul\":4599:4601   */\n      0x20\n        /* \"#utility.yul\":4587:4596   */\n      dup3\n        /* \"#utility.yul\":4578:4585   */\n      dup5\n        /* \"#utility.yul\":4574:4597   */\n      sub\n        /* \"#utility.yul\":4570:4602   */\n      slt\n        /* \"#utility.yul\":4567:4619   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":4615:4616   */\n      0x00\n        /* \"#utility.yul\":4612:4613   */\n      0x00\n        /* \"#utility.yul\":4605:4617   */\n      revert\n        /* \"#utility.yul\":4567:4619   */\n    tag_372:\n        /* \"#utility.yul\":4647:4656   */\n      dup2\n        /* \"#utility.yul\":4641:4657   */\n      mload\n        /* \"#utility.yul\":4700:4705   */\n      dup1\n        /* \"#utility.yul\":4693:4706   */\n      iszero\n        /* \"#utility.yul\":4686:4707   */\n      iszero\n        /* \"#utility.yul\":4679:4684   */\n      dup2\n        /* \"#utility.yul\":4676:4708   */\n      eq\n        /* \"#utility.yul\":4666:4726   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":4722:4723   */\n      0x00\n        /* \"#utility.yul\":4719:4720   */\n      0x00\n        /* \"#utility.yul\":4712:4724   */\n      revert\n\n    auxdata: 0xa2646970667358221220f5de4faa53a122164520a35f3f5572dbf6df9a4d96a7ac7a75e147509a4a9bce64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_315": {
									"entryPoint": null,
									"id": 315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_420": {
									"entryPoint": null,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_697": {
									"entryPoint": null,
									"id": 697,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 266,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:920:7",
										"nodeType": "YulBlock",
										"src": "0:920:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:7",
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nativeSrc": "84:22:7",
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nativeSrc": "93:13:7",
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:7",
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nativeSrc": "171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nativeSrc": "171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:7",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:7",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nativeSrc": "150:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:7",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nativeSrc": "146:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nativeSrc": "135:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nativeSrc": "125:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nativeSrc": "118:50:7",
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nativeSrc": "115:70:7",
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:7",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "328:382:7",
													"nodeType": "YulBlock",
													"src": "328:382:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:7",
																"nodeType": "YulBlock",
																"src": "375:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:7",
																					"nodeType": "YulLiteral",
																					"src": "384:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:7",
																					"nodeType": "YulLiteral",
																					"src": "387:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:7"
																			},
																			"nativeSrc": "377:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:7"
																		},
																		"nativeSrc": "377:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:7"
																		},
																		"nativeSrc": "345:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:7",
																		"nodeType": "YulLiteral",
																		"src": "370:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:7"
																},
																"nativeSrc": "341:33:7",
																"nodeType": "YulFunctionCall",
																"src": "341:33:7"
															},
															"nativeSrc": "338:53:7",
															"nodeType": "YulIf",
															"src": "338:53:7"
														},
														{
															"nativeSrc": "400:50:7",
															"nodeType": "YulAssignment",
															"src": "400:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:7"
																},
																"nativeSrc": "410:40:7",
																"nodeType": "YulFunctionCall",
																"src": "410:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:7"
																}
															]
														},
														{
															"nativeSrc": "459:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "459:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "472:1:7",
																"nodeType": "YulLiteral",
																"src": "472:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "463:5:7",
																	"nodeType": "YulTypedName",
																	"src": "463:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "482:34:7",
															"nodeType": "YulAssignment",
															"src": "482:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "501:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "512:2:7",
																				"nodeType": "YulLiteral",
																				"src": "512:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:7"
																		},
																		"nativeSrc": "497:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "491:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "491:5:7"
																},
																"nativeSrc": "491:25:7",
																"nodeType": "YulFunctionCall",
																"src": "491:25:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "482:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "482:5:7"
																}
															]
														},
														{
															"nativeSrc": "525:15:7",
															"nodeType": "YulAssignment",
															"src": "525:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "535:5:7",
																"nodeType": "YulIdentifier",
																"src": "535:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:7"
																}
															]
														},
														{
															"nativeSrc": "549:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "549:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "564:1:7",
																"nodeType": "YulLiteral",
																"src": "564:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "553:7:7",
																	"nodeType": "YulTypedName",
																	"src": "553:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "574:36:7",
															"nodeType": "YulAssignment",
															"src": "574:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "595:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "595:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "606:2:7",
																				"nodeType": "YulLiteral",
																				"src": "606:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "591:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "591:3:7"
																		},
																		"nativeSrc": "591:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "591:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "585:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "585:5:7"
																},
																"nativeSrc": "585:25:7",
																"nodeType": "YulFunctionCall",
																"src": "585:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "574:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "574:7:7"
																}
															]
														},
														{
															"nativeSrc": "619:17:7",
															"nodeType": "YulAssignment",
															"src": "619:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "629:7:7",
																"nodeType": "YulIdentifier",
																"src": "629:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "619:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:7"
																}
															]
														},
														{
															"nativeSrc": "645:59:7",
															"nodeType": "YulAssignment",
															"src": "645:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "689:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "689:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "700:2:7",
																				"nodeType": "YulLiteral",
																				"src": "700:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "685:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:7"
																		},
																		"nativeSrc": "685:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "685:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "655:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "655:29:7"
																},
																"nativeSrc": "655:49:7",
																"nodeType": "YulFunctionCall",
																"src": "655:49:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "196:514:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:7",
														"nodeType": "YulTypedName",
														"src": "270:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:7",
														"nodeType": "YulTypedName",
														"src": "281:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:7",
														"nodeType": "YulTypedName",
														"src": "293:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:7",
														"nodeType": "YulTypedName",
														"src": "301:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:7",
														"nodeType": "YulTypedName",
														"src": "309:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:7",
														"nodeType": "YulTypedName",
														"src": "317:6:7",
														"type": ""
													}
												],
												"src": "196:514:7"
											},
											{
												"body": {
													"nativeSrc": "816:102:7",
													"nodeType": "YulBlock",
													"src": "816:102:7",
													"statements": [
														{
															"nativeSrc": "826:26:7",
															"nodeType": "YulAssignment",
															"src": "826:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "838:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:2:7",
																		"nodeType": "YulLiteral",
																		"src": "849:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:7"
																},
																"nativeSrc": "834:18:7",
																"nodeType": "YulFunctionCall",
																"src": "834:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "826:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "883:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:3:7",
																								"nodeType": "YulLiteral",
																								"src": "899:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "904:1:7",
																								"nodeType": "YulLiteral",
																								"src": "904:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "895:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:7"
																						},
																						"nativeSrc": "895:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "908:1:7",
																						"nodeType": "YulLiteral",
																						"src": "908:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "891:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:7"
																				},
																				"nativeSrc": "891:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "879:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:7"
																		},
																		"nativeSrc": "879:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:7"
																},
																"nativeSrc": "861:51:7",
																"nodeType": "YulFunctionCall",
																"src": "861:51:7"
															},
															"nativeSrc": "861:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "861:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "715:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:7",
														"nodeType": "YulTypedName",
														"src": "785:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "796:6:7",
														"nodeType": "YulTypedName",
														"src": "796:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "807:4:7",
														"nodeType": "YulTypedName",
														"src": "807:4:7",
														"type": ""
													}
												],
												"src": "715:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let value := 0\n        value := mload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 64))\n        value2 := value_1\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1595 CODESIZE SUB DUP1 PUSH2 0x1595 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x174 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x10A JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x91 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH0 SUB PUSH2 0xCF JUMPI PUSH1 0x40 MLOAD PUSH4 0xD428A01 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 SUB PUSH2 0xEF JUMPI PUSH1 0x40 MLOAD PUSH4 0x36C5EEC7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE POP PUSH2 0x1B8 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16F JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x190 DUP6 PUSH2 0x159 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1AD PUSH1 0x60 DUP7 ADD PUSH2 0x159 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x13A9 PUSH2 0x1EC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x178 ADD MSTORE DUP2 DUP2 PUSH2 0x6C5 ADD MSTORE DUP2 DUP2 PUSH2 0xCA6 ADD MSTORE DUP2 DUP2 PUSH2 0xD3C ADD MSTORE PUSH2 0x1063 ADD MSTORE PUSH2 0x13A9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85737020 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xE082FE2A GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xE082FE2A EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xE3BB2D40 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE8A748E7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF22069DF EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFC05542A EQ PUSH2 0x32C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x85737020 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xA0858343 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xA34DB0A0 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA6A09811 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xC9539F71 EQ PUSH2 0x2D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FF65C20 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FF65C20 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7069243C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x741AE614 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7A0ABF08 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x81AEB13B EQ PUSH2 0x245 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1318FBF1 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1FCCF672 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x3960FC66 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x528780CC EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x64BB632F EQ PUSH2 0x1E6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x160 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x357 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x442 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x160 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1BA PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x1BA PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x35F PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x367 PUSH2 0xECC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x371 PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36C5EEC7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0x2E31E8893A04CE5258044D342D7658948A6AC9710D97E32462AB75F131AE11EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3E2 PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD428A01 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xF0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94 SWAP2 ADD PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x44A PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x367 PUSH0 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x45B PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SUB PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x49A PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x4EB JUMPI PUSH2 0x4EB PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x572 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x47F JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x57D JUMP JUMPDEST POP PUSH32 0x9A9F2A64A3B0B4774DA60129AA707715E049CB95062F7ACAAFFC07DDC244C1CC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP3 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x61A PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x622 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EE5F6F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75E DUP4 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0x767 DUP4 PUSH2 0x1014 JUMP JUMPDEST POP POP PUSH2 0x772 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 DUP2 SWAP1 SUB PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x805 JUMPI PUSH1 0x3 PUSH0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x7B9 JUMPI PUSH2 0x7B9 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7FD JUMPI DUP2 PUSH2 0x7F9 DUP2 PUSH2 0x131C JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x79C JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x820 JUMPI PUSH2 0x820 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x849 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x90F JUMPI PUSH1 0x3 PUSH0 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x907 JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0x8B4 JUMPI PUSH2 0x8B4 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST DUP4 DUP4 PUSH2 0x8D4 DUP2 PUSH2 0x131C JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x8E6 JUMPI PUSH2 0x8E6 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x84F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x923 PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SUB PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA3C JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x962 JUMPI PUSH2 0x962 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA34 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x9FA JUMPI PUSH2 0x9FA PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x947 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA1 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA5D JUMPI PUSH2 0xA5D PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA72 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xA3F JUMP JUMPDEST POP PUSH32 0xD68B41369D54FACA53E699320360840DB6E0E2E175D3974EB304FD18713D916B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP3 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0xADB PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xAEB PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA354190DD7342316E40E5358C9F72037F2C677CDC057D3DEBBC4F1B62495E2E2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xBB7 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1AFDE38C60D2BE0D28D001619816D86C39CE78B350C9D94F23C095099B9C1D27 SWAP2 ADD PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xC7F PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xC87 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16E3FF05 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xD7A PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27FCD9D1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097 PUSH2 0xE3A PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x367 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xE6E PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH2 0x772 DUP2 PUSH2 0xF1E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x1037 JUMPI PUSH1 0x40 MLOAD PUSH3 0x27007F PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CD SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x78ECF41 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E SWAP2 ADD PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x1141 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF01 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11E4 DUP3 PUSH2 0x11B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1238 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x124C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x129C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1275 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP4 PUSH1 0x40 DUP4 ADD DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12E6 DUP5 PUSH2 0x11B0 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12CD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1315 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1339 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11E4 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDE 0x4F 0xAA MSTORE8 LOG1 0x22 AND GASLIMIT KECCAK256 LOG3 PUSH0 EXTCODEHASH SSTORE PUSH19 0xDBF6DF9A4D96A7AC7A75E147509A4A9BCE6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "301:11046:6:-:0;;;2982:811;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3178:23;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;861:51:7;834:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:5;2061:21;;1231:7:4;:15;;-1:-1:-1;;1231:15:4;;;-1:-1:-1;;;;;3230:37:6;::::1;::::0;;:83:::1;;-1:-1:-1::0;;;;;;3283:30:6;::::1;::::0;3230:83:::1;3213:156;;;3345:13;;-1:-1:-1::0;;;3345:13:6::1;;;;;;;;;;;3213:156;3382:32;3418:1;3382:37:::0;3378:101:::1;;3442:26;;-1:-1:-1::0;;;3442:26:6::1;;;;;;;;;;;3378:101;3493:27;3524:1;3493:32:::0;3489:105:::1;;3548:35;;-1:-1:-1::0;;;3548:35:6::1;;;;;;;;;;;3489:105;-1:-1:-1::0;;;;;3604:39:6::1;;::::0;3654:31:::1;:66:::0;;;;3730:26:::1;:56:::0;-1:-1:-1;301:11046:6;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:514::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;512:2;497:18;;491:25;606:2;591:18;;585:25;400:50;;-1:-1:-1;491:25:7;-1:-1:-1;585:25:7;-1:-1:-1;655:49:7;700:2;685:18;;655:49;:::i;:::-;645:59;;196:514;;;;;;;:::o;715:203::-;301:11046:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 3744,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_455": {
									"entryPoint": null,
									"id": 455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_447": {
									"entryPoint": 3985,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_381": {
									"entryPoint": 4409,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_352": {
									"entryPoint": 3949,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_365": {
									"entryPoint": 4470,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3870,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_397": {
									"entryPoint": 3788,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blacklistMultipleWhitelistedAddresses_934": {
									"entryPoint": 2331,
									"id": 934,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@blacklistOneWhitelistedAddress_761": {
									"entryPoint": 2787,
									"id": 761,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cUSD_482": {
									"entryPoint": null,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkIfParticipantHasAlreadyClaimedReward_1268": {
									"entryPoint": null,
									"id": 1268,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkIfUserAddressIsBlacklisted_1293": {
									"entryPoint": null,
									"id": 1293,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkIfUserAddressIsWhitelisted_1280": {
									"entryPoint": null,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNumberOfRewardedParticipants_1309": {
									"entryPoint": null,
									"id": 1309,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardAmountPerParticipantInWei_1301": {
									"entryPoint": null,
									"id": 1301,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWhitelistedAddressesFromRegisteredAddresses_1256": {
									"entryPoint": 1909,
									"id": 1256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@markParticipantAsHavingClaimedReward_988": {
									"entryPoint": 4027,
									"id": 988,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@numberOfRewardedParticipants_496": {
									"entryPoint": null,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pauseSurvey_1151": {
									"entryPoint": 2771,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processRewardClaimByParticipant_972": {
									"entryPoint": 1554,
									"id": 972,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1090,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmountPerParticipantInWei_492": {
									"entryPoint": null,
									"id": 492,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardParticipant_1026": {
									"entryPoint": 4116,
									"id": 1026,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@targetNumberOfParticipants_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3686,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpauseSurvey_1160": {
									"entryPoint": 855,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateRewardAmountPerParticipant_1109": {
									"entryPoint": 986,
									"id": 1109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTargetNumberOfParticipants_1142": {
									"entryPoint": 873,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelistMultipleAddresses_847": {
									"entryPoint": 1107,
									"id": 847,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@whitelistOneAddress_729": {
									"entryPoint": 2991,
									"id": 729,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawAllRewardFundsToResearcher_1076": {
									"entryPoint": 3191,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4758:7",
										"nodeType": "YulBlock",
										"src": "0:4758:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "319:102:7",
													"nodeType": "YulBlock",
													"src": "319:102:7",
													"statements": [
														{
															"nativeSrc": "329:26:7",
															"nodeType": "YulAssignment",
															"src": "329:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "341:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "341:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:2:7",
																		"nodeType": "YulLiteral",
																		"src": "352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "337:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:7"
																},
																"nativeSrc": "337:18:7",
																"nodeType": "YulFunctionCall",
																"src": "337:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "329:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "329:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "371:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "386:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "386:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "402:3:7",
																								"nodeType": "YulLiteral",
																								"src": "402:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:1:7",
																								"nodeType": "YulLiteral",
																								"src": "407:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "398:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:7"
																						},
																						"nativeSrc": "398:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "398:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "411:1:7",
																						"nodeType": "YulLiteral",
																						"src": "411:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "394:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:7"
																				},
																				"nativeSrc": "394:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "394:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:7"
																		},
																		"nativeSrc": "382:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "382:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "364:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "364:6:7"
																},
																"nativeSrc": "364:51:7",
																"nodeType": "YulFunctionCall",
																"src": "364:51:7"
															},
															"nativeSrc": "364:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "364:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed",
												"nativeSrc": "196:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "288:9:7",
														"nodeType": "YulTypedName",
														"src": "288:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "299:6:7",
														"nodeType": "YulTypedName",
														"src": "299:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "310:4:7",
														"nodeType": "YulTypedName",
														"src": "310:4:7",
														"type": ""
													}
												],
												"src": "196:225:7"
											},
											{
												"body": {
													"nativeSrc": "496:110:7",
													"nodeType": "YulBlock",
													"src": "496:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "542:16:7",
																"nodeType": "YulBlock",
																"src": "542:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "551:1:7",
																					"nodeType": "YulLiteral",
																					"src": "551:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "554:1:7",
																					"nodeType": "YulLiteral",
																					"src": "554:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "544:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "544:6:7"
																			},
																			"nativeSrc": "544:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "544:12:7"
																		},
																		"nativeSrc": "544:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "544:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "517:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "517:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "526:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "526:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "513:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "513:3:7"
																		},
																		"nativeSrc": "513:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "513:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "538:2:7",
																		"nodeType": "YulLiteral",
																		"src": "538:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:3:7"
																},
																"nativeSrc": "509:32:7",
																"nodeType": "YulFunctionCall",
																"src": "509:32:7"
															},
															"nativeSrc": "506:52:7",
															"nodeType": "YulIf",
															"src": "506:52:7"
														},
														{
															"nativeSrc": "567:33:7",
															"nodeType": "YulAssignment",
															"src": "567:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "590:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "577:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "577:12:7"
																},
																"nativeSrc": "577:23:7",
																"nodeType": "YulFunctionCall",
																"src": "577:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "567:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "426:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "462:9:7",
														"nodeType": "YulTypedName",
														"src": "462:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "473:7:7",
														"nodeType": "YulTypedName",
														"src": "473:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "485:6:7",
														"nodeType": "YulTypedName",
														"src": "485:6:7",
														"type": ""
													}
												],
												"src": "426:180:7"
											},
											{
												"body": {
													"nativeSrc": "706:92:7",
													"nodeType": "YulBlock",
													"src": "706:92:7",
													"statements": [
														{
															"nativeSrc": "716:26:7",
															"nodeType": "YulAssignment",
															"src": "716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "728:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "728:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "739:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "724:3:7"
																},
																"nativeSrc": "724:18:7",
																"nodeType": "YulFunctionCall",
																"src": "724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "716:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "716:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "758:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "758:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "783:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "783:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "776:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "776:6:7"
																				},
																				"nativeSrc": "776:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "776:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "769:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "769:6:7"
																		},
																		"nativeSrc": "769:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "769:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:7"
																},
																"nativeSrc": "751:41:7",
																"nodeType": "YulFunctionCall",
																"src": "751:41:7"
															},
															"nativeSrc": "751:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "751:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "611:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "675:9:7",
														"nodeType": "YulTypedName",
														"src": "675:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "686:6:7",
														"nodeType": "YulTypedName",
														"src": "686:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "697:4:7",
														"nodeType": "YulTypedName",
														"src": "697:4:7",
														"type": ""
													}
												],
												"src": "611:187:7"
											},
											{
												"body": {
													"nativeSrc": "852:124:7",
													"nodeType": "YulBlock",
													"src": "852:124:7",
													"statements": [
														{
															"nativeSrc": "862:29:7",
															"nodeType": "YulAssignment",
															"src": "862:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "871:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "871:12:7"
																},
																"nativeSrc": "871:20:7",
																"nodeType": "YulFunctionCall",
																"src": "871:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "862:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "862:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "954:16:7",
																"nodeType": "YulBlock",
																"src": "954:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "963:1:7",
																					"nodeType": "YulLiteral",
																					"src": "963:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "966:1:7",
																					"nodeType": "YulLiteral",
																					"src": "966:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "956:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:7"
																			},
																			"nativeSrc": "956:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "956:12:7"
																		},
																		"nativeSrc": "956:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "956:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "913:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "913:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "924:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "924:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "939:3:7",
																										"nodeType": "YulLiteral",
																										"src": "939:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "944:1:7",
																										"nodeType": "YulLiteral",
																										"src": "944:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "935:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "935:3:7"
																								},
																								"nativeSrc": "935:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "935:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "948:1:7",
																								"nodeType": "YulLiteral",
																								"src": "948:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "931:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "931:3:7"
																						},
																						"nativeSrc": "931:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "931:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "920:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:7"
																				},
																				"nativeSrc": "920:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "920:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "910:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "910:2:7"
																		},
																		"nativeSrc": "910:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "910:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																},
																"nativeSrc": "903:50:7",
																"nodeType": "YulFunctionCall",
																"src": "903:50:7"
															},
															"nativeSrc": "900:70:7",
															"nodeType": "YulIf",
															"src": "900:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "803:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "831:6:7",
														"nodeType": "YulTypedName",
														"src": "831:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "842:5:7",
														"nodeType": "YulTypedName",
														"src": "842:5:7",
														"type": ""
													}
												],
												"src": "803:173:7"
											},
											{
												"body": {
													"nativeSrc": "1051:116:7",
													"nodeType": "YulBlock",
													"src": "1051:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1097:16:7",
																"nodeType": "YulBlock",
																"src": "1097:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1106:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1106:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1109:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1099:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1099:6:7"
																			},
																			"nativeSrc": "1099:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1099:12:7"
																		},
																		"nativeSrc": "1099:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1099:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1072:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1072:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1081:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1068:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:7"
																		},
																		"nativeSrc": "1068:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1068:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1093:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1093:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1064:3:7"
																},
																"nativeSrc": "1064:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1064:32:7"
															},
															"nativeSrc": "1061:52:7",
															"nodeType": "YulIf",
															"src": "1061:52:7"
														},
														{
															"nativeSrc": "1122:39:7",
															"nodeType": "YulAssignment",
															"src": "1122:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1132:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1132:18:7"
																},
																"nativeSrc": "1132:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1132:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1122:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "981:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1017:9:7",
														"nodeType": "YulTypedName",
														"src": "1017:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1028:7:7",
														"nodeType": "YulTypedName",
														"src": "1028:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1040:6:7",
														"nodeType": "YulTypedName",
														"src": "1040:6:7",
														"type": ""
													}
												],
												"src": "981:186:7"
											},
											{
												"body": {
													"nativeSrc": "1277:505:7",
													"nodeType": "YulBlock",
													"src": "1277:505:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1323:16:7",
																"nodeType": "YulBlock",
																"src": "1323:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1332:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1332:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1335:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1335:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1325:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1325:6:7"
																			},
																			"nativeSrc": "1325:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1325:12:7"
																		},
																		"nativeSrc": "1325:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1325:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1298:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1298:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1307:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1307:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1294:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:7"
																		},
																		"nativeSrc": "1294:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1294:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1319:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1319:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1290:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:7"
																},
																"nativeSrc": "1290:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1290:32:7"
															},
															"nativeSrc": "1287:52:7",
															"nodeType": "YulIf",
															"src": "1287:52:7"
														},
														{
															"nativeSrc": "1348:37:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1348:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1375:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1362:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:7"
																},
																"nativeSrc": "1362:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1362:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1352:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1352:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1428:16:7",
																"nodeType": "YulBlock",
																"src": "1428:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1437:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1437:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1440:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1430:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1430:6:7"
																			},
																			"nativeSrc": "1430:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1430:12:7"
																		},
																		"nativeSrc": "1430:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1430:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1400:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1400:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1408:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1408:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1397:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1397:2:7"
																},
																"nativeSrc": "1397:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1397:30:7"
															},
															"nativeSrc": "1394:50:7",
															"nodeType": "YulIf",
															"src": "1394:50:7"
														},
														{
															"nativeSrc": "1453:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1453:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1467:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1467:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1463:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1463:3:7"
																},
																"nativeSrc": "1463:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1463:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1457:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1457:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1533:16:7",
																"nodeType": "YulBlock",
																"src": "1533:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1542:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1545:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1535:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1535:6:7"
																			},
																			"nativeSrc": "1535:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1535:12:7"
																		},
																		"nativeSrc": "1535:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1512:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1512:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1516:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1508:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:7"
																				},
																				"nativeSrc": "1508:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1523:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1523:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:7"
																		},
																		"nativeSrc": "1504:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:7"
																},
																"nativeSrc": "1497:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1497:35:7"
															},
															"nativeSrc": "1494:55:7",
															"nodeType": "YulIf",
															"src": "1494:55:7"
														},
														{
															"nativeSrc": "1558:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1558:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1585:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1585:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1572:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1572:12:7"
																},
																"nativeSrc": "1572:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1572:16:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1562:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1562:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1631:16:7",
																"nodeType": "YulBlock",
																"src": "1631:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1640:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1643:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1633:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:7"
																			},
																			"nativeSrc": "1633:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1633:12:7"
																		},
																		"nativeSrc": "1633:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1603:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1603:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1611:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1611:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1600:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1600:2:7"
																},
																"nativeSrc": "1600:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1600:30:7"
															},
															"nativeSrc": "1597:50:7",
															"nodeType": "YulIf",
															"src": "1597:50:7"
														},
														{
															"body": {
																"nativeSrc": "1705:16:7",
																"nodeType": "YulBlock",
																"src": "1705:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1714:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1714:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1717:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1717:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1707:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:7"
																			},
																			"nativeSrc": "1707:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1707:12:7"
																		},
																		"nativeSrc": "1707:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1707:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1670:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1670:2:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1678:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1678:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1681:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "1681:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1674:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1674:3:7"
																						},
																						"nativeSrc": "1674:14:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1674:14:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1666:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1666:3:7"
																				},
																				"nativeSrc": "1666:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1666:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1691:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1691:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1662:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1662:3:7"
																		},
																		"nativeSrc": "1662:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1662:32:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1696:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1696:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1659:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1659:2:7"
																},
																"nativeSrc": "1659:45:7",
																"nodeType": "YulFunctionCall",
																"src": "1659:45:7"
															},
															"nativeSrc": "1656:65:7",
															"nodeType": "YulIf",
															"src": "1656:65:7"
														},
														{
															"nativeSrc": "1730:21:7",
															"nodeType": "YulAssignment",
															"src": "1730:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1744:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1744:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1748:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1748:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1740:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1740:3:7"
																},
																"nativeSrc": "1740:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1740:11:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1730:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1730:6:7"
																}
															]
														},
														{
															"nativeSrc": "1760:16:7",
															"nodeType": "YulAssignment",
															"src": "1760:16:7",
															"value": {
																"name": "length",
																"nativeSrc": "1770:6:7",
																"nodeType": "YulIdentifier",
																"src": "1770:6:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1760:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1172:610:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1235:9:7",
														"nodeType": "YulTypedName",
														"src": "1235:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1246:7:7",
														"nodeType": "YulTypedName",
														"src": "1246:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1258:6:7",
														"nodeType": "YulTypedName",
														"src": "1258:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1266:6:7",
														"nodeType": "YulTypedName",
														"src": "1266:6:7",
														"type": ""
													}
												],
												"src": "1172:610:7"
											},
											{
												"body": {
													"nativeSrc": "1888:102:7",
													"nodeType": "YulBlock",
													"src": "1888:102:7",
													"statements": [
														{
															"nativeSrc": "1898:26:7",
															"nodeType": "YulAssignment",
															"src": "1898:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1910:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1910:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1921:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1921:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:7"
																},
																"nativeSrc": "1906:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1906:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1898:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1898:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1940:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1940:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1955:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1955:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1971:3:7",
																								"nodeType": "YulLiteral",
																								"src": "1971:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1976:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1976:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1967:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1967:3:7"
																						},
																						"nativeSrc": "1967:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1967:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1980:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1980:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1963:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1963:3:7"
																				},
																				"nativeSrc": "1963:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1963:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1951:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1951:3:7"
																		},
																		"nativeSrc": "1951:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1951:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1933:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:7"
																},
																"nativeSrc": "1933:51:7",
																"nodeType": "YulFunctionCall",
																"src": "1933:51:7"
															},
															"nativeSrc": "1933:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "1933:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1787:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1857:9:7",
														"nodeType": "YulTypedName",
														"src": "1857:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1868:6:7",
														"nodeType": "YulTypedName",
														"src": "1868:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1879:4:7",
														"nodeType": "YulTypedName",
														"src": "1879:4:7",
														"type": ""
													}
												],
												"src": "1787:203:7"
											},
											{
												"body": {
													"nativeSrc": "2146:486:7",
													"nodeType": "YulBlock",
													"src": "2146:486:7",
													"statements": [
														{
															"nativeSrc": "2156:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2156:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2174:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2174:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2185:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:7"
																},
																"nativeSrc": "2170:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2170:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2160:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2160:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2204:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2204:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2215:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2215:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2197:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:7"
																},
																"nativeSrc": "2197:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2197:21:7"
															},
															"nativeSrc": "2197:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2197:21:7"
														},
														{
															"nativeSrc": "2227:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2227:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2238:6:7",
																"nodeType": "YulIdentifier",
																"src": "2238:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2231:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2231:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2253:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2253:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2273:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2273:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2267:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2267:5:7"
																},
																"nativeSrc": "2267:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2267:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2257:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2257:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2296:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2296:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2304:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2289:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:7"
																},
																"nativeSrc": "2289:22:7",
																"nodeType": "YulFunctionCall",
																"src": "2289:22:7"
															},
															"nativeSrc": "2289:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "2289:22:7"
														},
														{
															"nativeSrc": "2320:25:7",
															"nodeType": "YulAssignment",
															"src": "2320:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2331:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2342:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2342:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2327:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:7"
																},
																"nativeSrc": "2327:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2327:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2320:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:7"
																}
															]
														},
														{
															"nativeSrc": "2354:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2354:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2372:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2372:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2380:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2380:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2368:3:7"
																},
																"nativeSrc": "2368:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2368:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2358:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2358:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2392:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2392:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2401:1:7",
																"nodeType": "YulLiteral",
																"src": "2401:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2396:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2396:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2460:146:7",
																"nodeType": "YulBlock",
																"src": "2460:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2481:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2481:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2496:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2496:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2490:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2490:5:7"
																							},
																							"nativeSrc": "2490:13:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2490:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2513:3:7",
																											"nodeType": "YulLiteral",
																											"src": "2513:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2518:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2518:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2509:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2509:3:7"
																									},
																									"nativeSrc": "2509:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2509:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2522:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2522:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2505:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2505:3:7"
																							},
																							"nativeSrc": "2505:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2505:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2486:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2486:3:7"
																					},
																					"nativeSrc": "2486:39:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2486:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2474:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:7"
																			},
																			"nativeSrc": "2474:52:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2474:52:7"
																		},
																		"nativeSrc": "2474:52:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:52:7"
																	},
																	{
																		"nativeSrc": "2539:19:7",
																		"nodeType": "YulAssignment",
																		"src": "2539:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2550:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2550:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2555:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2555:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2546:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2546:3:7"
																			},
																			"nativeSrc": "2546:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2546:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2539:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2539:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2571:25:7",
																		"nodeType": "YulAssignment",
																		"src": "2571:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2585:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2585:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2593:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2593:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2581:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2581:3:7"
																			},
																			"nativeSrc": "2581:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2581:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2571:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2571:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2422:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2422:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2425:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2425:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2419:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2419:2:7"
																},
																"nativeSrc": "2419:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2419:13:7"
															},
															"nativeSrc": "2411:195:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2433:18:7",
																"nodeType": "YulBlock",
																"src": "2433:18:7",
																"statements": [
																	{
																		"nativeSrc": "2435:14:7",
																		"nodeType": "YulAssignment",
																		"src": "2435:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2444:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2444:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2447:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2440:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2440:3:7"
																			},
																			"nativeSrc": "2440:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2435:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2435:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2415:3:7",
																"nodeType": "YulBlock",
																"src": "2415:3:7",
																"statements": []
															},
															"src": "2411:195:7"
														},
														{
															"nativeSrc": "2615:11:7",
															"nodeType": "YulAssignment",
															"src": "2615:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "2623:3:7",
																"nodeType": "YulIdentifier",
																"src": "2623:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1995:637:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2115:9:7",
														"nodeType": "YulTypedName",
														"src": "2115:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2126:6:7",
														"nodeType": "YulTypedName",
														"src": "2126:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2137:4:7",
														"nodeType": "YulTypedName",
														"src": "2137:4:7",
														"type": ""
													}
												],
												"src": "1995:637:7"
											},
											{
												"body": {
													"nativeSrc": "2766:119:7",
													"nodeType": "YulBlock",
													"src": "2766:119:7",
													"statements": [
														{
															"nativeSrc": "2776:26:7",
															"nodeType": "YulAssignment",
															"src": "2776:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2788:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2788:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2799:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2784:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2784:3:7"
																},
																"nativeSrc": "2784:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2784:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2776:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2776:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2818:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2818:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2829:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2811:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2811:6:7"
																},
																"nativeSrc": "2811:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2811:25:7"
															},
															"nativeSrc": "2811:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "2811:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2856:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2867:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2867:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:7"
																		},
																		"nativeSrc": "2852:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2872:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2845:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:7"
																},
																"nativeSrc": "2845:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2845:34:7"
															},
															"nativeSrc": "2845:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2845:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2637:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2727:9:7",
														"nodeType": "YulTypedName",
														"src": "2727:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2738:6:7",
														"nodeType": "YulTypedName",
														"src": "2738:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2746:6:7",
														"nodeType": "YulTypedName",
														"src": "2746:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2757:4:7",
														"nodeType": "YulTypedName",
														"src": "2757:4:7",
														"type": ""
													}
												],
												"src": "2637:248:7"
											},
											{
												"body": {
													"nativeSrc": "2922:95:7",
													"nodeType": "YulBlock",
													"src": "2922:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2946:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2946:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2951:10:7",
																				"nodeType": "YulLiteral",
																				"src": "2951:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2942:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2942:3:7"
																		},
																		"nativeSrc": "2942:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2942:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:7"
																},
																"nativeSrc": "2932:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2932:31:7"
															},
															"nativeSrc": "2932:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2932:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2979:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2979:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2982:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2982:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:7"
																},
																"nativeSrc": "2972:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2972:15:7"
															},
															"nativeSrc": "2972:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2972:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3003:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3006:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3006:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2996:6:7"
																},
																"nativeSrc": "2996:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2996:15:7"
															},
															"nativeSrc": "2996:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2996:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2890:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2890:127:7"
											},
											{
												"body": {
													"nativeSrc": "3183:454:7",
													"nodeType": "YulBlock",
													"src": "3183:454:7",
													"statements": [
														{
															"nativeSrc": "3193:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3193:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3211:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3222:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3207:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:7"
																},
																"nativeSrc": "3207:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3207:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3197:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3197:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3241:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3241:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:7"
																},
																"nativeSrc": "3234:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3234:21:7"
															},
															"nativeSrc": "3234:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3234:21:7"
														},
														{
															"nativeSrc": "3264:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3264:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "3275:6:7",
																"nodeType": "YulIdentifier",
																"src": "3275:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3268:3:7",
																	"nodeType": "YulTypedName",
																	"src": "3268:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "3297:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3297:6:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3305:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3305:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:7"
																},
																"nativeSrc": "3290:22:7",
																"nodeType": "YulFunctionCall",
																"src": "3290:22:7"
															},
															"nativeSrc": "3290:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "3290:22:7"
														},
														{
															"nativeSrc": "3321:25:7",
															"nodeType": "YulAssignment",
															"src": "3321:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3332:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3332:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3343:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3343:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3328:3:7"
																},
																"nativeSrc": "3328:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3328:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:7"
																}
															]
														},
														{
															"nativeSrc": "3355:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3355:20:7",
															"value": {
																"name": "value0",
																"nativeSrc": "3369:6:7",
																"nodeType": "YulIdentifier",
																"src": "3369:6:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3359:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3359:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3384:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3384:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3393:1:7",
																"nodeType": "YulLiteral",
																"src": "3393:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3388:1:7",
																	"nodeType": "YulTypedName",
																	"src": "3388:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3452:159:7",
																"nodeType": "YulBlock",
																"src": "3452:159:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3473:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3473:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "3501:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3501:6:7"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_address",
																								"nativeSrc": "3482:18:7",
																								"nodeType": "YulIdentifier",
																								"src": "3482:18:7"
																							},
																							"nativeSrc": "3482:26:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3482:26:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3518:3:7",
																											"nodeType": "YulLiteral",
																											"src": "3518:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3523:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3523:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3514:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3514:3:7"
																									},
																									"nativeSrc": "3514:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3514:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3527:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3527:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3510:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3510:3:7"
																							},
																							"nativeSrc": "3510:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3510:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3478:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3478:3:7"
																					},
																					"nativeSrc": "3478:52:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3478:52:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3466:6:7"
																			},
																			"nativeSrc": "3466:65:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3466:65:7"
																		},
																		"nativeSrc": "3466:65:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3466:65:7"
																	},
																	{
																		"nativeSrc": "3544:19:7",
																		"nodeType": "YulAssignment",
																		"src": "3544:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3555:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3555:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3560:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3551:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3551:3:7"
																			},
																			"nativeSrc": "3551:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3551:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3544:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3544:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3576:25:7",
																		"nodeType": "YulAssignment",
																		"src": "3576:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3590:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3590:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3598:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3598:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3586:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3586:3:7"
																			},
																			"nativeSrc": "3586:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3586:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3576:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3576:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3414:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3414:1:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3417:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3417:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3411:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3411:2:7"
																},
																"nativeSrc": "3411:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3411:13:7"
															},
															"nativeSrc": "3403:208:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3425:18:7",
																"nodeType": "YulBlock",
																"src": "3425:18:7",
																"statements": [
																	{
																		"nativeSrc": "3427:14:7",
																		"nodeType": "YulAssignment",
																		"src": "3427:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3436:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "3436:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3439:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3439:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3432:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3432:3:7"
																			},
																			"nativeSrc": "3432:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3432:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3427:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3427:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3407:3:7",
																"nodeType": "YulBlock",
																"src": "3407:3:7",
																"statements": []
															},
															"src": "3403:208:7"
														},
														{
															"nativeSrc": "3620:11:7",
															"nodeType": "YulAssignment",
															"src": "3620:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "3628:3:7",
																"nodeType": "YulIdentifier",
																"src": "3628:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3620:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3022:615:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3144:9:7",
														"nodeType": "YulTypedName",
														"src": "3144:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3155:6:7",
														"nodeType": "YulTypedName",
														"src": "3155:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3163:6:7",
														"nodeType": "YulTypedName",
														"src": "3163:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3174:4:7",
														"nodeType": "YulTypedName",
														"src": "3174:4:7",
														"type": ""
													}
												],
												"src": "3022:615:7"
											},
											{
												"body": {
													"nativeSrc": "3723:103:7",
													"nodeType": "YulBlock",
													"src": "3723:103:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3769:16:7",
																"nodeType": "YulBlock",
																"src": "3769:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3778:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3778:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3781:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3771:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:6:7"
																			},
																			"nativeSrc": "3771:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3771:12:7"
																		},
																		"nativeSrc": "3771:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3771:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3744:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3744:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3753:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3740:3:7"
																		},
																		"nativeSrc": "3740:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3765:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3765:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:7"
																},
																"nativeSrc": "3736:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3736:32:7"
															},
															"nativeSrc": "3733:52:7",
															"nodeType": "YulIf",
															"src": "3733:52:7"
														},
														{
															"nativeSrc": "3794:26:7",
															"nodeType": "YulAssignment",
															"src": "3794:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3810:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3804:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:5:7"
																},
																"nativeSrc": "3804:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3794:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3794:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3642:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3689:9:7",
														"nodeType": "YulTypedName",
														"src": "3689:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3700:7:7",
														"nodeType": "YulTypedName",
														"src": "3700:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3712:6:7",
														"nodeType": "YulTypedName",
														"src": "3712:6:7",
														"type": ""
													}
												],
												"src": "3642:184:7"
											},
											{
												"body": {
													"nativeSrc": "3878:185:7",
													"nodeType": "YulBlock",
													"src": "3878:185:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3917:111:7",
																"nodeType": "YulBlock",
																"src": "3917:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3938:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3938:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3945:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3945:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3950:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3950:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3941:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3941:3:7"
																					},
																					"nativeSrc": "3941:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3941:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3931:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3931:6:7"
																			},
																			"nativeSrc": "3931:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3931:31:7"
																		},
																		"nativeSrc": "3931:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3931:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3982:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3985:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3985:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3975:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3975:6:7"
																			},
																			"nativeSrc": "3975:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3975:15:7"
																		},
																		"nativeSrc": "3975:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3975:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4010:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4010:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4013:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4013:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4003:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4003:6:7"
																			},
																			"nativeSrc": "4003:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4003:15:7"
																		},
																		"nativeSrc": "4003:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4003:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3894:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3905:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:7"
																		},
																		"nativeSrc": "3901:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3891:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3891:2:7"
																},
																"nativeSrc": "3891:17:7",
																"nodeType": "YulFunctionCall",
																"src": "3891:17:7"
															},
															"nativeSrc": "3888:140:7",
															"nodeType": "YulIf",
															"src": "3888:140:7"
														},
														{
															"nativeSrc": "4037:20:7",
															"nodeType": "YulAssignment",
															"src": "4037:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4048:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4048:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4055:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4044:3:7"
																},
																"nativeSrc": "4044:13:7",
																"nodeType": "YulFunctionCall",
																"src": "4044:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4037:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3831:232:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3860:5:7",
														"nodeType": "YulTypedName",
														"src": "3860:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3870:3:7",
														"nodeType": "YulTypedName",
														"src": "3870:3:7",
														"type": ""
													}
												],
												"src": "3831:232:7"
											},
											{
												"body": {
													"nativeSrc": "4100:95:7",
													"nodeType": "YulBlock",
													"src": "4100:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4117:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4117:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4124:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4124:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4129:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4129:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4120:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:7"
																		},
																		"nativeSrc": "4120:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4110:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:7"
																},
																"nativeSrc": "4110:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4110:31:7"
															},
															"nativeSrc": "4110:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4110:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4157:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4160:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4160:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4150:6:7"
																},
																"nativeSrc": "4150:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4150:15:7"
															},
															"nativeSrc": "4150:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4150:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4181:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4181:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4184:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4184:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4174:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4174:6:7"
																},
																"nativeSrc": "4174:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4174:15:7"
															},
															"nativeSrc": "4174:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4174:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4068:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4068:127:7"
											},
											{
												"body": {
													"nativeSrc": "4329:145:7",
													"nodeType": "YulBlock",
													"src": "4329:145:7",
													"statements": [
														{
															"nativeSrc": "4339:26:7",
															"nodeType": "YulAssignment",
															"src": "4339:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4351:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4362:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4362:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:7"
																},
																"nativeSrc": "4347:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4347:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4339:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4381:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4381:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4396:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4396:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4412:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4412:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4417:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4417:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4408:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4408:3:7"
																						},
																						"nativeSrc": "4408:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4408:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4421:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4421:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4404:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4404:3:7"
																				},
																				"nativeSrc": "4404:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4404:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4392:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:7"
																		},
																		"nativeSrc": "4392:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4392:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4374:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:7"
																},
																"nativeSrc": "4374:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4374:51:7"
															},
															"nativeSrc": "4374:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4374:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4445:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4456:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4441:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4441:3:7"
																		},
																		"nativeSrc": "4441:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4441:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4461:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:7"
																},
																"nativeSrc": "4434:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4434:34:7"
															},
															"nativeSrc": "4434:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4434:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4200:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:7",
														"nodeType": "YulTypedName",
														"src": "4290:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4301:6:7",
														"nodeType": "YulTypedName",
														"src": "4301:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4309:6:7",
														"nodeType": "YulTypedName",
														"src": "4309:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4320:4:7",
														"nodeType": "YulTypedName",
														"src": "4320:4:7",
														"type": ""
													}
												],
												"src": "4200:274:7"
											},
											{
												"body": {
													"nativeSrc": "4557:199:7",
													"nodeType": "YulBlock",
													"src": "4557:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4603:16:7",
																"nodeType": "YulBlock",
																"src": "4603:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4612:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4612:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4615:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4615:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4605:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4605:6:7"
																			},
																			"nativeSrc": "4605:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4605:12:7"
																		},
																		"nativeSrc": "4605:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4605:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4578:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4578:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4587:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4587:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:7"
																		},
																		"nativeSrc": "4574:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4574:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4599:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4599:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4570:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:7"
																},
																"nativeSrc": "4570:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4570:32:7"
															},
															"nativeSrc": "4567:52:7",
															"nodeType": "YulIf",
															"src": "4567:52:7"
														},
														{
															"nativeSrc": "4628:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4628:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4647:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4647:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4641:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4641:5:7"
																},
																"nativeSrc": "4641:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4641:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4632:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4632:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4710:16:7",
																"nodeType": "YulBlock",
																"src": "4710:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4719:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4719:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4722:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4722:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4712:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4712:6:7"
																			},
																			"nativeSrc": "4712:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4712:12:7"
																		},
																		"nativeSrc": "4712:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4679:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4679:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4700:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4700:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4693:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4693:6:7"
																						},
																						"nativeSrc": "4693:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4693:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4686:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4686:6:7"
																				},
																				"nativeSrc": "4686:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4686:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4676:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4676:2:7"
																		},
																		"nativeSrc": "4676:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4676:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4669:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:7"
																},
																"nativeSrc": "4669:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4669:40:7"
															},
															"nativeSrc": "4666:60:7",
															"nodeType": "YulIf",
															"src": "4666:60:7"
														},
														{
															"nativeSrc": "4735:15:7",
															"nodeType": "YulAssignment",
															"src": "4735:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4745:5:7",
																"nodeType": "YulIdentifier",
																"src": "4745:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4735:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4479:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4523:9:7",
														"nodeType": "YulTypedName",
														"src": "4523:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4534:7:7",
														"nodeType": "YulTypedName",
														"src": "4534:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4546:6:7",
														"nodeType": "YulTypedName",
														"src": "4546:6:7",
														"type": ""
													}
												],
												"src": "4479:277:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 64)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_address(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"482": [
									{
										"length": 32,
										"start": 376
									},
									{
										"length": 32,
										"start": 1733
									},
									{
										"length": 32,
										"start": 3238
									},
									{
										"length": 32,
										"start": 3388
									},
									{
										"length": 32,
										"start": 4195
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610153575f3560e01c806385737020116100bf578063e082fe2a11610079578063e082fe2a146102e3578063e3bb2d40146102eb578063e8a748e7146102fe578063f22069df14610311578063f2fde38b14610319578063fc05542a1461032c575f5ffd5b806385737020146102585780638da5cb5b14610284578063a085834314610294578063a34db0a0146102a7578063a6a09811146102c7578063c9539f71146102d0575f5ffd5b80636ff65c20116101105780636ff65c20146101f95780637069243c14610224578063715018a61461022c578063741ae614146102345780637a0abf081461023c57806381aeb13b14610245575f5ffd5b80631318fbf1146101575780631fccf672146101735780633960fc66146101b2578063528780cc146101bc5780635c975abb146101cf57806364bb632f146101e6575b5f5ffd5b61016060075481565b6040519081526020015b60405180910390f35b61019a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161016a565b6101ba610357565b005b6101ba6101ca366004611199565b610369565b60025460ff165b604051901515815260200161016a565b6101ba6101f4366004611199565b6103da565b6101d66102073660046111cb565b6001600160a01b03165f9081526004602052604090205460ff1690565b600554610160565b6101ba610442565b600754610160565b61016060055481565b6101ba6102533660046111eb565b610453565b6101d66102663660046111cb565b6001600160a01b03165f9081526003602052604090205460ff161590565b5f546001600160a01b031661019a565b6101ba6102a23660046111cb565b610612565b6102ba6102b53660046111eb565b610775565b60405161016a919061125c565b61016060065481565b6101ba6102de3660046111eb565b61091b565b6101ba610ad3565b6101ba6102f93660046111cb565b610ae3565b6101ba61030c3660046111cb565b610baf565b6101ba610c77565b6101ba6103273660046111cb565b610e66565b6101d661033a3660046111cb565b6001600160a01b03165f9081526003602052604090205460ff1690565b61035f610ea0565b610367610ecc565b565b610371610ea0565b805f03610391576040516336c5eec760e21b815260040160405180910390fd5b6006805490829055604080518281526020810184905283917f2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef91015b60405180910390a1505050565b6103e2610ea0565b805f0361040257604051630d428a0160e41b815260040160405180910390fd5b6005805490829055604080518281526020810184905283917ff0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c9491016103cd565b61044a610ea0565b6103675f610f1e565b61045b610ea0565b805f81900361047d57604051634ec4810560e11b815260040160405180910390fd5b5f5b8181101561057a575f84848381811061049a5761049a6112a7565b90506020020160208101906104af91906111cb565b6001600160a01b0316036104d65760405163d92e233d60e01b815260040160405180910390fd5b60035f8585848181106104eb576104eb6112a7565b905060200201602081019061050091906111cb565b6001600160a01b0316815260208101919091526040015f205460ff161561057257838382818110610533576105336112a7565b905060200201602081019061054891906111cb565b604051633746725b60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b60010161047f565b505f5b818110156105e057600160035f86868581811061059c5761059c6112a7565b90506020020160208101906105b191906111cb565b6001600160a01b0316815260208101919091526040015f20805460ff191691151591909117905560010161057d565b507f9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc83836040516103cd9291906112bb565b61061a610f6d565b610622610f91565b6001600160a01b0381165f90815260036020526040902054819060ff166106675760405163de55cc3360e01b81526001600160a01b0382166004820152602401610569565b6001600160a01b0382165f90815260046020526040902054829060ff16156106ad576040516301ee5f6f60e31b81526001600160a01b0382166004820152602401610569565b6005546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610712573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107369190611305565b10156107555760405163786e0a9960e01b815260040160405180910390fd5b61075e83610fbb565b61076783611014565b505061077260018055565b50565b6060815f81900361079957604051634ec4810560e11b815260040160405180910390fd5b5f805b828110156108055760035f8787848181106107b9576107b96112a7565b90506020020160208101906107ce91906111cb565b6001600160a01b0316815260208101919091526040015f205460ff16156107fd57816107f98161131c565b9250505b60010161079c565b505f8167ffffffffffffffff81111561082057610820611340565b604051908082528060200260200182016040528015610849578160200160208202803683370190505b5090505f805b8481101561090f5760035f89898481811061086c5761086c6112a7565b905060200201602081019061088191906111cb565b6001600160a01b0316815260208101919091526040015f205460ff1615610907578787828181106108b4576108b46112a7565b90506020020160208101906108c991906111cb565b83836108d48161131c565b9450815181106108e6576108e66112a7565b60200260200101906001600160a01b031690816001600160a01b0316815250505b60010161084f565b50909695505050505050565b610923610ea0565b805f81900361094557604051634ec4810560e11b815260040160405180910390fd5b5f5b81811015610a3c575f848483818110610962576109626112a7565b905060200201602081019061097791906111cb565b6001600160a01b03160361099e5760405163d92e233d60e01b815260040160405180910390fd5b60035f8585848181106109b3576109b36112a7565b90506020020160208101906109c891906111cb565b6001600160a01b0316815260208101919091526040015f205460ff16610a34578383828181106109fa576109fa6112a7565b9050602002016020810190610a0f91906111cb565b60405163de55cc3360e01b81526001600160a01b039091166004820152602401610569565b600101610947565b505f5b81811015610aa1575f60035f868685818110610a5d57610a5d6112a7565b9050602002016020810190610a7291906111cb565b6001600160a01b0316815260208101919091526040015f20805460ff1916911515919091179055600101610a3f565b507fd68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b83836040516103cd9291906112bb565b610adb610ea0565b610367611139565b610aeb610ea0565b6001600160a01b0381165f90815260036020526040902054819060ff16610b305760405163de55cc3360e01b81526001600160a01b0382166004820152602401610569565b6001600160a01b038216610b575760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382165f81815260036020908152604091829020805460ff1916905590519182527fa354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e291015b60405180910390a15050565b610bb7610ea0565b6001600160a01b0381165f90815260036020526040902054819060ff1615610bfd57604051633746725b60e11b81526001600160a01b0382166004820152602401610569565b6001600160a01b038216610c245760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0382165f81815260036020908152604091829020805460ff1916600117905590519182527f1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d279101610ba3565b610c7f610ea0565b610c87610f6d565b610c8f610f91565b6040516370a0823160e01b81523060048201525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610cf3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d179190611305565b9050805f03610d39576040516316e3ff0560e21b815260040160405180910390fd5b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610d7a5f546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303815f875af1158015610dc4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610de89190611354565b905080610e08576040516327fcd9d160e01b815260040160405180910390fd5b7f2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097610e3a5f546001600160a01b031690565b604080516001600160a01b039092168252602082018590520160405180910390a1505061036760018055565b610e6e610ea0565b6001600160a01b038116610e9757604051631e4fbdf760e01b81525f6004820152602401610569565b61077281610f1e565b5f546001600160a01b031633146103675760405163118cdaa760e01b8152336004820152602401610569565b610ed4611176565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460ff16156103675760405163d93c066560e01b815260040160405180910390fd5b600260015403610fb457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6001600160a01b0381165f81815260046020908152604091829020805460ff1916600117905590519182527f654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943910160405180910390a150565b60065460075403611037576040516227007f60ea1b815260040160405180910390fd5b60055460405163a9059cbb60e01b81526001600160a01b03838116600483015260248201929092525f917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303815f875af11580156110a9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cd9190611354565b9050806110ed5760405163078ecf4160e41b815260040160405180910390fd5b600780546001019055600554604080516001600160a01b038516815260208101929092527f8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e9101610ba3565b611141610f6d565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f013390565b60025460ff1661036757604051638dfc202b60e01b815260040160405180910390fd5b5f602082840312156111a9575f5ffd5b5035919050565b80356001600160a01b03811681146111c6575f5ffd5b919050565b5f602082840312156111db575f5ffd5b6111e4826111b0565b9392505050565b5f5f602083850312156111fc575f5ffd5b823567ffffffffffffffff811115611212575f5ffd5b8301601f81018513611222575f5ffd5b803567ffffffffffffffff811115611238575f5ffd5b8560208260051b840101111561124c575f5ffd5b6020919091019590945092505050565b602080825282518282018190525f918401906040840190835b8181101561129c5783516001600160a01b0316835260209384019390920191600101611275565b509095945050505050565b634e487b7160e01b5f52603260045260245ffd5b602080825281018290525f8360408301825b858110156112fb576001600160a01b036112e6846111b0565b168252602092830192909101906001016112cd565b5095945050505050565b5f60208284031215611315575f5ffd5b5051919050565b5f6001820161133957634e487b7160e01b5f52601160045260245ffd5b5060010190565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215611364575f5ffd5b815180151581146111e4575f5ffdfea2646970667358221220f5de4faa53a122164520a35f3f5572dbf6df9a4d96a7ac7a75e147509a4a9bce64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x153 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85737020 GT PUSH2 0xBF JUMPI DUP1 PUSH4 0xE082FE2A GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xE082FE2A EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xE3BB2D40 EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xE8A748E7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xF22069DF EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xFC05542A EQ PUSH2 0x32C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x85737020 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xA0858343 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xA34DB0A0 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xA6A09811 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xC9539F71 EQ PUSH2 0x2D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FF65C20 GT PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FF65C20 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x7069243C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x741AE614 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7A0ABF08 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x81AEB13B EQ PUSH2 0x245 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1318FBF1 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x1FCCF672 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x3960FC66 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x528780CC EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x64BB632F EQ PUSH2 0x1E6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x160 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x357 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x1CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x207 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x442 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x160 JUMP JUMPDEST PUSH2 0x160 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19A JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x612 JUMP JUMPDEST PUSH2 0x2BA PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x160 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1BA PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0xAE3 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x1BA PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x35F PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x367 PUSH2 0xECC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x371 PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36C5EEC7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0x2E31E8893A04CE5258044D342D7658948A6AC9710D97E32462AB75F131AE11EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3E2 PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD428A01 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xF0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94 SWAP2 ADD PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x44A PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x367 PUSH0 PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x45B PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SUB PUSH2 0x47D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x49A JUMPI PUSH2 0x49A PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x4EB JUMPI PUSH2 0x4EB PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x572 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x533 JUMPI PUSH2 0x533 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x47F JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x57D JUMP JUMPDEST POP PUSH32 0x9A9F2A64A3B0B4774DA60129AA707715E049CB95062F7ACAAFFC07DDC244C1CC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP3 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x61A PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x622 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EE5F6F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST LT ISZERO PUSH2 0x755 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75E DUP4 PUSH2 0xFBB JUMP JUMPDEST PUSH2 0x767 DUP4 PUSH2 0x1014 JUMP JUMPDEST POP POP PUSH2 0x772 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH0 DUP2 SWAP1 SUB PUSH2 0x799 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x805 JUMPI PUSH1 0x3 PUSH0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x7B9 JUMPI PUSH2 0x7B9 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7FD JUMPI DUP2 PUSH2 0x7F9 DUP2 PUSH2 0x131C JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x79C JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x820 JUMPI PUSH2 0x820 PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x849 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x90F JUMPI PUSH1 0x3 PUSH0 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0x86C JUMPI PUSH2 0x86C PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x881 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x907 JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0x8B4 JUMPI PUSH2 0x8B4 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST DUP4 DUP4 PUSH2 0x8D4 DUP2 PUSH2 0x131C JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x8E6 JUMPI PUSH2 0x8E6 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x84F JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x923 PUSH2 0xEA0 JUMP JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SUB PUSH2 0x945 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA3C JUMPI PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x962 JUMPI PUSH2 0x962 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x977 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x9B3 JUMPI PUSH2 0x9B3 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA34 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x9FA JUMPI PUSH2 0x9FA PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA0F SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x947 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAA1 JUMPI PUSH0 PUSH1 0x3 PUSH0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0xA5D JUMPI PUSH2 0xA5D PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA72 SWAP2 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0xA3F JUMP JUMPDEST POP PUSH32 0xD68B41369D54FACA53E699320360840DB6E0E2E175D3974EB304FD18713D916B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP3 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0xADB PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x1139 JUMP JUMPDEST PUSH2 0xAEB PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA354190DD7342316E40E5358C9F72037F2C677CDC057D3DEBBC4F1B62495E2E2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xBB7 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xBFD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1AFDE38C60D2BE0D28D001619816D86C39CE78B350C9D94F23C095099B9C1D27 SWAP2 ADD PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xC7F PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xC87 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xC8F PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16E3FF05 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xD7A PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x27FCD9D1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097 PUSH2 0xE3A PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x367 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xE6E PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH2 0x772 DUP2 PUSH2 0xF1E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x569 JUMP JUMPDEST PUSH2 0xED4 PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD SUB PUSH2 0x1037 JUMPI PUSH1 0x40 MLOAD PUSH3 0x27007F PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10A9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CD SWAP2 SWAP1 PUSH2 0x1354 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD PUSH4 0x78ECF41 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E SWAP2 ADD PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x1141 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF01 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x367 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11E4 DUP3 PUSH2 0x11B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1212 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1238 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x124C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x129C JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1275 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP4 PUSH1 0x40 DUP4 ADD DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x12E6 DUP5 PUSH2 0x11B0 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x12CD JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1315 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x1339 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1364 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11E4 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDE 0x4F 0xAA MSTORE8 LOG1 0x22 AND GASLIMIT KECCAK256 LOG3 PUSH0 EXTCODEHASH SSTORE PUSH19 0xDBF6DF9A4D96A7AC7A75E147509A4A9BCE6473 PUSH16 0x6C634300081C00330000000000000000 ",
							"sourceMap": "301:11046:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:43;;;;;;;;;160:25:7;;;148:2;133:18;650:43:6;;;;;;;;371:36;;;;;;;;-1:-1:-1;;;;;382:32:7;;;364:51;;352:2;337:18;371:36:6;196:225:7;9402:71:6;;;:::i;:::-;;8712:611;;;;;;:::i;:::-;;:::i;1850:84:4:-;1920:7;;;;1850:84;;;776:14:7;;769:22;751:41;;739:2;724:18;1850:84:4;611:187:7;8070:636:6;;;;;;:::i;:::-;;:::i;10459:203::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10607:48:6;10580:4;10607:48;;;:33;:48;;;;;;;;;10459:203;11051:161;11174:31;;11051:161;;2293:101:0;;;:::i;11218:127:6:-;11310:28;;11218:127;;551:46;;;;;;4510:861;;;;;;:::i;:::-;;:::i;10859:186::-;;;;;;:::i;:::-;-1:-1:-1;;;;;10998:40:6;10970:4;10998:40;;;:25;:40;;;;;;;;10997:41;;10859:186;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;6257:473:6;;;;;;:::i;:::-;;:::i;9479:974::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;603:41::-;;;;;;5377:874;;;;;;:::i;:::-;;:::i;9329:67::-;;;:::i;4143:361::-;;;;;;:::i;:::-;;:::i;3799:338::-;;;;;;:::i;:::-;;:::i;7616:448::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;10668:185:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;10806:40:6;10779:4;10806:40;;;:25;:40;;;;;;;;;10668:185;9402:71;1531:13:0;:11;:13::i;:::-;9456:10:6::1;:8;:10::i;:::-;9402:71::o:0;8712:611::-;1531:13:0;:11;:13::i;:::-;8841:30:6::1;8875:1;8841:35:::0;8837:108:::1;;8899:35;;-1:-1:-1::0;;;8899:35:6::1;;;;;;;;;;;8837:108;8995:26;::::0;;9113:58;;;;9187:129:::1;::::0;;2811:25:7;;;2867:2;2852:18;;2845:34;;;9113:58:6;;9187:129:::1;::::0;2784:18:7;9187:129:6::1;;;;;;;;8827:496;;8712:611:::0;:::o;8070:636::-;1531:13:0;:11;:13::i;:::-;8204:35:6::1;8243:1;8204:40:::0;8200:104:::1;;8267:26;;-1:-1:-1::0;;;8267:26:6::1;;;;;;;;;;;8200:104;8358:31;::::0;;8490:68;;;;8574:125:::1;::::0;;2811:25:7;;;2867:2;2852:18;;2845:34;;;8490:68:6;;8574:125:::1;::::0;2784:18:7;8574:125:6::1;2637:248:7::0;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;4510:861:6:-:0;1531:13:0;:11;:13::i;:::-;4648:15:6;4631:14:::1;4684:11:::0;;;4680:69:::1;;4718:20;;-1:-1:-1::0;;;4718:20:6::1;;;;;;;;;;;4680:69;4764:9;4759:361;4783:6;4779:1;:10;4759:361;;;4841:1;4811:15:::0;;4827:1;4811:18;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4811:32:6::1;::::0;4807:91:::1;;4870:13;;-1:-1:-1::0;;;4870:13:6::1;;;;;;;;;;;4807:91;4915:25;:45;4941:15;;4957:1;4941:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4915:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4915:45:6;;::::1;;4911:140;;;5017:15;;5033:1;5017:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4987:49;::::0;-1:-1:-1;;;4987:49:6;;-1:-1:-1;;;;;382:32:7;;;4987:49:6::1;::::0;::::1;364:51:7::0;337:18;;4987:49:6::1;;;;;;;;4911:140;5092:3;;4759:361;;;-1:-1:-1::0;5135:9:6::1;5130:170;5154:6;5150:1;:10;5130:170;;;5226:4;5178:25;:45;5204:15;;5220:1;5204:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5178:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;5178:45:6;:52;;-1:-1:-1;;5178:52:6::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;5272:3:6::1;5130:170;;;;5315:49;5348:15;;5315:49;;;;;;;:::i;6257:473::-:0;1474:19:4;:17;:19::i;:::-;2500:21:5::1;:19;:21::i;:::-;-1:-1:-1::0;;;;;2189:40:6;::::2;;::::0;;;:25:::2;:40;::::0;;;;;6412:13;;2189:40:::2;;2184:119;;2252:40;::::0;-1:-1:-1;;;2252:40:6;;-1:-1:-1;;;;;382:32:7;;2252:40:6::2;::::0;::::2;364:51:7::0;337:18;;2252:40:6::2;196:225:7::0;2184:119:6::2;-1:-1:-1::0;;;;;2814:59:6;::::3;;::::0;;;:33:::3;:59;::::0;;;;;6461:13;;2814:59:::3;;2810:149;;;2896:52;::::0;-1:-1:-1;;;2896:52:6;;-1:-1:-1;;;;;382:32:7;;2896:52:6::3;::::0;::::3;364:51:7::0;337:18;;2896:52:6::3;196:225:7::0;2810:149:6::3;6526:31:::4;::::0;6494:29:::4;::::0;-1:-1:-1;;;6494:29:6;;6517:4:::4;6494:29;::::0;::::4;364:51:7::0;6494:4:6::4;-1:-1:-1::0;;;;;6494:14:6::4;::::0;::::4;::::0;337:18:7;;6494:29:6::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;6490:130;;;6580:29;;-1:-1:-1::0;;;6580:29:6::4;;;;;;;;;;;6490:130;6630:51;6667:13;6630:36;:51::i;:::-;6691:32;6709:13;6691:17;:32::i;:::-;2312:1:::3;2531::5::2;2542:20:::1;1857:1:::0;3068:21;;2888:208;2542:20:::1;6257:473:6::0;:::o;9479:974::-;9612:16;9657:19;9640:14;9697:11;;;9693:69;;9731:20;;-1:-1:-1;;;9731:20:6;;;;;;;;;;;9693:69;9772:24;;9810:223;9834:6;9830:1;:10;9810:223;;;9862:25;:49;9888:19;;9908:1;9888:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9862:49:6;;;;;;;;;;;;-1:-1:-1;9862:49:6;;;;9858:106;;;9931:18;;;;:::i;:::-;;;;9858:106;10005:3;;9810:223;;;;10043:37;10097:16;10083:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10083:31:6;-1:-1:-1;10043:71:6;-1:-1:-1;10124:13:6;;10151:259;10175:6;10171:1;:10;10151:259;;;10203:25;:49;10229:19;;10249:1;10229:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10203:49:6;;;;;;;;;;;;-1:-1:-1;10203:49:6;;;;10199:142;;;10304:19;;10324:1;10304:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10272:20;10293:7;;;;:::i;:::-;;;10272:29;;;;;;;;:::i;:::-;;;;;;:54;-1:-1:-1;;;;;10272:54:6;;;-1:-1:-1;;;;;10272:54:6;;;;;10199:142;10382:3;;10151:259;;;-1:-1:-1;10426:20:6;;9479:974;-1:-1:-1;;;;;;9479:974:6:o;5377:874::-;1531:13:0;:11;:13::i;:::-;5520:15:6;5503:14:::1;5556:11:::0;;;5552:69:::1;;5590:20;;-1:-1:-1::0;;;5590:20:6::1;;;;;;;;;;;5552:69;5636:9;5631:358;5655:6;5651:1;:10;5631:358;;;5713:1;5683:15:::0;;5699:1;5683:18;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5683:32:6::1;::::0;5679:91:::1;;5742:13;;-1:-1:-1::0;;;5742:13:6::1;;;;;;;;;;;5679:91;5788:25;:45;5814:15;;5830:1;5814:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5788:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;5788:45:6;;::::1;;5783:137;;5886:15;;5902:1;5886:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5860:45;::::0;-1:-1:-1;;;5860:45:6;;-1:-1:-1;;;;;382:32:7;;;5860:45:6::1;::::0;::::1;364:51:7::0;337:18;;5860:45:6::1;196:225:7::0;5783:137:6::1;5961:3;;5631:358;;;-1:-1:-1::0;6004:9:6::1;5999:171;6023:6;6019:1;:10;5999:171;;;6095:5;6047:25;:45;6073:15;;6089:1;6073:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6047:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;6047:45:6;:53;;-1:-1:-1;;6047:53:6::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;6142:3:6::1;5999:171;;;;6184:60;6228:15;;6184:60;;;;;;;:::i;9329:67::-:0;1531:13:0;:11;:13::i;:::-;9381:8:6::1;:6;:8::i;4143:361::-:0;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2390:40:6;::::1;;::::0;;;:25:::1;:40;::::0;;;;;4267:13;;2390:40:::1;;2385:119;;2453:40;::::0;-1:-1:-1;;;2453:40:6;;-1:-1:-1;;;;;382:32:7;;2453:40:6::1;::::0;::::1;364:51:7::0;337:18;;2453:40:6::1;196:225:7::0;2385:119:6::1;-1:-1:-1::0;;;;;4300:27:6;::::2;4296:78;;4350:13;;-1:-1:-1::0;;;4350:13:6::2;;;;;;;;;;;4296:78;-1:-1:-1::0;;;;;4383:40:6;::::2;4426:5;4383:40:::0;;;:25:::2;:40;::::0;;;;;;;;:48;;-1:-1:-1;;4383:48:6::2;::::0;;4446:51;;364::7;;;4446::6::2;::::0;337:18:7;4446:51:6::2;;;;;;;;1554:1:0::1;4143:361:6::0;:::o;3799:338::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2591:40:6;::::1;;::::0;;;:25:::1;:40;::::0;;;;;3912:13;;2591:40:::1;;2587:122;;;2654:44;::::0;-1:-1:-1;;;2654:44:6;;-1:-1:-1;;;;;382:32:7;;2654:44:6::1;::::0;::::1;364:51:7::0;337:18;;2654:44:6::1;196:225:7::0;2587:122:6::1;-1:-1:-1::0;;;;;3945:27:6;::::2;3941:78;;3995:13;;-1:-1:-1::0;;;3995:13:6::2;;;;;;;;;;;3941:78;-1:-1:-1::0;;;;;4028:40:6;::::2;;::::0;;;:25:::2;:40;::::0;;;;;;;;:47;;-1:-1:-1;;4028:47:6::2;4071:4;4028:47;::::0;;4090:40;;364:51:7;;;4090:40:6::2;::::0;337:18:7;4090:40:6::2;196:225:7::0;7616:448:6;1531:13:0;:11;:13::i;:::-;1474:19:4::1;:17;:19::i;:::-;2500:21:5::2;:19;:21::i;:::-;7772:29:6::3;::::0;-1:-1:-1;;;7772:29:6;;7795:4:::3;7772:29;::::0;::::3;364:51:7::0;7754:15:6::3;::::0;7772:4:::3;-1:-1:-1::0;;;;;7772:14:6::3;::::0;::::3;::::0;337:18:7;;7772:29:6::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7754:47;;7815:7;7826:1;7815:12:::0;7811:65:::3;;7850:15;;-1:-1:-1::0;;;7850:15:6::3;;;;;;;;;;;7811:65;7885:12;7900:4;-1:-1:-1::0;;;;;7900:13:6::3;;7914:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;7914:7:6::3;7900:31;::::0;-1:-1:-1;;;;;;7900:31:6::3;::::0;;;;;;-1:-1:-1;;;;;4392:32:7;;;7900:31:6::3;::::0;::::3;4374:51:7::0;4441:18;;;4434:34;;;4347:18;;7900:31:6::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7885:46;;7946:7;7941:64;;7976:18;;-1:-1:-1::0;;;7976:18:6::3;;;;;;;;;;;7941:64;8019:38;8040:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;8040:7:6::3;8019:38;::::0;;-1:-1:-1;;;;;4392:32:7;;;4374:51;;4456:2;4441:18;;4434:34;;;4347:18;8019:38:6::3;;;;;;;7744:320;;2542:20:5::2;1857:1:::0;3068:21;;2888:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;364:51:7::0;337:18;;2672:31:0::1;196:225:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;364:51:7;337:18;;1901:40:0;196:225:7;2710:117:4;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:4::1;::::0;;2798:22:::1;735:10:3::0;2807:12:4::1;2798:22;::::0;-1:-1:-1;;;;;382:32:7;;;364:51;;352:2;337:18;2798:22:4::1;;;;;;;2710:117::o:0;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2002:128:4:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:4;;;;;;;;;;;2575:307:5;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:5;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;6736:253:6:-;-1:-1:-1;;;;;6848:59:6;;;;;;:33;:59;;;;;;;;;:66;;-1:-1:-1;;6848:66:6;6910:4;6848:66;;;6929:53;;364:51:7;;;6929:53:6;;337:18:7;6929:53:6;;;;;;;6736:253;:::o;6995:615::-;7110:26;;7078:28;;:58;7074:121;;7159:25;;-1:-1:-1;;;7159:25:6;;;;;;;;;;;7074:121;7284:31;;7219:106;;-1:-1:-1;;;7219:106:6;;-1:-1:-1;;;;;4392:32:7;;;7219:106:6;;;4374:51:7;4441:18;;;4434:34;;;;7204:12:6;;7219:4;:13;;;;4347:18:7;;7219:106:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7204:121;;7340:7;7335:68;;7370:22;;-1:-1:-1;;;7370:22:6;;;;;;;;;;;7335:68;7438:28;7436:30;;;;;;7562:31;;7491:112;;;-1:-1:-1;;;;;4392:32:7;;4374:51;;4456:2;4441:18;;4434:34;;;;7491:112:6;;4347:18:7;7491:112:6;4200:274:7;2463:115:4;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:4::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:3::0;;656:96;2202:126:4;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:4;;;;;;;;;;;426:180:7;485:6;538:2;526:9;517:7;513:23;509:32;506:52;;;554:1;551;544:12;506:52;-1:-1:-1;577:23:7;;426:180;-1:-1:-1;426:180:7:o;803:173::-;871:20;;-1:-1:-1;;;;;920:31:7;;910:42;;900:70;;966:1;963;956:12;900:70;803:173;;;:::o;981:186::-;1040:6;1093:2;1081:9;1072:7;1068:23;1064:32;1061:52;;;1109:1;1106;1099:12;1061:52;1132:29;1151:9;1132:29;:::i;:::-;1122:39;981:186;-1:-1:-1;;;981:186:7:o;1172:610::-;1258:6;1266;1319:2;1307:9;1298:7;1294:23;1290:32;1287:52;;;1335:1;1332;1325:12;1287:52;1375:9;1362:23;1408:18;1400:6;1397:30;1394:50;;;1440:1;1437;1430:12;1394:50;1463:22;;1516:4;1508:13;;1504:27;-1:-1:-1;1494:55:7;;1545:1;1542;1535:12;1494:55;1585:2;1572:16;1611:18;1603:6;1600:30;1597:50;;;1643:1;1640;1633:12;1597:50;1696:7;1691:2;1681:6;1678:1;1674:14;1670:2;1666:23;1662:32;1659:45;1656:65;;;1717:1;1714;1707:12;1656:65;1748:2;1740:11;;;;;1770:6;;-1:-1:-1;1172:610:7;-1:-1:-1;;;1172:610:7:o;1995:637::-;2185:2;2197:21;;;2267:13;;2170:18;;;2289:22;;;2137:4;;2368:15;;;2342:2;2327:18;;;2137:4;2411:195;2425:6;2422:1;2419:13;2411:195;;;2490:13;;-1:-1:-1;;;;;2486:39:7;2474:52;;2555:2;2581:15;;;;2546:12;;;;2522:1;2440:9;2411:195;;;-1:-1:-1;2623:3:7;;1995:637;-1:-1:-1;;;;;1995:637:7:o;2890:127::-;2951:10;2946:3;2942:20;2939:1;2932:31;2982:4;2979:1;2972:15;3006:4;3003:1;2996:15;3022:615;3222:2;3234:21;;;3207:18;;3290:22;;;3174:4;3369:6;3343:2;3328:18;;3174:4;3403:208;3417:6;3414:1;3411:13;3403:208;;;-1:-1:-1;;;;;3482:26:7;3501:6;3482:26;:::i;:::-;3478:52;3466:65;;3560:2;3586:15;;;;3551:12;;;;3439:1;3432:9;3403:208;;;-1:-1:-1;3628:3:7;3022:615;-1:-1:-1;;;;;3022:615:7:o;3642:184::-;3712:6;3765:2;3753:9;3744:7;3740:23;3736:32;3733:52;;;3781:1;3778;3771:12;3733:52;-1:-1:-1;3804:16:7;;3642:184;-1:-1:-1;3642:184:7:o;3831:232::-;3870:3;3891:17;;;3888:140;;3950:10;3945:3;3941:20;3938:1;3931:31;3985:4;3982:1;3975:15;4013:4;4010:1;4003:15;3888:140;-1:-1:-1;4055:1:7;4044:13;;3831:232::o;4068:127::-;4129:10;4124:3;4120:20;4117:1;4110:31;4160:4;4157:1;4150:15;4184:4;4181:1;4174:15;4479:277;4546:6;4599:2;4587:9;4578:7;4574:23;4570:32;4567:52;;;4615:1;4612;4605:12;4567:52;4647:9;4641:16;4700:5;4693:13;4686:21;4679:5;4676:32;4666:60;;4722:1;4719;4712:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1006600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"blacklistMultipleWhitelistedAddresses(address[])": "infinite",
								"blacklistOneWhitelistedAddress(address)": "30132",
								"cUSD()": "infinite",
								"checkIfParticipantHasAlreadyClaimedReward(address)": "2569",
								"checkIfUserAddressIsBlacklisted(address)": "2572",
								"checkIfUserAddressIsWhitelisted(address)": "2678",
								"getNumberOfRewardedParticipants()": "2369",
								"getRewardAmountPerParticipantInWei()": "2325",
								"getWhitelistedAddressesFromRegisteredAddresses(address[])": "infinite",
								"numberOfRewardedParticipants()": "2307",
								"owner()": "2374",
								"pauseSurvey()": "infinite",
								"paused()": "2404",
								"processRewardClaimByParticipant(address)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardAmountPerParticipantInWei()": "2394",
								"targetNumberOfParticipants()": "2394",
								"transferOwnership(address)": "28439",
								"unpauseSurvey()": "infinite",
								"updateRewardAmountPerParticipant(uint256)": "28111",
								"updateTargetNumberOfParticipants(uint256)": "28056",
								"whitelistMultipleAddresses(address[])": "infinite",
								"whitelistOneAddress(address)": "30174",
								"withdrawAllRewardFundsToResearcher()": "infinite"
							},
							"internal": {
								"markParticipantAsHavingClaimedReward(address)": "infinite",
								"rewardParticipant(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2982,
									"end": 3793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2982,
									"end": 3793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3178,
									"end": 3201,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 861,
									"end": 912,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 834,
									"end": 852,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 852,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3230,
									"end": 3267,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3267,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3267,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3267,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3313,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 3230,
									"end": 3313,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3283,
									"end": 3313,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3313,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3283,
									"end": 3313,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3230,
									"end": 3313,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 3230,
									"end": 3313,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3213,
									"end": 3369,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3213,
									"end": 3369,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3213,
									"end": 3369,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3345,
									"end": 3358,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3213,
									"end": 3369,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3213,
									"end": 3369,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3382,
									"end": 3414,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3418,
									"end": 3419,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3382,
									"end": 3419,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3479,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3378,
									"end": 3479,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D428A01"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3442,
									"end": 3468,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3479,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3378,
									"end": 3479,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3493,
									"end": 3520,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3493,
									"end": 3525,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3489,
									"end": 3594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3489,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "36C5EEC7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3548,
									"end": 3583,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3489,
									"end": 3594,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3489,
									"end": 3594,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3604,
									"end": 3643,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3604,
									"end": 3643,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3604,
									"end": 3643,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3685,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3654,
									"end": 3720,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3720,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3720,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3654,
									"end": 3720,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3730,
									"end": 3756,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 3730,
									"end": 3786,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 512,
									"end": 514,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 497,
									"end": 515,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 491,
									"end": 516,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 606,
									"end": 608,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 591,
									"end": 609,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 585,
									"end": 610,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 491,
									"end": 516,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 585,
									"end": 610,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 655,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 700,
									"end": 702,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 685,
									"end": 703,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 655,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 655,
									"end": 704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 655,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 655,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 645,
									"end": 704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 645,
									"end": 704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 715,
									"end": 918,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "482"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 11347,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5de4faa53a122164520a35f3f5572dbf6df9a4d96a7ac7a75e147509a4a9bce64736f6c634300081c0033",
									".code": [
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "85737020"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "E082FE2A"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "E082FE2A"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "E3BB2D40"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "E8A748E7"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "F22069DF"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "FC05542A"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "85737020"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "A0858343"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "A34DB0A0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "A6A09811"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "C9539F71"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "6FF65C20"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "6FF65C20"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "7069243C"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "741AE614"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "7A0ABF08"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "81AEB13B"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "1318FBF1"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "1FCCF672"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "3960FC66"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "528780CC"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "5C975ABB"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "64BB632F"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 301,
											"end": 11347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 650,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 693,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 650,
											"end": 693,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 371,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 371,
											"end": 407,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 371,
											"end": 407,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 407,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 371,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 9402,
											"end": 9473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 8712,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8712,
											"end": 9323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 776,
											"end": 790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 776,
											"end": 790,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 769,
											"end": 791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 751,
											"end": 792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 751,
											"end": 792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 739,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 611,
											"end": 798,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 8070,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 8070,
											"end": 8706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10459,
											"end": 10662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10640,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10662,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11051,
											"end": 11212,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 11051,
											"end": 11212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11174,
											"end": 11205,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11174,
											"end": 11205,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11051,
											"end": 11212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 11051,
											"end": 11212,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11218,
											"end": 11345,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11218,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11310,
											"end": 11338,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11310,
											"end": 11338,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11218,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 11218,
											"end": 11345,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 597,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 551,
											"end": 597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 551,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 597,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 597,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 597,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4510,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4510,
											"end": 5371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10859,
											"end": 11045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10970,
											"end": 10974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11023,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10998,
											"end": 11038,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 11038,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 11038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10859,
											"end": 11045,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6257,
											"end": 6730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6257,
											"end": 6730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 9479,
											"end": 10453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9479,
											"end": 10453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9479,
											"end": 10453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 603,
											"end": 644,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 603,
											"end": 644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 603,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 603,
											"end": 644,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 603,
											"end": 644,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 603,
											"end": 644,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5377,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5377,
											"end": 6251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9396,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 9329,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 9329,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9329,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4143,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3799,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3799,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7616,
											"end": 8064,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7616,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7616,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 7616,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 7616,
											"end": 8064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10668,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10831,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10853,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 9402,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9456,
											"end": 9464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 9456,
											"end": 9466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9456,
											"end": 9466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8841,
											"end": 8871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8875,
											"end": 8876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8876,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 8837,
											"end": 8945,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36C5EEC7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8899,
											"end": 8934,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8837,
											"end": 8945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 8837,
											"end": 8945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 8995,
											"end": 9021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9171,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9171,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9187,
											"end": 9316,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9113,
											"end": 9171,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2E31E8893A04CE5258044D342D7658948A6AC9710D97E32462AB75F131AE11EF"
										},
										{
											"begin": 9187,
											"end": 9316,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9187,
											"end": 9316,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 9323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 9323,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 9323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 8070,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8204,
											"end": 8239,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8244,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8200,
											"end": 8304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 8200,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D428A01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8293,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8200,
											"end": 8304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 8200,
											"end": 8304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8358,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8358,
											"end": 8389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8558,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8574,
											"end": 8699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8699,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8490,
											"end": 8558,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94"
										},
										{
											"begin": 8574,
											"end": 8699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8574,
											"end": 8699,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2637,
											"end": 2885,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4510,
											"end": 5371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4663,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4695,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4680,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EC48105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4718,
											"end": 4738,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4680,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4783,
											"end": 4789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4789,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4826,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4811,
											"end": 4829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4811,
											"end": 4829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4811,
											"end": 4829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4811,
											"end": 4843,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4811,
											"end": 4843,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4807,
											"end": 4898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4883,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4807,
											"end": 4898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4807,
											"end": 4898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4915,
											"end": 4960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4956,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4956,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4957,
											"end": 4958,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4941,
											"end": 4959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4941,
											"end": 4959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4941,
											"end": 4959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4915,
											"end": 4960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 5051,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4911,
											"end": 5051,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5017,
											"end": 5035,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5017,
											"end": 5035,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5017,
											"end": 5035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3746725B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4987,
											"end": 5036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4987,
											"end": 5036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 5051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4911,
											"end": 5051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5092,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5092,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4759,
											"end": 5120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5135,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5160,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5226,
											"end": 5230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5178,
											"end": 5203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5178,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5219,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5219,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5221,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5204,
											"end": 5222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5204,
											"end": 5222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5204,
											"end": 5222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5223,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5230,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5275,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5130,
											"end": 5300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9A9F2A64A3B0B4774DA60129AA707715E049CB95062F7ACAAFFC07DDC244C1CC"
										},
										{
											"begin": 5348,
											"end": 5363,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5363,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5315,
											"end": 5364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2214,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2189,
											"end": 2229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2229,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2189,
											"end": 2229,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2303,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2184,
											"end": 2303,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2292,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2292,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE55CC33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 2292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2292,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2292,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2252,
											"end": 2292,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2292,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2252,
											"end": 2292,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2184,
											"end": 2303,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2184,
											"end": 2303,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2847,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2814,
											"end": 2873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2814,
											"end": 2873,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2814,
											"end": 2873,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2959,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2959,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2810,
											"end": 2959,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2948,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1EE5F6F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2896,
											"end": 2948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2948,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2948,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2959,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2810,
											"end": 2959,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6526,
											"end": 6557,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6494,
											"end": 6523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6494,
											"end": 6523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6521,
											"modifierDepth": 4,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6494,
											"end": 6523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6498,
											"modifierDepth": 4,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6494,
											"end": 6508,
											"modifierDepth": 4,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6508,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6494,
											"end": 6508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6494,
											"end": 6523,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6494,
											"end": 6523,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6557,
											"modifierDepth": 4,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6620,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6620,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6490,
											"end": 6620,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "786E0A99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6609,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6490,
											"end": 6620,
											"modifierDepth": 4,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6490,
											"end": 6620,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6681,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6667,
											"end": 6680,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6666,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6630,
											"end": 6681,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6681,
											"modifierDepth": 4,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6630,
											"end": 6681,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6723,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6709,
											"end": 6722,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6708,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6691,
											"end": 6723,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6691,
											"end": 6723,
											"modifierDepth": 4,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6691,
											"end": 6723,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2312,
											"end": 2313,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6257,
											"end": 6730,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6257,
											"end": 6730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9612,
											"end": 9628,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9657,
											"end": 9676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9640,
											"end": 9654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9697,
											"end": 9708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9697,
											"end": 9708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9697,
											"end": 9708,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9693,
											"end": 9762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9693,
											"end": 9762,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EC48105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9731,
											"end": 9751,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9693,
											"end": 9762,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9693,
											"end": 9762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9772,
											"end": 9796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9772,
											"end": 9796,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9840,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9907,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9907,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9908,
											"end": 9909,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 9888,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 9888,
											"end": 9910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9888,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 9862,
											"end": 9911,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9964,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9858,
											"end": 9964,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9931,
											"end": 9949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9931,
											"end": 9949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9964,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9858,
											"end": 9964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10005,
											"end": 10008,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10005,
											"end": 10008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9810,
											"end": 10033,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10043,
											"end": 10080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10083,
											"end": 10114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10083,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10043,
											"end": 10114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10124,
											"end": 10137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10124,
											"end": 10137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10175,
											"end": 10181,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10172,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10181,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10228,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10248,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10248,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10250,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10229,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10229,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10229,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10203,
											"end": 10252,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10341,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10199,
											"end": 10341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10324,
											"end": 10325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10304,
											"end": 10326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10304,
											"end": 10326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10292,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10293,
											"end": 10300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10272,
											"end": 10301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10272,
											"end": 10326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10199,
											"end": 10341,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 10199,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10382,
											"end": 10385,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10382,
											"end": 10385,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 10151,
											"end": 10410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10426,
											"end": 10446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10426,
											"end": 10446,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 10453,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9479,
											"end": 10453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 5377,
											"end": 6251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5520,
											"end": 5535,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5567,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5556,
											"end": 5567,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5552,
											"end": 5621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EC48105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5610,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5552,
											"end": 5621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5661,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5661,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5683,
											"end": 5701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5683,
											"end": 5701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 5683,
											"end": 5701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5683,
											"end": 5715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5715,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5679,
											"end": 5770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5755,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5679,
											"end": 5770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5788,
											"end": 5833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5829,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5829,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5831,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5814,
											"end": 5832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5814,
											"end": 5832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 5814,
											"end": 5832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5788,
											"end": 5833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5788,
											"end": 5833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5783,
											"end": 5920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5902,
											"end": 5903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5886,
											"end": 5904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5886,
											"end": 5904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5886,
											"end": 5904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE55CC33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5860,
											"end": 5905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5860,
											"end": 5905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5860,
											"end": 5905,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5783,
											"end": 5920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5961,
											"end": 5964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 5631,
											"end": 5989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6004,
											"end": 6013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6023,
											"end": 6029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6029,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6095,
											"end": 6100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6047,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6073,
											"end": 6088,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6088,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6090,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6073,
											"end": 6091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6073,
											"end": 6091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6073,
											"end": 6091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6047,
											"end": 6092,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6100,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6142,
											"end": 6145,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5999,
											"end": 6170,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D68B41369D54FACA53E699320360840DB6E0E2E175D3974EB304FD18713D916B"
										},
										{
											"begin": 6228,
											"end": 6243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6184,
											"end": 6244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9396,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9329,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9381,
											"end": 9389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 9381,
											"end": 9387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 9381,
											"end": 9389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2390,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2390,
											"end": 2430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2390,
											"end": 2430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2504,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2385,
											"end": 2504,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE55CC33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2453,
											"end": 2493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2453,
											"end": 2493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2504,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2385,
											"end": 2504,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4300,
											"end": 4327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4300,
											"end": 4327,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 4296,
											"end": 4374,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4363,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 4296,
											"end": 4374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4408,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4383,
											"end": 4423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4423,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4431,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4383,
											"end": 4431,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4431,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "A354190DD7342316E40E5358C9F72037F2C677CDC057D3DEBBC4F1B62495E2E2"
										},
										{
											"begin": 4446,
											"end": 4497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4497,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4504,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3799,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2591,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3912,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2591,
											"end": 2631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2709,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2587,
											"end": 2709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2587,
											"end": 2709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2698,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3746725B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2654,
											"end": 2698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2698,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2654,
											"end": 2698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2698,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2698,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2587,
											"end": 2709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3945,
											"end": 3972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3972,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 4019,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3941,
											"end": 4019,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4008,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 4019,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3941,
											"end": 4019,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4028,
											"end": 4068,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4068,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4075,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4028,
											"end": 4075,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4075,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4028,
											"end": 4075,
											"modifierDepth": 2,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4075,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4130,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1AFDE38C60D2BE0D28D001619816D86C39CE78B350C9D94F23C095099B9C1D27"
										},
										{
											"begin": 4090,
											"end": 4130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4090,
											"end": 4130,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 8064,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 7616,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7772,
											"end": 7801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7772,
											"end": 7801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7799,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7772,
											"end": 7801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7754,
											"end": 7769,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7776,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7772,
											"end": 7786,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7786,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7772,
											"end": 7786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7772,
											"end": 7801,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7772,
											"end": 7801,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7801,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7801,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7822,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7827,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7827,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7876,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7811,
											"end": 7876,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16E3FF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7850,
											"end": 7865,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7876,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 7811,
											"end": 7876,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7897,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7904,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7913,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7913,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 7914,
											"end": 7921,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7914,
											"end": 7921,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 7914,
											"end": 7921,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7900,
											"end": 7931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7900,
											"end": 7931,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7900,
											"end": 7931,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7931,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7931,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7946,
											"end": 7953,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 8005,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7941,
											"end": 8005,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27FCD9D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7976,
											"end": 7994,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7941,
											"end": 8005,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7941,
											"end": 8005,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097"
										},
										{
											"begin": 8040,
											"end": 8047,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8040,
											"end": 8047,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 8040,
											"end": 8047,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8019,
											"end": 8057,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8064,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 8064,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6736,
											"end": 6989,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6736,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6881,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6907,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6914,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6848,
											"end": 6914,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6914,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6848,
											"end": 6914,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6848,
											"end": 6914,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "PUSH",
											"source": 6,
											"value": "654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943"
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6982,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6736,
											"end": 6989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6995,
											"end": 7610,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6995,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7110,
											"end": 7136,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7110,
											"end": 7136,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7106,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7078,
											"end": 7106,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7136,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7074,
											"end": 7195,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27007F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7184,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7074,
											"end": 7195,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7074,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7315,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7284,
											"end": 7315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7204,
											"end": 7216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7223,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 7219,
											"end": 7232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7232,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 7219,
											"end": 7232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7219,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7219,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7340,
											"end": 7347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7335,
											"end": 7403,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78ECF41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7392,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7335,
											"end": 7403,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7335,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7562,
											"end": 7593,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7491,
											"end": 7603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7603,
											"name": "PUSH",
											"source": 6,
											"value": "8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E"
										},
										{
											"begin": 7491,
											"end": 7603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7491,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4200,
											"end": 4474,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 4,
											"value": "327"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 426,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 485,
											"end": 491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 517,
											"end": 524,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 513,
											"end": 536,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 509,
											"end": 541,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 506,
											"end": 558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 506,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 556,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 506,
											"end": 558,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 577,
											"end": 600,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 577,
											"end": 600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 426,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 803,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 871,
											"end": 891,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 920,
											"end": 951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 910,
											"end": 952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 910,
											"end": 952,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 900,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 900,
											"end": 970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 966,
											"end": 967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 900,
											"end": 970,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 900,
											"end": 970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1167,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 981,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1091,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1132,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1161,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1167,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1172,
											"end": 1782,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1172,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1321,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1307,
											"end": 1316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1317,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1322,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1337,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1426,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1397,
											"end": 1427,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1444,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 1394,
											"end": 1444,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1394,
											"end": 1444,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 1394,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1516,
											"end": 1520,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1508,
											"end": 1521,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1508,
											"end": 1521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1531,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1547,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 1494,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1572,
											"end": 1588,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1630,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1647,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 1597,
											"end": 1647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1645,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1647,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 1597,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1696,
											"end": 1703,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1693,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1674,
											"end": 1688,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1694,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1659,
											"end": 1704,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1721,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1656,
											"end": 1721,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1719,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1721,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1656,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1740,
											"end": 1751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1740,
											"end": 1751,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1172,
											"end": 1782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1172,
											"end": 1782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2632,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1995,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2432,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2525,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2632,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3017,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2890,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 2961,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2946,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2942,
											"end": 2962,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3003,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3022,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3424,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3482,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3530,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3628,
											"end": 3631,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3637,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3826,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3642,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3753,
											"end": 3762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3751,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3768,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4063,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 3831,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3945,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3941,
											"end": 3961,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 3989,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4017,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4018,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4195,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4068,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4124,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4120,
											"end": 4140,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4150,
											"end": 4165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4188,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4189,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4756,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4479,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4597,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4605,
											"end": 4617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4641,
											"end": 4657,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4693,
											"end": 4706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4708,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4666,
											"end": 4726,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"hardhat/contracts/CanvassingSurvey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blacklistMultipleWhitelistedAddresses(address[])": "c9539f71",
							"blacklistOneWhitelistedAddress(address)": "e3bb2d40",
							"cUSD()": "1fccf672",
							"checkIfParticipantHasAlreadyClaimedReward(address)": "6ff65c20",
							"checkIfUserAddressIsBlacklisted(address)": "85737020",
							"checkIfUserAddressIsWhitelisted(address)": "fc05542a",
							"getNumberOfRewardedParticipants()": "741ae614",
							"getRewardAmountPerParticipantInWei()": "7069243c",
							"getWhitelistedAddressesFromRegisteredAddresses(address[])": "a34db0a0",
							"numberOfRewardedParticipants()": "1318fbf1",
							"owner()": "8da5cb5b",
							"pauseSurvey()": "e082fe2a",
							"paused()": "5c975abb",
							"processRewardClaimByParticipant(address)": "a0858343",
							"renounceOwnership()": "715018a6",
							"rewardAmountPerParticipantInWei()": "7a0abf08",
							"targetNumberOfParticipants()": "a6a09811",
							"transferOwnership(address)": "f2fde38b",
							"unpauseSurvey()": "3960fc66",
							"updateRewardAmountPerParticipant(uint256)": "64bb632f",
							"updateTargetNumberOfParticipants(uint256)": "528780cc",
							"whitelistMultipleAddresses(address[])": "81aeb13b",
							"whitelistOneAddress(address)": "e8a748e7",
							"withdrawAllRewardFundsToResearcher()": "f22069df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"researcherWalletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardAmountPerParticipantInWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetNumberOfParticipants\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"cUSDTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllParticipantsRewarded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNumberOfTargetParticipants\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardAmountGiven\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"ParticipantAlreadyRewarded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"UserAddressAlreadyWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"UserAddressNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"MultipleUserAddressesWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"MultipleWhitelistedUserAddressesBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"}],\"name\":\"OneUserAddressWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"}],\"name\":\"OneWhitelistedUserAddressBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"}],\"name\":\"ParticipantMarkedAsRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ParticipantRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldcUSDRewardAmountPerParticipantInWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newcUSDRewardAmountPerParticipantInWei\",\"type\":\"uint256\"}],\"name\":\"RewardAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"researcherWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTargetNumberOfParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTargetNumberOfParticipants\",\"type\":\"uint256\"}],\"name\":\"TargetNumberOfParticipantsUpdates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"blacklistMultipleWhitelistedAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"blacklistOneWhitelistedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cUSD\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"checkIfParticipantHasAlreadyClaimedReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"checkIfUserAddressIsBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"checkIfUserAddressIsWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfRewardedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmountPerParticipantInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"registeredAddresses\",\"type\":\"address[]\"}],\"name\":\"getWhitelistedAddressesFromRegisteredAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfRewardedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"processRewardClaimByParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmountPerParticipantInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetNumberOfParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRewardAmountPerParticipantInWei\",\"type\":\"uint256\"}],\"name\":\"updateRewardAmountPerParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTargetNumberOfParticipants\",\"type\":\"uint256\"}],\"name\":\"updateTargetNumberOfParticipants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"whitelistMultipleAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"whitelistOneAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllRewardFundsToResearcher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/CanvassingSurvey.sol\":\"CanvassingSurvey\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"hardhat/contracts/CanvassingSurvey.sol\":{\"keccak256\":\"0x60135d508db858a38bac1888a5ecf3a5b791e9a41dd4247e1a3bcb3d31c6fbc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27b9d0a09753b8922c165d0ef7e7669a2dabcaa47a719008b305cd7de864bd00\",\"dweb:/ipfs/QmXvfvq9SEJzMnrLW9FT5tP2J31Y2D9sKD5edmcfSbtvrc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 409,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 290,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 486,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "usersWhitelistedForSurvey",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 490,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "participantsWhoHaveClaimedRewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 492,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "rewardAmountPerParticipantInWei",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 494,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "targetNumberOfParticipants",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 496,
								"contract": "hardhat/contracts/CanvassingSurvey.sol:CanvassingSurvey",
								"label": "numberOfRewardedParticipants",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 282,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								281
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 226,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC20",
										"nameLocations": [
											"306:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "306:6:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:2",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:2"
									},
									"scope": 251,
									"src": "378:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "540:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:2"
									},
									"scope": 251,
									"src": "499:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "674:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 247,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:2"
									},
									"scope": 251,
									"src": "631:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "278:405:2",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "125:559:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							281
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 281,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 268,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 267,
												"id": 270,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 281,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 281,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Pausable": [
							398
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 282,
							"src": "128:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 284,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 287,
										"name": "Context",
										"nameLocations": [
											"645:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "645:7:4"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398,
								281
							],
							"name": "Pausable",
							"nameLocation": "633:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "659:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 289,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "770:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "777:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:4"
									},
									"src": "764:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "881:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "890:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:4"
									},
									"src": "875:32:4"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 303,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:4"
									},
									"src": "994:22:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 306,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:4"
									},
									"src": "1107:22:4"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1221:32:4",
										"statements": [
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1231:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:4"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:4"
									},
									"scope": 398,
									"src": "1207:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1464:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1474:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:4"
											},
											{
												"id": 321,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:4"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 323,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:4"
									},
									"src": "1439:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1711:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1721:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:4"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:4"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 331,
									"name": "whenPaused",
									"nameLocation": "1698:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:4"
									},
									"src": "1689:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "1903:31:4",
										"statements": [
											{
												"expression": {
													"id": 337,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "1920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 336,
												"id": 338,
												"nodeType": "Return",
												"src": "1913:14:4"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1897:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:4"
									},
									"scope": 398,
									"src": "1850:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2053:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2067:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "IfStatement",
												"src": "2063:61:4",
												"trueBody": {
													"id": 349,
													"nodeType": "Block",
													"src": "2077:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 346,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "2098:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 348,
															"nodeType": "RevertStatement",
															"src": "2091:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:4"
									},
									"scope": 398,
									"src": "2002:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2250:78:4",
										"statements": [
											{
												"condition": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 356,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "2265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 363,
												"nodeType": "IfStatement",
												"src": "2260:62:4",
												"trueBody": {
													"id": 362,
													"nodeType": "Block",
													"src": "2275:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 359,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "2296:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 361,
															"nodeType": "RevertStatement",
															"src": "2289:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:4"
									},
									"scope": 398,
									"src": "2202:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2512:66:4",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2522:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 376,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2558:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 375,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2551:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "2546:25:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 368,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "2498:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:4"
									},
									"scope": 398,
									"src": "2463:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "2758:69:4",
										"statements": [
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2768:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 392,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2807:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 391,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2798:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "EmitStatement",
												"src": "2793:27:4"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 384,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2747:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:4"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:4"
									},
									"scope": 398,
									"src": "2710:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 399,
							"src": "615:2214:4",
							"usedErrors": [
								303,
								306
							],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "102:2728:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 401,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 404,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "1818:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 407,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "1864:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 406,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "1907:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 412,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"src": "1994:37:5"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2051:38:5",
										"statements": [
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 415,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2061:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 416,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2071:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:5"
											}
										]
									},
									"id": 420,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:5"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:5"
									},
									"scope": 467,
									"src": "2037:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2490:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2500:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:5"
											},
											{
												"id": 426,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 427,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2542:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:5"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2475:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:5"
									},
									"src": "2466:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2614:268:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2702:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 435,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2713:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "2698:86:5",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "2722:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 437,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "2743:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 439,
															"nodeType": "RevertStatement",
															"src": "2736:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2858:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 443,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2868:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:5"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:5"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:5"
									},
									"scope": 467,
									"src": "2575:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2926:170:5",
										"statements": [
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 450,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3068:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 451,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3078:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:5"
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:5"
									},
									"scope": 467,
									"src": "2888:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "3339:42:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 461,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3356:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 462,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3367:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 460,
												"id": 464,
												"nodeType": "Return",
												"src": "3349:25:5"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:5"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3333:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:5"
									},
									"scope": 467,
									"src": "3275:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 468,
							"src": "1030:2353:5",
							"usedErrors": [
								412
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:5"
				},
				"id": 5
			},
			"hardhat/contracts/CanvassingSurvey.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/CanvassingSurvey.sol",
					"exportedSymbols": {
						"CanvassingSurvey": [
							1310
						],
						"Context": [
							281
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						],
						"Ownable": [
							147
						],
						"Pausable": [
							398
						],
						"ReentrancyGuard": [
							467
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 148,
							"src": "58:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 252,
							"src": "111:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 468,
							"src": "187:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 399,
							"src": "247:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "Ownable",
										"nameLocations": [
											"330:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "330:7:6"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "330:7:6"
								},
								{
									"baseName": {
										"id": 476,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"339:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "339:15:6"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "339:15:6"
								},
								{
									"baseName": {
										"id": 478,
										"name": "Pausable",
										"nameLocations": [
											"356:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 398,
										"src": "356:8:6"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "356:8:6"
								}
							],
							"canonicalName": "CanvassingSurvey",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								398,
								467,
								147,
								281
							],
							"name": "CanvassingSurvey",
							"nameLocation": "310:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1fccf672",
									"id": 482,
									"mutability": "immutable",
									"name": "cUSD",
									"nameLocation": "403:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1310,
									"src": "371:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Metadata_$251",
										"typeString": "contract IERC20Metadata"
									},
									"typeName": {
										"id": 481,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 480,
											"name": "IERC20Metadata",
											"nameLocations": [
												"371:14:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 251,
											"src": "371:14:6"
										},
										"referencedDeclaration": 251,
										"src": "371:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$251",
											"typeString": "contract IERC20Metadata"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "usersWhitelistedForSurvey",
									"nameLocation": "447:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 1310,
									"src": "414:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 485,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 483,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "422:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "414:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "433:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "participantsWhoHaveClaimedRewards",
									"nameLocation": "511:33:6",
									"nodeType": "VariableDeclaration",
									"scope": 1310,
									"src": "478:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 489,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 487,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "486:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "478:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 488,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "497:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7a0abf08",
									"id": 492,
									"mutability": "mutable",
									"name": "rewardAmountPerParticipantInWei",
									"nameLocation": "566:31:6",
									"nodeType": "VariableDeclaration",
									"scope": 1310,
									"src": "551:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6a09811",
									"id": 494,
									"mutability": "mutable",
									"name": "targetNumberOfParticipants",
									"nameLocation": "618:26:6",
									"nodeType": "VariableDeclaration",
									"scope": 1310,
									"src": "603:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 493,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "603:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1318fbf1",
									"id": 496,
									"mutability": "mutable",
									"name": "numberOfRewardedParticipants",
									"nameLocation": "665:28:6",
									"nodeType": "VariableDeclaration",
									"scope": 1310,
									"src": "650:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 495,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d27",
									"id": 500,
									"name": "OneUserAddressWhitelisted",
									"nameLocation": "706:25:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "740:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "732:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:34:6"
									},
									"src": "700:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc",
									"id": 505,
									"name": "MultipleUserAddressesWhitelisted",
									"nameLocation": "777:32:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "820:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "810:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 501,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "810:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 502,
													"nodeType": "ArrayTypeName",
													"src": "810:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:27:6"
									},
									"src": "771:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "a354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e2",
									"id": 509,
									"name": "OneWhitelistedUserAddressBlacklisted",
									"nameLocation": "848:36:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "902:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "894:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:48:6"
									},
									"src": "842:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "d68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b",
									"id": 514,
									"name": "MultipleWhitelistedUserAddressesBlacklisted",
									"nameLocation": "944:43:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"indexed": false,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "1007:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "997:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 510,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "997:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 511,
													"nodeType": "ArrayTypeName",
													"src": "997:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:41:6"
									},
									"src": "938:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e",
									"id": 520,
									"name": "ParticipantRewarded",
									"nameLocation": "1040:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "1077:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1069:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1119:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1111:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:78:6"
									},
									"src": "1034:104:6"
								},
								{
									"anonymous": false,
									"eventSelector": "654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943",
									"id": 524,
									"name": "ParticipantMarkedAsRewarded",
									"nameLocation": "1149:27:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "1185:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1177:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:6"
									},
									"src": "1143:68:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097",
									"id": 530,
									"name": "RewardFundsWithdrawn",
									"nameLocation": "1222:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "researcherWalletAddress",
												"nameLocation": "1260:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1252:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1301:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1293:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:77:6"
									},
									"src": "1216:104:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c94",
									"id": 536,
									"name": "RewardAmountUpdated",
									"nameLocation": "1331:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldcUSDRewardAmountPerParticipantInWei",
												"nameLocation": "1368:38:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1360:46:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "newcUSDRewardAmountPerParticipantInWei",
												"nameLocation": "1424:38:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1416:46:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1416:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1350:118:6"
									},
									"src": "1325:144:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef",
									"id": 542,
									"name": "TargetNumberOfParticipantsUpdates",
									"nameLocation": "1481:33:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldTargetNumberOfParticipants",
												"nameLocation": "1532:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1524:37:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTargetNumberOfParticipants",
												"nameLocation": "1579:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1571:37:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:100:6"
									},
									"src": "1475:140:6"
								},
								{
									"errorSelector": "d92e233d",
									"id": 544,
									"name": "ZeroAddress",
									"nameLocation": "1627:11:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:2:6"
									},
									"src": "1621:20:6"
								},
								{
									"errorSelector": "d428a010",
									"id": 546,
									"name": "InvalidRewardAmountGiven",
									"nameLocation": "1652:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1676:2:6"
									},
									"src": "1646:33:6"
								},
								{
									"errorSelector": "db17bb1c",
									"id": 548,
									"name": "InvalidNumberOfTargetParticipants",
									"nameLocation": "1690:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1723:2:6"
									},
									"src": "1684:42:6"
								},
								{
									"errorSelector": "de55cc33",
									"id": 552,
									"name": "UserAddressNotWhitelisted",
									"nameLocation": "1737:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1771:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1763:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:23:6"
									},
									"src": "1731:55:6"
								},
								{
									"errorSelector": "6e8ce4b6",
									"id": 556,
									"name": "UserAddressAlreadyWhitelisted",
									"nameLocation": "1797:29:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1835:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1827:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:23:6"
									},
									"src": "1791:59:6"
								},
								{
									"errorSelector": "0f72fb78",
									"id": 560,
									"name": "ParticipantAlreadyRewarded",
									"nameLocation": "1861:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1896:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1888:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1888:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:23:6"
									},
									"src": "1855:56:6"
								},
								{
									"errorSelector": "5b8ffc14",
									"id": 562,
									"name": "NoRewardFunds",
									"nameLocation": "1922:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1935:2:6"
									},
									"src": "1916:22:6"
								},
								{
									"errorSelector": "78ecf410",
									"id": 564,
									"name": "RewardTransferFailed",
									"nameLocation": "1949:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1969:2:6"
									},
									"src": "1943:29:6"
								},
								{
									"errorSelector": "9c01fc00",
									"id": 566,
									"name": "AllParticipantsRewarded",
									"nameLocation": "1983:23:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:2:6"
									},
									"src": "1977:32:6"
								},
								{
									"errorSelector": "27fcd9d1",
									"id": 568,
									"name": "WithdrawalFailed",
									"nameLocation": "2021:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2037:2:6"
									},
									"src": "2015:25:6"
								},
								{
									"errorSelector": "9d89020a",
									"id": 570,
									"name": "InvalidArrayLength",
									"nameLocation": "2051:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:2:6"
									},
									"src": "2045:27:6"
								},
								{
									"errorSelector": "786e0a99",
									"id": 572,
									"name": "InsufficientContractBalance",
									"nameLocation": "2083:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:2:6"
									},
									"src": "2077:36:6"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "2174:146:6",
										"statements": [
											{
												"condition": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2188:41:6",
													"subExpression": {
														"baseExpression": {
															"id": 576,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2189:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 578,
														"indexExpression": {
															"id": 577,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "2215:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2189:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "IfStatement",
												"src": "2184:119:6",
												"trueBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "2231:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 581,
																		"name": "walletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "2278:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 580,
																	"name": "UserAddressNotWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "2252:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2252:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 583,
															"nodeType": "RevertStatement",
															"src": "2245:47:6"
														}
													]
												}
											},
											{
												"id": 586,
												"nodeType": "PlaceholderStatement",
												"src": "2312:1:6"
											}
										]
									},
									"id": 588,
									"name": "onlyWhitelistedAddress",
									"nameLocation": "2128:22:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "2159:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2151:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:23:6"
									},
									"src": "2119:201:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2375:146:6",
										"statements": [
											{
												"condition": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2389:41:6",
													"subExpression": {
														"baseExpression": {
															"id": 592,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2390:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "2416:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2390:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 601,
												"nodeType": "IfStatement",
												"src": "2385:119:6",
												"trueBody": {
													"id": 600,
													"nodeType": "Block",
													"src": "2432:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 597,
																		"name": "walletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "2479:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 596,
																	"name": "UserAddressNotWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "2453:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2453:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 599,
															"nodeType": "RevertStatement",
															"src": "2446:47:6"
														}
													]
												}
											},
											{
												"id": 602,
												"nodeType": "PlaceholderStatement",
												"src": "2513:1:6"
											}
										]
									},
									"id": 604,
									"name": "mustBeWhitelisted",
									"nameLocation": "2334:17:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "2360:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2352:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2351:23:6"
									},
									"src": "2325:196:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "2577:149:6",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 608,
														"name": "usersWhitelistedForSurvey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2591:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 610,
													"indexExpression": {
														"id": 609,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "2617:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2591:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "2587:122:6",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "2633:76:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 612,
																		"name": "walletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "2684:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 611,
																	"name": "UserAddressAlreadyWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "2654:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2654:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 614,
															"nodeType": "RevertStatement",
															"src": "2647:51:6"
														}
													]
												}
											},
											{
												"id": 617,
												"nodeType": "PlaceholderStatement",
												"src": "2718:1:6"
											}
										]
									},
									"id": 619,
									"name": "mustBeBlacklisted",
									"nameLocation": "2536:17:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "2562:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "2554:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2553:23:6"
									},
									"src": "2527:199:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "2800:176:6",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 623,
														"name": "participantsWhoHaveClaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "2814:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 625,
													"indexExpression": {
														"id": 624,
														"name": "participantWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2848:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2814:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "2810:149:6",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "2875:84:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "participantWalletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "2923:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 626,
																	"name": "ParticipantAlreadyRewarded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "2896:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2896:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "2889:59:6"
														}
													]
												}
											},
											{
												"id": 632,
												"nodeType": "PlaceholderStatement",
												"src": "2968:1:6"
											}
										]
									},
									"id": 634,
									"name": "onlyUnrewardedParticipant",
									"nameLocation": "2740:25:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "2774:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2766:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:34:6"
									},
									"src": "2731:245:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3203:590:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 648,
															"name": "researcherWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "3230:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3265:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3257:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 649,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3257:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3257:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3230:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 654,
															"name": "cUSDTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "3283:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3311:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3303:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 655,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3303:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3303:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3283:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3230:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "3213:156:6",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "3324:45:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 661,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3345:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3345:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 663,
															"nodeType": "RevertStatement",
															"src": "3338:20:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 666,
														"name": "_rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3382:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3418:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3382:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "3378:101:6",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "3421:58:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 669,
																	"name": "InvalidRewardAmountGiven",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "3442:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3442:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 671,
															"nodeType": "RevertStatement",
															"src": "3435:33:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "_targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3493:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3524:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3493:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "3489:105:6",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "3527:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 677,
																	"name": "InvalidNumberOfTargetParticipants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "3548:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3548:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 679,
															"nodeType": "RevertStatement",
															"src": "3541:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 682,
														"name": "cUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3604:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$251",
															"typeString": "contract IERC20Metadata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 684,
																"name": "cUSDTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "3626:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 683,
															"name": "IERC20Metadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3611:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$251_$",
																"typeString": "type(contract IERC20Metadata)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3611:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$251",
															"typeString": "contract IERC20Metadata"
														}
													},
													"src": "3604:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Metadata_$251",
														"typeString": "contract IERC20Metadata"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "3604:39:6"
											},
											{
												"expression": {
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 688,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3654:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 689,
														"name": "_rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "3688:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3654:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "3654:66:6"
											},
											{
												"expression": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 692,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "3730:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 693,
														"name": "_targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3759:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3730:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "3730:56:6"
											}
										]
									},
									"id": 697,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 645,
													"name": "researcherWalletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 636,
													"src": "3178:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 646,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 644,
												"name": "Ownable",
												"nameLocations": [
													"3170:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3170:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3170:32:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "researcherWalletAddress",
												"nameLocation": "3011:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3003:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_rewardAmountPerParticipantInWei",
												"nameLocation": "3052:32:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3044:40:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "_targetNumberOfParticipants",
												"nameLocation": "3102:27:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3094:35:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "cUSDTokenAddress",
												"nameLocation": "3147:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3139:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2993:176:6"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3203:0:6"
									},
									"scope": 1310,
									"src": "2982:811:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "3931:206:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "3945:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3970:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3962:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3962:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3962:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3945:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "3941:78:6",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "3974:45:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 713,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3995:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3995:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 715,
															"nodeType": "RevertStatement",
															"src": "3988:20:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 718,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4028:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 720,
														"indexExpression": {
															"id": 719,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4054:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4028:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4071:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4028:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "4028:47:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 725,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4116:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 724,
														"name": "OneUserAddressWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "4090:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4090:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "EmitStatement",
												"src": "4085:45:6"
											}
										]
									},
									"functionSelector": "e8a748e7",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 701,
												"name": "onlyOwner",
												"nameLocations": [
													"3876:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3876:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3876:9:6"
										},
										{
											"arguments": [
												{
													"id": 704,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "3912:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 703,
												"name": "mustBeBlacklisted",
												"nameLocations": [
													"3894:17:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 619,
												"src": "3894:17:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3894:32:6"
										}
									],
									"name": "whitelistOneAddress",
									"nameLocation": "3808:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "3836:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3828:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:23:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3931:0:6"
									},
									"scope": 1310,
									"src": "3799:338:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "4286:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "4300:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4325:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4317:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 740,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4317:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4317:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4300:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "4296:78:6",
												"trueBody": {
													"id": 748,
													"nodeType": "Block",
													"src": "4329:45:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 745,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4350:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4350:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 747,
															"nodeType": "RevertStatement",
															"src": "4343:20:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 750,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4383:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 752,
														"indexExpression": {
															"id": 751,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4409:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4383:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4426:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4383:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "4383:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 757,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "4483:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 756,
														"name": "OneWhitelistedUserAddressBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "4446:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4446:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "EmitStatement",
												"src": "4441:56:6"
											}
										]
									},
									"functionSelector": "e3bb2d40",
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 733,
												"name": "onlyOwner",
												"nameLocations": [
													"4231:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4231:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4231:9:6"
										},
										{
											"arguments": [
												{
													"id": 736,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 731,
													"src": "4267:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 737,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 735,
												"name": "mustBeWhitelisted",
												"nameLocations": [
													"4249:17:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 604,
												"src": "4249:17:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4249:32:6"
										}
									],
									"name": "blacklistOneWhitelistedAddress",
									"nameLocation": "4152:30:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "4191:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "4183:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4182:23:6"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4286:0:6"
									},
									"scope": 1310,
									"src": "4143:361:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "4621:750:6",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "4639:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 846,
														"src": "4631:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4631:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"expression": {
														"id": 771,
														"name": "walletAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "4648:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4664:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4648:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4631:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 774,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "4684:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4694:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4684:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "4680:69:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "4697:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 777,
																	"name": "InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "4718:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4718:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "4711:27:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 819,
													"nodeType": "Block",
													"src": "4793:327:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 789,
																		"name": "walletAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "4811:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 791,
																	"indexExpression": {
																		"id": 790,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "4827:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4811:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4841:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4833:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 792,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4833:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4833:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4811:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 801,
															"nodeType": "IfStatement",
															"src": "4807:91:6",
															"trueBody": {
																"id": 800,
																"nodeType": "Block",
																"src": "4845:53:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 797,
																				"name": "ZeroAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4870:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4870:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 799,
																		"nodeType": "RevertStatement",
																		"src": "4863:20:6"
																	}
																]
															}
														},
														{
															"condition": {
																"baseExpression": {
																	"id": 802,
																	"name": "usersWhitelistedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "4915:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 806,
																"indexExpression": {
																	"baseExpression": {
																		"id": 803,
																		"name": "walletAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "4941:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 805,
																	"indexExpression": {
																		"id": 804,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "4957:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4941:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4915:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 814,
															"nodeType": "IfStatement",
															"src": "4911:140:6",
															"trueBody": {
																"id": 813,
																"nodeType": "Block",
																"src": "4962:89:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 808,
																						"name": "walletAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 764,
																						"src": "5017:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 810,
																					"indexExpression": {
																						"id": 809,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 783,
																						"src": "5033:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5017:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 807,
																				"name": "UserAddressAlreadyWhitelisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "4987:29:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4987:49:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 812,
																		"nodeType": "RevertStatement",
																		"src": "4980:56:6"
																	}
																]
															}
														},
														{
															"id": 818,
															"nodeType": "UncheckedBlock",
															"src": "5064:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5092:3:6",
																		"subExpression": {
																			"id": 815,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 783,
																			"src": "5094:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 817,
																	"nodeType": "ExpressionStatement",
																	"src": "5092:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 786,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "4779:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 787,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "4783:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4779:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"initializationExpression": {
													"assignments": [
														783
													],
													"declarations": [
														{
															"constant": false,
															"id": 783,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4772:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 820,
															"src": "4764:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 782,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4764:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 785,
													"initialValue": {
														"hexValue": "30",
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4776:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4764:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "4759:361:6"
											},
											{
												"body": {
													"id": 840,
													"nodeType": "Block",
													"src": "5164:136:6",
													"statements": [
														{
															"expression": {
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 828,
																		"name": "usersWhitelistedForSurvey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5178:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 832,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 829,
																			"name": "walletAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "5204:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 831,
																		"indexExpression": {
																			"id": 830,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "5220:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5204:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5178:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5226:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5178:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 835,
															"nodeType": "ExpressionStatement",
															"src": "5178:52:6"
														},
														{
															"id": 839,
															"nodeType": "UncheckedBlock",
															"src": "5244:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5272:3:6",
																		"subExpression": {
																			"id": 836,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "5274:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "5272:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "5150:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 826,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "5154:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5150:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"initializationExpression": {
													"assignments": [
														822
													],
													"declarations": [
														{
															"constant": false,
															"id": 822,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5143:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 841,
															"src": "5135:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 821,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5135:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 824,
													"initialValue": {
														"hexValue": "30",
														"id": 823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5147:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5135:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5130:170:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 843,
															"name": "walletAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "5348:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 842,
														"name": "MultipleUserAddressesWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "5315:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "EmitStatement",
												"src": "5310:54:6"
											}
										]
									},
									"functionSelector": "81aeb13b",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 767,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 766,
												"name": "onlyOwner",
												"nameLocations": [
													"4607:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4607:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4607:9:6"
										}
									],
									"name": "whitelistMultipleAddresses",
									"nameLocation": "4519:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "4565:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "4546:34:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 762,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4546:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 763,
													"nodeType": "ArrayTypeName",
													"src": "4546:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4545:36:6"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4621:0:6"
									},
									"scope": 1310,
									"src": "4510:861:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "5493:758:6",
										"statements": [
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "5511:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 933,
														"src": "5503:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"expression": {
														"id": 857,
														"name": "walletAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "5520:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5536:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5520:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5503:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "5556:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5566:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5556:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "5552:69:6",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "5569:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 863,
																	"name": "InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "5590:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "5583:27:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 906,
													"nodeType": "Block",
													"src": "5665:324:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 875,
																		"name": "walletAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "5683:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 877,
																	"indexExpression": {
																		"id": 876,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "5699:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5683:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5713:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5705:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 878,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5705:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5705:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5683:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 887,
															"nodeType": "IfStatement",
															"src": "5679:91:6",
															"trueBody": {
																"id": 886,
																"nodeType": "Block",
																"src": "5717:53:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 883,
																				"name": "ZeroAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "5742:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5742:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 885,
																		"nodeType": "RevertStatement",
																		"src": "5735:20:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5787:46:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 888,
																		"name": "usersWhitelistedForSurvey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5788:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 892,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 889,
																			"name": "walletAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 850,
																			"src": "5814:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 891,
																		"indexExpression": {
																			"id": 890,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "5830:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5814:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5788:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 901,
															"nodeType": "IfStatement",
															"src": "5783:137:6",
															"trueBody": {
																"id": 900,
																"nodeType": "Block",
																"src": "5835:85:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 895,
																						"name": "walletAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 850,
																						"src": "5886:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 897,
																					"indexExpression": {
																						"id": 896,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 869,
																						"src": "5902:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5886:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 894,
																				"name": "UserAddressNotWhitelisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "5860:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5860:45:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 899,
																		"nodeType": "RevertStatement",
																		"src": "5853:52:6"
																	}
																]
															}
														},
														{
															"id": 905,
															"nodeType": "UncheckedBlock",
															"src": "5933:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5961:3:6",
																		"subExpression": {
																			"id": 902,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "5963:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 904,
																	"nodeType": "ExpressionStatement",
																	"src": "5961:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "5651:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 873,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "5655:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5651:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"initializationExpression": {
													"assignments": [
														869
													],
													"declarations": [
														{
															"constant": false,
															"id": 869,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5644:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 907,
															"src": "5636:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 868,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5636:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 871,
													"initialValue": {
														"hexValue": "30",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5648:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5636:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5631:358:6"
											},
											{
												"body": {
													"id": 927,
													"nodeType": "Block",
													"src": "6033:137:6",
													"statements": [
														{
															"expression": {
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 915,
																		"name": "usersWhitelistedForSurvey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "6047:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 919,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 916,
																			"name": "walletAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 850,
																			"src": "6073:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 918,
																		"indexExpression": {
																			"id": 917,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "6089:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6073:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6047:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6095:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6047:53:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 922,
															"nodeType": "ExpressionStatement",
															"src": "6047:53:6"
														},
														{
															"id": 926,
															"nodeType": "UncheckedBlock",
															"src": "6114:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "6142:3:6",
																		"subExpression": {
																			"id": 923,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "6144:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 925,
																	"nodeType": "ExpressionStatement",
																	"src": "6142:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 912,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6019:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 913,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "6023:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6019:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"initializationExpression": {
													"assignments": [
														909
													],
													"declarations": [
														{
															"constant": false,
															"id": 909,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6012:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 928,
															"src": "6004:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 908,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6004:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 911,
													"initialValue": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6016:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6004:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5999:171:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 930,
															"name": "walletAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "6228:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 929,
														"name": "MultipleWhitelistedUserAddressesBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "6184:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 932,
												"nodeType": "EmitStatement",
												"src": "6179:65:6"
											}
										]
									},
									"functionSelector": "c9539f71",
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 853,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 852,
												"name": "onlyOwner",
												"nameLocations": [
													"5483:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5483:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5483:9:6"
										}
									],
									"name": "blacklistMultipleWhitelistedAddresses",
									"nameLocation": "5386:37:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "5452:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "5433:34:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 848,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5433:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 849,
													"nodeType": "ArrayTypeName",
													"src": "5433:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5423:50:6"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:6"
									},
									"scope": 1310,
									"src": "5377:874:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "6480:250:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 953,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6517:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CanvassingSurvey_$1310",
																			"typeString": "contract CanvassingSurvey"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CanvassingSurvey_$1310",
																			"typeString": "contract CanvassingSurvey"
																		}
																	],
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6509:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6509:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6509:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 949,
																"name": "cUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "6494:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6499:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "6494:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6494:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 956,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "6526:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6494:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "6490:130:6",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "6559:61:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 958,
																	"name": "InsufficientContractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "6580:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6580:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "6573:36:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6667:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 963,
														"name": "markParticipantAsHavingClaimedReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "6630:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6630:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "6630:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "6709:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 967,
														"name": "rewardParticipant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "6691:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6691:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "6691:32:6"
											}
										]
									},
									"functionSelector": "a0858343",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 939,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 938,
												"name": "whenNotPaused",
												"nameLocations": [
													"6346:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "6346:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6346:13:6"
										},
										{
											"id": 941,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 940,
												"name": "nonReentrant",
												"nameLocations": [
													"6368:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "6368:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6368:12:6"
										},
										{
											"arguments": [
												{
													"id": 943,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 936,
													"src": "6412:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 944,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 942,
												"name": "onlyWhitelistedAddress",
												"nameLocations": [
													"6389:22:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 588,
												"src": "6389:22:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6389:37:6"
										},
										{
											"arguments": [
												{
													"id": 946,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 936,
													"src": "6461:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 945,
												"name": "onlyUnrewardedParticipant",
												"nameLocations": [
													"6435:25:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 634,
												"src": "6435:25:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6435:40:6"
										}
									],
									"name": "processRewardClaimByParticipant",
									"nameLocation": "6266:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "6306:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "6298:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6298:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:23:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6480:0:6"
									},
									"scope": 1310,
									"src": "6257:473:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "6838:151:6",
										"statements": [
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 977,
															"name": "participantsWhoHaveClaimedRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "6848:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 979,
														"indexExpression": {
															"id": 978,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "6882:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6848:59:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6910:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6848:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "6848:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 984,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "6957:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 983,
														"name": "ParticipantMarkedAsRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "6929:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "EmitStatement",
												"src": "6924:58:6"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markParticipantAsHavingClaimedReward",
									"nameLocation": "6745:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "6799:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "6791:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6781:48:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6838:0:6"
									},
									"scope": 1310,
									"src": "6736:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "7064:546:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "numberOfRewardedParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "7078:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 994,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7110:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7078:58:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1000,
												"nodeType": "IfStatement",
												"src": "7074:121:6",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "7138:57:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 996,
																	"name": "AllParticipantsRewarded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "7159:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7159:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 998,
															"nodeType": "RevertStatement",
															"src": "7152:32:6"
														}
													]
												}
											},
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7209:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "7204:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1001,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7204:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [
														{
															"id": 1005,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7246:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "rewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "7284:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1003,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7219:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7224:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "7219:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7219:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7204:121:6"
											},
											{
												"condition": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7339:8:6",
													"subExpression": {
														"id": 1009,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "7340:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "IfStatement",
												"src": "7335:68:6",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "7349:54:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1011,
																	"name": "RewardTransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "7370:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7370:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1013,
															"nodeType": "RevertStatement",
															"src": "7363:29:6"
														}
													]
												}
											},
											{
												"id": 1019,
												"nodeType": "UncheckedBlock",
												"src": "7412:65:6",
												"statements": [
													{
														"expression": {
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "7436:30:6",
															"subExpression": {
																"id": 1016,
																"name": "numberOfRewardedParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "7438:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1018,
														"nodeType": "ExpressionStatement",
														"src": "7436:30:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1021,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7524:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "rewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "7562:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "ParticipantRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "7491:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7491:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "EmitStatement",
												"src": "7486:117:6"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardParticipant",
									"nameLocation": "7004:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "7030:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "7022:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7022:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7021:34:6"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7064:0:6"
									},
									"scope": 1310,
									"src": "6995:615:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "7744:320:6",
										"statements": [
											{
												"assignments": [
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "7762:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "7754:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7754:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1041,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7795:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CanvassingSurvey_$1310",
																		"typeString": "contract CanvassingSurvey"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CanvassingSurvey_$1310",
																		"typeString": "contract CanvassingSurvey"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7787:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7787:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7787:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1037,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7772:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7777:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "7772:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7772:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7754:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "7815:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7826:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7815:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "7811:65:6",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "7829:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1048,
																	"name": "NoRewardFunds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7850:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7850:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1050,
															"nodeType": "RevertStatement",
															"src": "7843:22:6"
														}
													]
												}
											},
											{
												"assignments": [
													1054
												],
												"declarations": [
													{
														"constant": false,
														"id": 1054,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7890:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "7885:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1053,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7885:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1057,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "7914:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7914:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7923:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1055,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7900:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7905:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "7900:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7885:46:6"
											},
											{
												"condition": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7945:8:6",
													"subExpression": {
														"id": 1062,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "7946:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "7941:64:6",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "7955:50:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1064,
																	"name": "WithdrawalFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "7976:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7976:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "7969:25:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1070,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "8040:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8040:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "8049:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "RewardFundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "8019:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "EmitStatement",
												"src": "8014:43:6"
											}
										]
									},
									"functionSelector": "f22069df",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1029,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1028,
												"name": "onlyOwner",
												"nameLocations": [
													"7687:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7687:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7687:9:6"
										},
										{
											"id": 1031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1030,
												"name": "whenNotPaused",
												"nameLocations": [
													"7705:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "7705:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7705:13:6"
										},
										{
											"id": 1033,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1032,
												"name": "nonReentrant",
												"nameLocations": [
													"7727:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "7727:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7727:12:6"
										}
									],
									"name": "withdrawAllRewardFundsToResearcher",
									"nameLocation": "7625:34:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7659:2:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7744:0:6"
									},
									"scope": 1310,
									"src": "7616:448:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "8190:516:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1083,
														"name": "_newRewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "8204:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8243:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8204:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "8200:104:6",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "8246:58:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1086,
																	"name": "InvalidRewardAmountGiven",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "8267:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8267:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1088,
															"nodeType": "RevertStatement",
															"src": "8260:33:6"
														}
													]
												}
											},
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "oldRewardAmountPerParticipantInWei",
														"nameLocation": "8321:34:6",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "8313:42:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1091,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8313:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"id": 1093,
													"name": "rewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "8358:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8313:76:6"
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "newRewardAmountPerParticipantInWei",
														"nameLocation": "8408:34:6",
														"nodeType": "VariableDeclaration",
														"scope": 1108,
														"src": "8400:42:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1095,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8400:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"id": 1097,
													"name": "_newRewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "8445:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8400:80:6"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "8490:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1100,
														"name": "newRewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "8524:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8490:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "8490:68:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1104,
															"name": "oldRewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "8607:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1105,
															"name": "newRewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "8655:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1103,
														"name": "RewardAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "8574:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8574:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "EmitStatement",
												"src": "8569:130:6"
											}
										]
									},
									"functionSelector": "64bb632f",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyOwner",
												"nameLocations": [
													"8180:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8180:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8180:9:6"
										}
									],
									"name": "updateRewardAmountPerParticipant",
									"nameLocation": "8079:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "_newRewardAmountPerParticipantInWei",
												"nameLocation": "8129:35:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "8121:43:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8111:59:6"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8190:0:6"
									},
									"scope": 1310,
									"src": "8070:636:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "8827:496:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "_newTargetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "8841:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8875:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8841:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "8837:108:6",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "8878:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1119,
																	"name": "InvalidNumberOfTargetParticipants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "8899:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8899:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1121,
															"nodeType": "RevertStatement",
															"src": "8892:42:6"
														}
													]
												}
											},
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "oldTargetNumberOfParticipants",
														"nameLocation": "8963:29:6",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "8955:37:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8955:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1127,
												"initialValue": {
													"id": 1126,
													"name": "targetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 494,
													"src": "8995:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8955:66:6"
											},
											{
												"assignments": [
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "newTargetNumberOfParticipants",
														"nameLocation": "9040:29:6",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "9032:37:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9032:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"id": 1130,
													"name": "_newTargetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1111,
													"src": "9072:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9032:70:6"
											},
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1132,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "9113:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1133,
														"name": "newTargetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "9142:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9113:58:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "9113:58:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1137,
															"name": "oldTargetNumberOfParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "9234:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1138,
															"name": "newTargetNumberOfParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "9277:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1136,
														"name": "TargetNumberOfParticipantsUpdates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "9187:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9187:129:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "9182:134:6"
											}
										]
									},
									"functionSelector": "528780cc",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "onlyOwner",
												"nameLocations": [
													"8817:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8817:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8817:9:6"
										}
									],
									"name": "updateTargetNumberOfParticipants",
									"nameLocation": "8721:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "_newTargetNumberOfParticipants",
												"nameLocation": "8771:30:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "8763:38:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8763:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8753:54:6"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8827:0:6"
									},
									"scope": 1310,
									"src": "8712:611:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "9371:25:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1147,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "9381:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9381:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "9381:8:6"
											}
										]
									},
									"functionSelector": "e082fe2a",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1144,
												"name": "onlyOwner",
												"nameLocations": [
													"9361:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9361:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9361:9:6"
										}
									],
									"name": "pauseSurvey",
									"nameLocation": "9338:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9349:2:6"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9371:0:6"
									},
									"scope": 1310,
									"src": "9329:67:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "9446:27:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1156,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "9456:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "9456:10:6"
											}
										]
									},
									"functionSelector": "3960fc66",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1154,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1153,
												"name": "onlyOwner",
												"nameLocations": [
													"9436:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9436:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9436:9:6"
										}
									],
									"name": "unpauseSurvey",
									"nameLocation": "9411:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9424:2:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9446:0:6"
									},
									"scope": 1310,
									"src": "9402:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "9630:823:6",
										"statements": [
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "9648:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "9640:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9640:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1173,
												"initialValue": {
													"expression": {
														"id": 1171,
														"name": "registeredAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "9657:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9677:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "9657:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9640:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1174,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "9697:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9707:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9697:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "9693:69:6",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "9710:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1177,
																	"name": "InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "9731:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9731:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1179,
															"nodeType": "RevertStatement",
															"src": "9724:27:6"
														}
													]
												}
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "whitelistedCount",
														"nameLocation": "9780:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "9772:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9772:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1185,
												"initialValue": {
													"hexValue": "30",
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9799:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9772:28:6"
											},
											{
												"body": {
													"id": 1207,
													"nodeType": "Block",
													"src": "9844:189:6",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"id": 1193,
																	"name": "usersWhitelistedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "9862:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1197,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1194,
																		"name": "registeredAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "9888:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1196,
																	"indexExpression": {
																		"id": 1195,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "9908:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9888:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9862:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1202,
															"nodeType": "IfStatement",
															"src": "9858:106:6",
															"trueBody": {
																"id": 1201,
																"nodeType": "Block",
																"src": "9913:51:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "9931:18:6",
																			"subExpression": {
																				"id": 1198,
																				"name": "whitelistedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "9931:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1200,
																		"nodeType": "ExpressionStatement",
																		"src": "9931:18:6"
																	}
																]
															}
														},
														{
															"id": 1206,
															"nodeType": "UncheckedBlock",
															"src": "9977:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "10005:3:6",
																		"subExpression": {
																			"id": 1203,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "10007:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "10005:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1190,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "9830:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1191,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "9834:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9830:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"initializationExpression": {
													"assignments": [
														1187
													],
													"declarations": [
														{
															"constant": false,
															"id": 1187,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9823:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1208,
															"src": "9815:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1186,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9815:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1189,
													"initialValue": {
														"hexValue": "30",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9827:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9815:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "9810:223:6"
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "whitelistedAddresses",
														"nameLocation": "10060:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "10043:37:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1211,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10043:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1212,
															"nodeType": "ArrayTypeName",
															"src": "10043:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1219,
												"initialValue": {
													"arguments": [
														{
															"id": 1217,
															"name": "whitelistedCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "10097:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10083:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10087:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1215,
															"nodeType": "ArrayTypeName",
															"src": "10087:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10083:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10043:71:6"
											},
											{
												"assignments": [
													1221
												],
												"declarations": [
													{
														"constant": false,
														"id": 1221,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "10132:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1255,
														"src": "10124:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10124:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"hexValue": "30",
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10140:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10124:17:6"
											},
											{
												"body": {
													"id": 1251,
													"nodeType": "Block",
													"src": "10185:225:6",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"id": 1231,
																	"name": "usersWhitelistedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "10203:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1235,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1232,
																		"name": "registeredAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "10229:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1234,
																	"indexExpression": {
																		"id": 1233,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "10249:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10229:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10203:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1246,
															"nodeType": "IfStatement",
															"src": "10199:142:6",
															"trueBody": {
																"id": 1245,
																"nodeType": "Block",
																"src": "10254:87:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1236,
																					"name": "whitelistedAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "10272:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1239,
																				"indexExpression": {
																					"id": 1238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "10293:7:6",
																					"subExpression": {
																						"id": 1237,
																						"name": "index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1221,
																						"src": "10293:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10272:29:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1240,
																					"name": "registeredAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "10304:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 1242,
																				"indexExpression": {
																					"id": 1241,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1225,
																					"src": "10324:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10304:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10272:54:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1244,
																		"nodeType": "ExpressionStatement",
																		"src": "10272:54:6"
																	}
																]
															}
														},
														{
															"id": 1250,
															"nodeType": "UncheckedBlock",
															"src": "10354:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "10382:3:6",
																		"subExpression": {
																			"id": 1247,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1225,
																			"src": "10384:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1249,
																	"nodeType": "ExpressionStatement",
																	"src": "10382:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "10171:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1229,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "10175:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10171:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"initializationExpression": {
													"assignments": [
														1225
													],
													"declarations": [
														{
															"constant": false,
															"id": 1225,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10164:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1252,
															"src": "10156:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1224,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10156:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1227,
													"initialValue": {
														"hexValue": "30",
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10168:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10156:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "10151:259:6"
											},
											{
												"expression": {
													"id": 1253,
													"name": "whitelistedAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1213,
													"src": "10426:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1254,
												"nodeType": "Return",
												"src": "10419:27:6"
											}
										]
									},
									"functionSelector": "a34db0a0",
									"id": 1256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWhitelistedAddressesFromRegisteredAddresses",
									"nameLocation": "9488:46:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "registeredAddresses",
												"nameLocation": "9563:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "9544:38:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1161,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9544:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1162,
													"nodeType": "ArrayTypeName",
													"src": "9544:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9534:54:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "9612:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1165,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9612:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1166,
													"nodeType": "ArrayTypeName",
													"src": "9612:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9611:18:6"
									},
									"scope": 1310,
									"src": "9479:974:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "10590:72:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1263,
														"name": "participantsWhoHaveClaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "10607:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1265,
													"indexExpression": {
														"id": 1264,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "10641:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10607:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1266,
												"nodeType": "Return",
												"src": "10600:55:6"
											}
										]
									},
									"functionSelector": "6ff65c20",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfParticipantHasAlreadyClaimedReward",
									"nameLocation": "10468:41:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "10518:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "10510:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10510:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10509:23:6"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "10580:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10580:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10579:6:6"
									},
									"scope": 1310,
									"src": "10459:203:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "10789:64:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1275,
														"name": "usersWhitelistedForSurvey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "10806:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1277,
													"indexExpression": {
														"id": 1276,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "10832:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10806:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1278,
												"nodeType": "Return",
												"src": "10799:47:6"
											}
										]
									},
									"functionSelector": "fc05542a",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfUserAddressIsWhitelisted",
									"nameLocation": "10677:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "10717:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "10709:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10708:23:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "10779:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10779:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10778:6:6"
									},
									"scope": 1310,
									"src": "10668:185:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1292,
										"nodeType": "Block",
										"src": "10980:65:6",
										"statements": [
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10997:41:6",
													"subExpression": {
														"baseExpression": {
															"id": 1287,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "10998:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1289,
														"indexExpression": {
															"id": 1288,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "11024:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10998:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1291,
												"nodeType": "Return",
												"src": "10990:48:6"
											}
										]
									},
									"functionSelector": "85737020",
									"id": 1293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfUserAddressIsBlacklisted",
									"nameLocation": "10868:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "10908:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "10900:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10899:23:6"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "10970:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10970:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10969:6:6"
									},
									"scope": 1310,
									"src": "10859:186:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "11157:55:6",
										"statements": [
											{
												"expression": {
													"id": 1298,
													"name": "rewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "11174:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1299,
												"nodeType": "Return",
												"src": "11167:38:6"
											}
										]
									},
									"functionSelector": "7069243c",
									"id": 1301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmountPerParticipantInWei",
									"nameLocation": "11060:34:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11094:2:6"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "11144:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11144:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:9:6"
									},
									"scope": 1310,
									"src": "11051:161:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "11293:52:6",
										"statements": [
											{
												"expression": {
													"id": 1306,
													"name": "numberOfRewardedParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 496,
													"src": "11310:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1305,
												"id": 1307,
												"nodeType": "Return",
												"src": "11303:35:6"
											}
										]
									},
									"functionSelector": "741ae614",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfRewardedParticipants",
									"nameLocation": "11227:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11258:2:6"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11284:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11284:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11283:9:6"
									},
									"scope": 1310,
									"src": "11218:127:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "301:11046:6",
							"usedErrors": [
								13,
								18,
								303,
								306,
								412,
								544,
								546,
								548,
								552,
								556,
								560,
								562,
								564,
								566,
								568,
								570,
								572
							],
							"usedEvents": [
								24,
								295,
								300,
								500,
								505,
								509,
								514,
								520,
								524,
								530,
								536,
								542
							]
						}
					],
					"src": "32:11584:6"
				},
				"id": 6
			}
		}
	}
}