{
	"id": "f7bb980d68895052be1cb156c58eabb2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"hardhat/contracts/ClosedSurvey.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\n\n// Author: @andrewkimjoseph\n\ncontract ClosedSurvey is Ownable, ReentrancyGuard, Pausable {\n    IERC20Metadata public immutable cUSD;\n\n    mapping(address => bool) private usersWhitelistedForSurvey;\n    mapping(address => bool) private participantsWhoHaveClaimedRewards;\n\n    uint256 public rewardAmountPerParticipantInWei;\n    uint256 public targetNumberOfParticipants;\n    uint256 public numberOfRewardedParticipants;\n    uint256 public numberOfWhitelistedUserAddresses;\n\n    event OneUserAddressWhitelisted(address participantWalletAddress);\n    event MultipleUserAddressesWhitelisted(address[] walletAddresses);\n    event OneWhitelistedUserAddressBlacklisted(\n        address participantWalletAddress\n    );\n    event MultipleWhitelistedUserAddressesBlacklisted(\n        address[] walletAddresses\n    );\n    event ParticipantRewarded(\n        address participantWalletAddress,\n        uint256 rewardAmount\n    );\n    event ParticipantMarkedAsRewarded(address participantWalletAddress);\n    event RewardFundsWithdrawn(\n        address researcherWalletAddress,\n        uint256 rewardAmount\n    );\n    event RewardAmountUpdated(\n        uint256 oldcUSDRewardAmountPerParticipantInWei,\n        uint256 newcUSDRewardAmountPerParticipantInWei\n    );\n\n    event TargetNumberOfParticipantsUpdates(\n        uint256 oldTargetNumberOfParticipants,\n        uint256 newTargetNumberOfParticipants\n    );\n\n    error ZeroAddress();\n    error InvalidRewardAmountGiven();\n    error InvalidNumberOfTargetParticipants();\n    error UserAddressNotWhitelisted(address walletAddress);\n    error UserAddressAlreadyWhitelisted(address walletAddress);\n    error ParticipantAlreadyRewarded(address walletAddress);\n    error NoRewardFunds();\n    error RewardTransferFailed();\n    error AllParticipantsRewarded();\n    error UnauthorizedMessageSender(address unauthorizedMessageSender);\n    error WithdrawalFailed();\n    error InvalidArrayLength();\n    error InsufficientContractBalance();\n\n    modifier onlyWhitelistedAddress(address walletAddress) {\n        if (!usersWhitelistedForSurvey[walletAddress]) {\n            revert UserAddressNotWhitelisted(walletAddress);\n        }\n        _;\n    }\n    modifier mustBeWhitelisted(address walletAddress) {\n        if (!usersWhitelistedForSurvey[walletAddress]) {\n            revert UserAddressNotWhitelisted(walletAddress);\n        }\n        _;\n    }\n\n    modifier mustBeBlacklisted(address walletAddress) {\n        if (usersWhitelistedForSurvey[walletAddress]) {\n            revert UserAddressAlreadyWhitelisted(walletAddress);\n        }\n        _;\n    }\n    modifier onlyUnrewardedParticipant(address participantWalletAddress) {\n        if (participantsWhoHaveClaimedRewards[participantWalletAddress]) {\n            revert ParticipantAlreadyRewarded(participantWalletAddress);\n        }\n        _;\n    }\n\n    modifier onlyValidSender(address messageSender) {\n        if (msg.sender != messageSender) {\n            revert UnauthorizedMessageSender(messageSender);\n        }\n        _;\n    }\n   \n\n    constructor(\n        address researcherWalletAddress,\n        uint256 _rewardAmountPerParticipantInWei,\n        uint256 _targetNumberOfParticipants,\n        address cUSDTokenAddress\n    ) Ownable(researcherWalletAddress) {\n        if (\n            researcherWalletAddress == address(0) ||\n            cUSDTokenAddress == address(0)\n        ) {\n            revert ZeroAddress();\n        }\n        if (_rewardAmountPerParticipantInWei == 0) {\n            revert InvalidRewardAmountGiven();\n        }\n\n        if (_targetNumberOfParticipants == 0) {\n            revert InvalidNumberOfTargetParticipants();\n        }\n\n        cUSD = IERC20Metadata(cUSDTokenAddress);\n\n        rewardAmountPerParticipantInWei = _rewardAmountPerParticipantInWei;\n        targetNumberOfParticipants = _targetNumberOfParticipants;\n    }\n\n    function whitelistOneUserAddress(\n        address walletAddress\n    ) external onlyOwner mustBeBlacklisted(walletAddress) {\n        if (walletAddress == address(0)) {\n            revert ZeroAddress();\n        }\n        usersWhitelistedForSurvey[walletAddress] = true;\n        unchecked {\n            ++numberOfWhitelistedUserAddresses;\n        }\n        emit OneUserAddressWhitelisted(walletAddress);\n    }\n\n    function blacklistOneWhitelistedUserAddress(\n        address walletAddress\n    ) external onlyOwner mustBeWhitelisted(walletAddress) {\n        if (walletAddress == address(0)) {\n            revert ZeroAddress();\n        }\n        usersWhitelistedForSurvey[walletAddress] = false;\n        unchecked {\n            --numberOfWhitelistedUserAddresses;\n        }\n        emit OneWhitelistedUserAddressBlacklisted(walletAddress);\n    }\n\n    function whitelistMultipleUserAddresses(\n        address[] calldata walletAddresses\n    ) external onlyOwner {\n        uint256 length = walletAddresses.length;\n        if (length == 0) {\n            revert InvalidArrayLength();\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            if (walletAddresses[i] == address(0)) {\n                revert ZeroAddress();\n            }\n            if (usersWhitelistedForSurvey[walletAddresses[i]]) {\n                revert UserAddressAlreadyWhitelisted(walletAddresses[i]);\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            usersWhitelistedForSurvey[walletAddresses[i]] = true;\n            unchecked {\n                ++numberOfWhitelistedUserAddresses;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        emit MultipleUserAddressesWhitelisted(walletAddresses);\n    }\n\n    function blacklistMultipleWhitelistedUserAddresses(\n        address[] calldata walletAddresses\n    ) external onlyOwner {\n        uint256 length = walletAddresses.length;\n        if (length == 0) {\n            revert InvalidArrayLength();\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            if (walletAddresses[i] == address(0)) {\n                revert ZeroAddress();\n            }\n            if (!usersWhitelistedForSurvey[walletAddresses[i]]) {\n                revert UserAddressNotWhitelisted(walletAddresses[i]);\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        for (uint256 i = 0; i < length; ) {\n            usersWhitelistedForSurvey[walletAddresses[i]] = false;\n            unchecked {\n                --numberOfWhitelistedUserAddresses;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        emit MultipleWhitelistedUserAddressesBlacklisted(walletAddresses);\n    }\n\n    function processRewardClaimByParticipant(\n        address walletAddress\n    )\n        external\n        whenNotPaused\n        nonReentrant\n        onlyValidSender(walletAddress)\n        onlyWhitelistedAddress(walletAddress)\n        onlyUnrewardedParticipant(walletAddress)\n    {\n        if (cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei) {\n            revert InsufficientContractBalance();\n        }\n        if (numberOfRewardedParticipants == targetNumberOfParticipants) {\n            revert AllParticipantsRewarded();\n        }\n        markParticipantAsHavingClaimedReward(walletAddress);\n        rewardParticipant(walletAddress);\n    }\n\n    function markParticipantAsHavingClaimedReward(\n        address participantWalletAddress\n    ) private {\n        participantsWhoHaveClaimedRewards[participantWalletAddress] = true;\n        emit ParticipantMarkedAsRewarded(participantWalletAddress);\n    }\n\n    function rewardParticipant(address participantWalletAddress) private {\n        bool success = cUSD.transfer(\n            participantWalletAddress,\n            rewardAmountPerParticipantInWei\n        );\n        if (!success) {\n            revert RewardTransferFailed();\n        }\n        unchecked {\n            ++numberOfRewardedParticipants;\n        }\n        emit ParticipantRewarded(\n            participantWalletAddress,\n            rewardAmountPerParticipantInWei\n        );\n    }\n\n    function withdrawAllRewardFundsToResearcher()\n        external\n        onlyOwner\n        whenNotPaused\n        nonReentrant\n    {\n        uint256 balance = cUSD.balanceOf(address(this));\n        if (balance == 0) {\n            revert NoRewardFunds();\n        }\n        bool success = cUSD.transfer(owner(), balance);\n        if (!success) {\n            revert WithdrawalFailed();\n        }\n        emit RewardFundsWithdrawn(owner(), balance);\n    }\n\n    function updateRewardAmountPerParticipant(\n        uint256 _newRewardAmountPerParticipantInWei\n    ) external onlyOwner {\n        if (_newRewardAmountPerParticipantInWei == 0) {\n            revert InvalidRewardAmountGiven();\n        }\n        uint256 oldRewardAmountPerParticipantInWei = rewardAmountPerParticipantInWei;\n\n        uint256 newRewardAmountPerParticipantInWei = _newRewardAmountPerParticipantInWei;\n        rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei;\n\n        emit RewardAmountUpdated(\n            oldRewardAmountPerParticipantInWei,\n            newRewardAmountPerParticipantInWei\n        );\n    }\n\n    function updateTargetNumberOfParticipants(\n        uint256 _newTargetNumberOfParticipants\n    ) external onlyOwner {\n        if (_newTargetNumberOfParticipants == 0) {\n            revert InvalidNumberOfTargetParticipants();\n        }\n\n        uint256 oldTargetNumberOfParticipants = targetNumberOfParticipants;\n\n        uint256 newTargetNumberOfParticipants = _newTargetNumberOfParticipants;\n\n        targetNumberOfParticipants = newTargetNumberOfParticipants;\n\n        emit TargetNumberOfParticipantsUpdates(\n            oldTargetNumberOfParticipants,\n            newTargetNumberOfParticipants\n        );\n    }\n\n    function pauseSurvey() external onlyOwner {\n        _pause();\n    }\n\n    function unpauseSurvey() external onlyOwner {\n        _unpause();\n    }\n\n    function getWhitelistedAddressesFromRegisteredAddresses(\n        address[] calldata registeredAddresses\n    ) external view returns (address[] memory) {\n        uint256 length = registeredAddresses.length;\n        if (length == 0) {\n            revert InvalidArrayLength();\n        }\n\n        uint256 whitelistedCount = 0;\n        for (uint256 i = 0; i < length; ) {\n            if (usersWhitelistedForSurvey[registeredAddresses[i]]) {\n                whitelistedCount++;\n            }\n            unchecked {\n                ++i;\n            }\n        }\n\n        address[] memory whitelistedAddresses = new address[](whitelistedCount);\n        uint256 index = 0;\n        for (uint256 i = 0; i < length; ) {\n            if (usersWhitelistedForSurvey[registeredAddresses[i]]) {\n                whitelistedAddresses[index++] = registeredAddresses[i];\n            }\n            unchecked {\n                ++i;\n            }\n        }\n        return whitelistedAddresses;\n    }\n\n    function checkIfParticipantHasAlreadyClaimedReward(\n        address walletAddress\n    ) external view returns (bool) {\n        return participantsWhoHaveClaimedRewards[walletAddress];\n    }\n\n    function checkIfUserAddressIsWhitelisted(\n        address walletAddress\n    ) external view returns (bool) {\n        return usersWhitelistedForSurvey[walletAddress];\n    }\n\n    function checkIfUserAddressIsBlacklisted(\n        address walletAddress\n    ) external view returns (bool) {\n        return !usersWhitelistedForSurvey[walletAddress];\n    }\n\n    function getRewardAmountPerParticipantInWei()\n        external\n        view\n        returns (uint256)\n    {\n        return rewardAmountPerParticipantInWei;\n    }\n\n    function getNumberOfRewardedParticipants() external view returns (uint256) {\n        return numberOfRewardedParticipants;\n    }\n\n    function getTargetNumberOfParticipants() external view returns (uint256) {\n        return targetNumberOfParticipants;\n    }\n\n    function getNumberOfWhitelistedUserAddresses()\n        external\n        view\n        returns (uint256)\n    {\n        return numberOfWhitelistedUserAddresses;\n    }\n}\n\n// researcherWalletAddress:             0x89878e9744AF84c091063543688C488d393E8912\n// _rewardAmountPerParticipantInWei:    2000000000000000000\n// _targetNumberOfParticipants:         9\n// cUSDTokenAddress:                    0x765DE816845861e75A25fCA122bb6898B8B1282a\n// [\"0x70eEEda66D4f23a9E7bFF93b7d152286eA63f52C\",\"0x2FC0047E148888836DB5257D79A7ca8327dd9Bcc\",\"0xA3872860EE9FeAB369c1a5E911CeCc2F4c40f702\"]"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 290,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"hardhat/contracts/ClosedSurvey.sol": {
				"ClosedSurvey": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "researcherWalletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardAmountPerParticipantInWei",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_targetNumberOfParticipants",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "cUSDTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AllParticipantsRewarded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientContractBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidNumberOfTargetParticipants",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRewardAmountGiven",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoRewardFunds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "ParticipantAlreadyRewarded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RewardTransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "unauthorizedMessageSender",
									"type": "address"
								}
							],
							"name": "UnauthorizedMessageSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "UserAddressAlreadyWhitelisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "UserAddressNotWhitelisted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawalFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "MultipleUserAddressesWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "MultipleWhitelistedUserAddressesBlacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								}
							],
							"name": "OneUserAddressWhitelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								}
							],
							"name": "OneWhitelistedUserAddressBlacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								}
							],
							"name": "ParticipantMarkedAsRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participantWalletAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ParticipantRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldcUSDRewardAmountPerParticipantInWei",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newcUSDRewardAmountPerParticipantInWei",
									"type": "uint256"
								}
							],
							"name": "RewardAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "researcherWalletAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "RewardFundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldTargetNumberOfParticipants",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTargetNumberOfParticipants",
									"type": "uint256"
								}
							],
							"name": "TargetNumberOfParticipantsUpdates",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "blacklistMultipleWhitelistedUserAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "blacklistOneWhitelistedUserAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cUSD",
							"outputs": [
								{
									"internalType": "contract IERC20Metadata",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "checkIfParticipantHasAlreadyClaimedReward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "checkIfUserAddressIsBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "checkIfUserAddressIsWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfRewardedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfWhitelistedUserAddresses",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmountPerParticipantInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTargetNumberOfParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "registeredAddresses",
									"type": "address[]"
								}
							],
							"name": "getWhitelistedAddressesFromRegisteredAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numberOfRewardedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numberOfWhitelistedUserAddresses",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauseSurvey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "processRewardClaimByParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmountPerParticipantInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetNumberOfParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpauseSurvey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRewardAmountPerParticipantInWei",
									"type": "uint256"
								}
							],
							"name": "updateRewardAmountPerParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTargetNumberOfParticipants",
									"type": "uint256"
								}
							],
							"name": "updateTargetNumberOfParticipants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "walletAddresses",
									"type": "address[]"
								}
							],
							"name": "whitelistMultipleUserAddresses",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "whitelistOneUserAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllRewardFundsToResearcher",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"hardhat/contracts/ClosedSurvey.sol\":330:12312  contract ClosedSurvey is Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3321:4132  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3517:3540  researcherWalletAddress */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:912   */\n  mstore\n    /* \"#utility.yul\":834:852   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3569:3606  researcherWalletAddress == address(0) */\n  dup5\n  and\n  iszero\n  dup1\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3569:3652  researcherWalletAddress == address(0) ||... */\n  tag_17\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3622:3652  cUSDTokenAddress == address(0) */\n  dup2\n  and\n  iszero\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3569:3652  researcherWalletAddress == address(0) ||... */\ntag_17:\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3552:3708  if (... */\n  iszero\n  tag_18\n  jumpi\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3684:3697  ZeroAddress() */\n  mload(0x40)\n  shl(0xe0, 0xd92e233d)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3552:3708  if (... */\ntag_18:\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3721:3753  _rewardAmountPerParticipantInWei */\n  dup3\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3757:3758  0 */\n  0x00\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3721:3758  _rewardAmountPerParticipantInWei == 0 */\n  sub\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3717:3818  if (_rewardAmountPerParticipantInWei == 0) {... */\n  tag_19\n  jumpi\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3781:3807  InvalidRewardAmountGiven() */\n  mload(0x40)\n  shl(0xe4, 0x0d428a01)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3717:3818  if (_rewardAmountPerParticipantInWei == 0) {... */\ntag_19:\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3832:3859  _targetNumberOfParticipants */\n  dup2\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3863:3864  0 */\n  0x00\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3832:3864  _targetNumberOfParticipants == 0 */\n  sub\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3828:3933  if (_targetNumberOfParticipants == 0) {... */\n  tag_20\n  jumpi\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3887:3922  InvalidNumberOfTargetParticipants() */\n  mload(0x40)\n  shl(0xe2, 0x36c5eec7)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3828:3933  if (_targetNumberOfParticipants == 0) {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3943:3982  cUSD = IERC20Metadata(cUSDTokenAddress) */\n  and\n  0x80\n  mstore\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3993:4024  rewardAmountPerParticipantInWei */\n  0x05\n    /* \"hardhat/contracts/ClosedSurvey.sol\":3993:4059  rewardAmountPerParticipantInWei = _rewardAmountPerParticipantInWei */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"hardhat/contracts/ClosedSurvey.sol\":4069:4095  targetNumberOfParticipants */\n  0x06\n    /* \"hardhat/contracts/ClosedSurvey.sol\":4069:4125  targetNumberOfParticipants = _targetNumberOfParticipants */\n  sstore\n  pop\n    /* \"hardhat/contracts/ClosedSurvey.sol\":330:12312  contract ClosedSurvey is Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_23:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_26:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:710   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_28:\n    /* \"#utility.yul\":410:450   */\n  tag_29\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":512:514   */\n  0x20\n    /* \"#utility.yul\":497:515   */\n  dup7\n  add\n    /* \"#utility.yul\":491:516   */\n  mload\n    /* \"#utility.yul\":606:608   */\n  0x40\n    /* \"#utility.yul\":591:609   */\n  dup8\n  add\n    /* \"#utility.yul\":585:610   */\n  mload\n    /* \"#utility.yul\":400:450   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":491:516   */\n  swap4\n  pop\n    /* \"#utility.yul\":585:610   */\n  swap2\n  pop\n    /* \"#utility.yul\":655:704   */\n  tag_30\n    /* \"#utility.yul\":700:702   */\n  0x60\n    /* \"#utility.yul\":685:703   */\n  dup7\n  add\n    /* \"#utility.yul\":655:704   */\n  tag_23\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":645:704   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:710   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":715:918   */\ntag_24:\n    /* \"hardhat/contracts/ClosedSurvey.sol\":330:12312  contract ClosedSurvey is Ownable, ReentrancyGuard, Pausable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"hardhat/contracts/ClosedSurvey.sol\":330:12312  contract ClosedSurvey is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc25a02ec\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe082fe2a\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe082fe2a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf22069df\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfc05542a\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xc25a02ec\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd335993a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd9084326\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xa0858343\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xa0858343\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa34db0a0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa6a09811\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb0702913\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x98b48493\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x9a0474e8\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x6fa1c59d\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x741ae614\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7a0abf08\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x85737020\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x6fa1c59d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6ff65c20\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7069243c\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x1318fbf1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1fccf672\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3960fc66\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x528780cc\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x64bb632f\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":675:718  uint256 public numberOfRewardedParticipants */\n    tag_3:\n      tag_36\n      sload(0x07)\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":675:718  uint256 public numberOfRewardedParticipants */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"hardhat/contracts/ClosedSurvey.sol\":396:432  IERC20Metadata public immutable cUSD */\n    tag_4:\n      tag_40\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":364:415   */\n      dup2\n      mstore\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":396:432  IERC20Metadata public immutable cUSD */\n      tag_38\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10111:10182  function unpauseSurvey() external onlyOwner {... */\n    tag_5:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9421:10032  function updateTargetNumberOfParticipants(... */\n    tag_6:\n      tag_44\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":776:790   */\n      swap1\n      iszero\n        /* \"#utility.yul\":769:791   */\n      iszero\n        /* \"#utility.yul\":751:792   */\n      dup2\n      mstore\n        /* \"#utility.yul\":739:741   */\n      0x20\n        /* \"#utility.yul\":724:742   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      tag_38\n        /* \"#utility.yul\":611:798   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8779:9415  function updateRewardAmountPerParticipant(... */\n    tag_8:\n      tag_44\n      tag_55\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":12018:12141  function getTargetNumberOfParticipants() external view returns (uint256) {... */\n    tag_9:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":12108:12134  targetNumberOfParticipants */\n      sload(0x06)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":12018:12141  function getTargetNumberOfParticipants() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11168:11357  function checkIfParticipantHasAlreadyClaimedReward(... */\n    tag_10:\n      tag_50\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11302:11350  participantsWhoHaveClaimedRewards[walletAddress] */\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11279:11283  bool */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11302:11350  participantsWhoHaveClaimedRewards[walletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11302:11335  participantsWhoHaveClaimedRewards */\n      0x04\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11302:11350  participantsWhoHaveClaimedRewards[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11168:11357  function checkIfParticipantHasAlreadyClaimedReward(... */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11718:11879  function getRewardAmountPerParticipantInWei()... */\n    tag_11:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11841:11872  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11718:11879  function getRewardAmountPerParticipantInWei()... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_44\n      tag_69\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11885:12012  function getNumberOfRewardedParticipants() external view returns (uint256) {... */\n    tag_13:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11977:12005  numberOfRewardedParticipants */\n      sload(0x07)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11885:12012  function getNumberOfRewardedParticipants() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":576:622  uint256 public rewardAmountPerParticipantInWei */\n    tag_14:\n      tag_36\n      sload(0x05)\n      dup2\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11540:11712  function checkIfUserAddressIsBlacklisted(... */\n    tag_15:\n      tag_50\n      tag_77\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11665:11705  usersWhitelistedForSurvey[walletAddress] */\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11641:11645  bool */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11665:11705  usersWhitelistedForSurvey[walletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11665:11690  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11665:11705  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11664:11705  !usersWhitelistedForSurvey[walletAddress] */\n      iszero\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11540:11712  function checkIfUserAddressIsBlacklisted(... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_40)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4985:5934  function whitelistMultipleUserAddresses(... */\n    tag_17:\n      tag_44\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5940:6908  function blacklistMultipleWhitelistedUserAddresses(... */\n    tag_18:\n      tag_44\n      tag_89\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6914:7569  function processRewardClaimByParticipant(... */\n    tag_19:\n      tag_44\n      tag_92\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10188:11162  function getWhitelistedAddressesFromRegisteredAddresses(... */\n    tag_20:\n      tag_94\n      tag_95\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":628:669  uint256 public targetNumberOfParticipants */\n    tag_21:\n      tag_36\n      sload(0x06)\n      dup2\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4138:4544  function whitelistOneUserAddress(... */\n    tag_22:\n      tag_44\n      tag_103\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":724:771  uint256 public numberOfWhitelistedUserAddresses */\n    tag_23:\n      tag_36\n      sload(0x08)\n      dup2\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4550:4979  function blacklistOneWhitelistedUserAddress(... */\n    tag_24:\n      tag_44\n      tag_109\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":12147:12310  function getNumberOfWhitelistedUserAddresses()... */\n    tag_25:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":12271:12303  numberOfWhitelistedUserAddresses */\n      sload(0x08)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":12147:12310  function getNumberOfWhitelistedUserAddresses()... */\n      jump(tag_36)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10038:10105  function pauseSurvey() external onlyOwner {... */\n    tag_26:\n      tag_44\n      tag_115\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8325:8773  function withdrawAllRewardFundsToResearcher()... */\n    tag_27:\n      tag_44\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_44\n      tag_119\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11363:11534  function checkIfUserAddressIsWhitelisted(... */\n    tag_29:\n      tag_50\n      tag_122\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11487:11527  usersWhitelistedForSurvey[walletAddress] */\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11464:11468  bool */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11487:11527  usersWhitelistedForSurvey[walletAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11487:11512  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11487:11527  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11363:11534  function checkIfUserAddressIsWhitelisted(... */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10111:10182  function unpauseSurvey() external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10165:10175  _unpause() */\n      tag_129\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10165:10173  _unpause */\n      tag_130\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10165:10175  _unpause() */\n      jump\t// in\n    tag_129:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10111:10182  function unpauseSurvey() external onlyOwner {... */\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9421:10032  function updateTargetNumberOfParticipants(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9550:9580  _newTargetNumberOfParticipants */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9584:9585  0 */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9550:9585  _newTargetNumberOfParticipants == 0 */\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9546:9654  if (_newTargetNumberOfParticipants == 0) {... */\n      tag_134\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9608:9643  InvalidNumberOfTargetParticipants() */\n      mload(0x40)\n      shl(0xe2, 0x36c5eec7)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9546:9654  if (_newTargetNumberOfParticipants == 0) {... */\n    tag_134:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9704:9730  targetNumberOfParticipants */\n      0x06\n      dup1\n      sload\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9822:9880  targetNumberOfParticipants = newTargetNumberOfParticipants */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9896:10025  TargetNumberOfParticipantsUpdates(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2811:2836   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2867:2869   */\n      0x20\n        /* \"#utility.yul\":2852:2870   */\n      dup2\n      add\n        /* \"#utility.yul\":2845:2879   */\n      dup5\n      swap1\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9822:9880  targetNumberOfParticipants = newTargetNumberOfParticipants */\n      dup4\n      swap2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9896:10025  TargetNumberOfParticipantsUpdates(... */\n      0x2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef\n      swap2\n        /* \"#utility.yul\":2784:2802   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9896:10025  TargetNumberOfParticipantsUpdates(... */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9536:10032  {... */\n      pop\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9421:10032  function updateTargetNumberOfParticipants(... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8779:9415  function updateRewardAmountPerParticipant(... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8913:8948  _newRewardAmountPerParticipantInWei */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8952:8953  0 */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8913:8953  _newRewardAmountPerParticipantInWei == 0 */\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8909:9013  if (_newRewardAmountPerParticipantInWei == 0) {... */\n      tag_141\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8976:9002  InvalidRewardAmountGiven() */\n      mload(0x40)\n      shl(0xe4, 0x0d428a01)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8909:9013  if (_newRewardAmountPerParticipantInWei == 0) {... */\n    tag_141:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9067:9098  rewardAmountPerParticipantInWei */\n      0x05\n      dup1\n      sload\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9199:9267  rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9283:9408  RewardAmountUpdated(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2811:2836   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":2867:2869   */\n      0x20\n        /* \"#utility.yul\":2852:2870   */\n      dup2\n      add\n        /* \"#utility.yul\":2845:2879   */\n      dup5\n      swap1\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9199:9267  rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei */\n      dup4\n      swap2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9283:9408  RewardAmountUpdated(... */\n      0xf0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c94\n      swap2\n        /* \"#utility.yul\":2784:2802   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":9283:9408  RewardAmountUpdated(... */\n      tag_135\n        /* \"#utility.yul\":2637:2885   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4985:5934  function whitelistMultipleUserAddresses(... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5121:5136  walletAddresses */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5104:5118  uint256 length */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5157:5168  length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5153:5222  if (length == 0) {... */\n      tag_157\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5191:5211  InvalidArrayLength() */\n      mload(0x40)\n      shl(0xe1, 0x4ec48105)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5153:5222  if (length == 0) {... */\n    tag_157:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5237:5246  uint256 i */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5232:5593  for (uint256 i = 0; i < length; ) {... */\n    tag_158:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5256:5262  length */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5252:5253  i */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5252:5262  i < length */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5232:5593  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5314:5315  0 */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5284:5299  walletAddresses */\n      dup5\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5300:5301  i */\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5284:5302  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5284:5316  walletAddresses[i] == address(0) */\n      and\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5280:5371  if (walletAddresses[i] == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5343:5356  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5280:5371  if (walletAddresses[i] == address(0)) {... */\n    tag_165:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5388:5413  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5388:5433  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5414:5429  walletAddresses */\n      dup6\n      dup6\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5430:5431  i */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5414:5432  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_167\n      jumpi\n      tag_167\n      tag_163\n      jump\t// in\n    tag_167:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5388:5433  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5384:5524  if (usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5490:5505  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5506:5507  i */\n      dup3\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5490:5508  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_171\n      tag_163\n      jump\t// in\n    tag_171:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_172:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5460:5509  UserAddressAlreadyWhitelisted(walletAddresses[i]) */\n      mload(0x40)\n      shl(0xe1, 0x3746725b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5460:5509  UserAddressAlreadyWhitelisted(walletAddresses[i]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5460:5509  UserAddressAlreadyWhitelisted(walletAddresses[i]) */\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5384:5524  if (usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n    tag_169:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5565:5568  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5232:5593  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_158)\n    tag_159:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5608:5617  uint256 i */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5603:5863  for (uint256 i = 0; i < length; ) {... */\n    tag_174:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5627:5633  length */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5623:5624  i */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5623:5633  i < length */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5603:5863  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5699:5703  true */\n      0x01\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5651:5676  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5651:5696  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5677:5692  walletAddresses */\n      dup7\n      dup7\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5693:5694  i */\n      dup6\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5677:5695  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_163\n      jump\t// in\n    tag_178:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5651:5696  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5651:5703  usersWhitelistedForSurvey[walletAddresses[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5747:5779  numberOfWhitelistedUserAddresses */\n      0x08\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5745:5779  ++numberOfWhitelistedUserAddresses */\n      dup1\n      sload\n      0x01\n      swap1\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5835:5838  ++i */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5603:5863  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_174)\n    tag_175:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5878:5927  MultipleUserAddressesWhitelisted(walletAddresses) */\n      0x9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5911:5926  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5878:5927  MultipleUserAddressesWhitelisted(walletAddresses) */\n      mload(0x40)\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":5940:6908  function blacklistMultipleWhitelistedUserAddresses(... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6087:6102  walletAddresses */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6070:6084  uint256 length */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6123:6134  length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6119:6188  if (length == 0) {... */\n      tag_185\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6157:6177  InvalidArrayLength() */\n      mload(0x40)\n      shl(0xe1, 0x4ec48105)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6119:6188  if (length == 0) {... */\n    tag_185:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6203:6212  uint256 i */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6198:6556  for (uint256 i = 0; i < length; ) {... */\n    tag_186:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6222:6228  length */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6218:6219  i */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6218:6228  i < length */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6198:6556  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6280:6281  0 */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6250:6265  walletAddresses */\n      dup5\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6266:6267  i */\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6250:6268  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_190\n      jumpi\n      tag_190\n      tag_163\n      jump\t// in\n    tag_190:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6250:6282  walletAddresses[i] == address(0) */\n      and\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6246:6337  if (walletAddresses[i] == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6309:6322  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6246:6337  if (walletAddresses[i] == address(0)) {... */\n    tag_192:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6355:6380  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6355:6400  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6381:6396  walletAddresses */\n      dup6\n      dup6\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6397:6398  i */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6381:6399  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_194\n      tag_163\n      jump\t// in\n    tag_194:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6355:6400  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6350:6487  if (!usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n      tag_196\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6453:6468  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6469:6470  i */\n      dup3\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6453:6471  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_198\n      jumpi\n      tag_198\n      tag_163\n      jump\t// in\n    tag_198:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_199:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6427:6472  UserAddressNotWhitelisted(walletAddresses[i]) */\n      mload(0x40)\n      shl(0xe0, 0xde55cc33)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6427:6472  UserAddressNotWhitelisted(walletAddresses[i]) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6427:6472  UserAddressNotWhitelisted(walletAddresses[i]) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6350:6487  if (!usersWhitelistedForSurvey[walletAddresses[i]]) {... */\n    tag_196:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6528:6531  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6198:6556  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_186)\n    tag_187:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6571:6580  uint256 i */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6566:6827  for (uint256 i = 0; i < length; ) {... */\n    tag_201:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6590:6596  length */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6586:6587  i */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6586:6596  i < length */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6566:6827  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6662:6667  false */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6614:6639  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6614:6659  usersWhitelistedForSurvey[walletAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6640:6655  walletAddresses */\n      dup7\n      dup7\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6656:6657  i */\n      dup6\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6640:6658  walletAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_205\n      tag_163\n      jump\t// in\n    tag_205:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6614:6659  usersWhitelistedForSurvey[walletAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6614:6667  usersWhitelistedForSurvey[walletAddresses[i]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6711:6743  numberOfWhitelistedUserAddresses */\n      0x08\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6709:6743  --numberOfWhitelistedUserAddresses */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n      0x01\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6799:6802  ++i */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6566:6827  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_201)\n    tag_202:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6841:6901  MultipleWhitelistedUserAddressesBlacklisted(walletAddresses) */\n      0xd68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6885:6900  walletAddresses */\n      dup4\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6841:6901  MultipleWhitelistedUserAddressesBlacklisted(walletAddresses) */\n      mload(0x40)\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6914:7569  function processRewardClaimByParticipant(... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_212:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7076:7089  walletAddress */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3193:3203  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3193:3220  msg.sender != messageSender */\n      dup3\n      and\n      eq\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3189:3294  if (msg.sender != messageSender) {... */\n      tag_215\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3243:3283  UnauthorizedMessageSender(messageSender) */\n      mload(0x40)\n      shl(0xe0, 0x44b50405)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3243:3283  UnauthorizedMessageSender(messageSender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3243:3283  UnauthorizedMessageSender(messageSender) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3189:3294  if (msg.sender != messageSender) {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2338:2378  usersWhitelistedForSurvey[walletAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2338:2363  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2338:2378  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7122:7135  walletAddress */\n      dup3\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2338:2378  usersWhitelistedForSurvey[walletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2333:2452  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n      tag_218\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2401:2441  UserAddressNotWhitelisted(walletAddress) */\n      mload(0x40)\n      shl(0xe0, 0xde55cc33)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2401:2441  UserAddressNotWhitelisted(walletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2401:2441  UserAddressNotWhitelisted(walletAddress) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2333:2452  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n    tag_218:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2963:3022  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2963:2996  participantsWhoHaveClaimedRewards */\n      0x04\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2963:3022  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7171:7184  walletAddress */\n      dup4\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2963:3022  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2959:3108  if (participantsWhoHaveClaimedRewards[participantWalletAddress]) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3045:3097  ParticipantAlreadyRewarded(participantWalletAddress) */\n      mload(0x40)\n      shl(0xe3, 0x01ee5f6f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3045:3097  ParticipantAlreadyRewarded(participantWalletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3045:3097  ParticipantAlreadyRewarded(participantWalletAddress) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2959:3108  if (participantsWhoHaveClaimedRewards[participantWalletAddress]) {... */\n    tag_221:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7236:7267  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7204:7233  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7227:7231  this */\n      address\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7204:7233  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7204:7208  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7204:7218  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7204:7233  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7204:7267  cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7200:7330  if (cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7290:7319  InsufficientContractBalance() */\n      mload(0x40)\n      shl(0xe0, 0x786e0a99)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7200:7330  if (cUSD.balanceOf(address(this)) < rewardAmountPerParticipantInWei) {... */\n    tag_229:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7375:7401  targetNumberOfParticipants */\n      sload(0x06)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7343:7371  numberOfRewardedParticipants */\n      sload(0x07)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7343:7401  numberOfRewardedParticipants == targetNumberOfParticipants */\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7339:7460  if (numberOfRewardedParticipants == targetNumberOfParticipants) {... */\n      tag_230\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7424:7449  AllParticipantsRewarded() */\n      mload(0x40)\n      shl(0xea, 0x27007f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7339:7460  if (numberOfRewardedParticipants == targetNumberOfParticipants) {... */\n    tag_230:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7469:7520  markParticipantAsHavingClaimedReward(walletAddress) */\n      tag_231\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7506:7519  walletAddress */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7469:7505  markParticipantAsHavingClaimedReward */\n      tag_232\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7469:7520  markParticipantAsHavingClaimedReward(walletAddress) */\n      jump\t// in\n    tag_231:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7530:7562  rewardParticipant(walletAddress) */\n      tag_233\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7548:7561  walletAddress */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7530:7547  rewardParticipant */\n      tag_234\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7530:7562  rewardParticipant(walletAddress) */\n      jump\t// in\n    tag_233:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2461:2462  _ */\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":3303:3304  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_235:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":6914:7569  function processRewardClaimByParticipant(... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10188:11162  function getWhitelistedAddressesFromRegisteredAddresses(... */\n    tag_96:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10321:10337  address[] memory */\n      0x60\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10366:10385  registeredAddresses */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10349:10363  uint256 length */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10406:10417  length == 0 */\n      dup2\n      swap1\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10402:10471  if (length == 0) {... */\n      tag_238\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10440:10460  InvalidArrayLength() */\n      mload(0x40)\n      shl(0xe1, 0x4ec48105)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10402:10471  if (length == 0) {... */\n    tag_238:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10481:10505  uint256 whitelistedCount */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10524:10533  uint256 i */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10519:10742  for (uint256 i = 0; i < length; ) {... */\n    tag_239:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10543:10549  length */\n      dup3\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10539:10540  i */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10539:10549  i < length */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10519:10742  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10571:10596  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10571:10620  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10597:10616  registeredAddresses */\n      dup8\n      dup8\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10617:10618  i */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10597:10619  registeredAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_243\n      tag_163\n      jump\t// in\n    tag_243:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10571:10620  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10567:10673  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10640:10658  whitelistedCount++ */\n      dup2\n      tag_246\n      dup2\n      tag_247\n      jump\t// in\n    tag_246:\n      swap3\n      pop\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10567:10673  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n    tag_245:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10714:10717  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10519:10742  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_239)\n    tag_240:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10752:10789  address[] memory whitelistedAddresses */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10806:10822  whitelistedCount */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10792:10823  new address[](whitelistedCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_249\n      jumpi\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_251\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_251:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10752:10823  address[] memory whitelistedAddresses = new address[](whitelistedCount) */\n      swap1\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10833:10846  uint256 index */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10865:10874  uint256 i */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10860:11119  for (uint256 i = 0; i < length; ) {... */\n    tag_252:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10884:10890  length */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10880:10881  i */\n      dup2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10880:10890  i < length */\n      lt\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10860:11119  for (uint256 i = 0; i < length; ) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10912:10937  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10912:10961  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10938:10957  registeredAddresses */\n      dup10\n      dup10\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10958:10959  i */\n      dup5\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10938:10960  registeredAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_256\n      jumpi\n      tag_256\n      tag_163\n      jump\t// in\n    tag_256:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10912:10961  usersWhitelistedForSurvey[registeredAddresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10908:11050  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11013:11032  registeredAddresses */\n      dup8\n      dup8\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11033:11034  i */\n      dup3\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11013:11035  registeredAddresses[i] */\n      dup2\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_260\n      tag_163\n      jump\t// in\n    tag_260:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_261:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10981:11001  whitelistedAddresses */\n      dup4\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11002:11009  index++ */\n      dup4\n      tag_262\n      dup2\n      tag_247\n      jump\t// in\n    tag_262:\n      swap5\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10981:11010  whitelistedAddresses[index++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_264\n      tag_163\n      jump\t// in\n    tag_264:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10981:11035  whitelistedAddresses[index++] = registeredAddresses[i] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10908:11050  if (usersWhitelistedForSurvey[registeredAddresses[i]]) {... */\n    tag_258:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11091:11094  ++i */\n      0x01\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10860:11119  for (uint256 i = 0; i < length; ) {... */\n      jump(tag_252)\n    tag_253:\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":11135:11155  whitelistedAddresses */\n      swap1\n      swap7\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10188:11162  function getWhitelistedAddressesFromRegisteredAddresses(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4138:4544  function whitelistOneUserAddress(... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2740:2780  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2740:2765  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2740:2780  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4245:4258  walletAddress */\n      dup2\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2740:2780  usersWhitelistedForSurvey[walletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2736:2858  if (usersWhitelistedForSurvey[walletAddress]) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2803:2847  UserAddressAlreadyWhitelisted(walletAddress) */\n      mload(0x40)\n      shl(0xe1, 0x3746725b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2803:2847  UserAddressAlreadyWhitelisted(walletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2803:2847  UserAddressAlreadyWhitelisted(walletAddress) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2736:2858  if (usersWhitelistedForSurvey[walletAddress]) {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4274:4301  walletAddress == address(0) */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4270:4348  if (walletAddress == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4324:4337  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4270:4348  if (walletAddress == address(0)) {... */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4357:4397  usersWhitelistedForSurvey[walletAddress] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4357:4382  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4357:4397  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4357:4404  usersWhitelistedForSurvey[walletAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4400:4404  true */\n      0x01\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4357:4404  usersWhitelistedForSurvey[walletAddress] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4440:4472  numberOfWhitelistedUserAddresses */\n      0x08\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4438:4472  ++numberOfWhitelistedUserAddresses */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4497:4537  OneUserAddressWhitelisted(walletAddress) */\n      swap1\n      mload\n        /* \"#utility.yul\":364:415   */\n      swap2\n      dup3\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4497:4537  OneUserAddressWhitelisted(walletAddress) */\n      0x1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d27\n      swap2\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4497:4537  OneUserAddressWhitelisted(walletAddress) */\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4138:4544  function whitelistOneUserAddress(... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4550:4979  function blacklistOneWhitelistedUserAddress(... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2539:2579  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2539:2564  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2539:2579  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4668:4681  walletAddress */\n      dup2\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2539:2579  usersWhitelistedForSurvey[walletAddress] */\n      0xff\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2534:2653  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n      tag_276\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2602:2642  UserAddressNotWhitelisted(walletAddress) */\n      mload(0x40)\n      shl(0xe0, 0xde55cc33)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2602:2642  UserAddressNotWhitelisted(walletAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2602:2642  UserAddressNotWhitelisted(walletAddress) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":2534:2653  if (!usersWhitelistedForSurvey[walletAddress]) {... */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4697:4724  walletAddress == address(0) */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4693:4771  if (walletAddress == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4747:4760  ZeroAddress() */\n      mload(0x40)\n      shl(0xe0, 0xd92e233d)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4693:4771  if (walletAddress == address(0)) {... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4780:4820  usersWhitelistedForSurvey[walletAddress] */\n      dup3\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4823:4828  false */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4780:4820  usersWhitelistedForSurvey[walletAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4780:4805  usersWhitelistedForSurvey */\n      0x03\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4780:4820  usersWhitelistedForSurvey[walletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4780:4828  usersWhitelistedForSurvey[walletAddress] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4864:4896  numberOfWhitelistedUserAddresses */\n      0x08\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4862:4896  --numberOfWhitelistedUserAddresses */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4921:4972  OneWhitelistedUserAddressBlacklisted(walletAddress) */\n      swap1\n      mload\n        /* \"#utility.yul\":364:415   */\n      swap2\n      dup3\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4921:4972  OneWhitelistedUserAddressBlacklisted(walletAddress) */\n      0xa354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e2\n      swap2\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":4921:4972  OneWhitelistedUserAddressBlacklisted(walletAddress) */\n      tag_272\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10038:10105  function pauseSurvey() external onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10090:10098  _pause() */\n      tag_129\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10090:10096  _pause */\n      tag_286\n        /* \"hardhat/contracts/ClosedSurvey.sol\":10090:10098  _pause() */\n      jump\t// in\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8325:8773  function withdrawAllRewardFundsToResearcher()... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_292:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8481:8510  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8504:8508  this */\n      address\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8481:8510  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8463:8478  uint256 balance */\n      0x00\n      swap1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8481:8485  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8481:8495  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8481:8510  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_297:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8463:8510  uint256 balance = cUSD.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8524:8531  balance */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8535:8536  0 */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8524:8536  balance == 0 */\n      sub\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8520:8585  if (balance == 0) {... */\n      tag_298\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8559:8574  NoRewardFunds() */\n      mload(0x40)\n      shl(0xe2, 0x16e3ff05)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8520:8585  if (balance == 0) {... */\n    tag_298:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8594:8606  bool success */\n      0x00\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8609:8613  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8609:8622  cUSD.transfer */\n      and\n      0xa9059cbb\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8623:8630  owner() */\n      tag_299\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8623:8630  owner() */\n    tag_299:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8609:8640  cUSD.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      swap1\n      swap2\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8609:8640  cUSD.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4374:4425   */\n      mstore\n        /* \"#utility.yul\":4441:4459   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4434:4468   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":4347:4365   */\n      0x44\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8609:8640  cUSD.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8594:8640  bool success = cUSD.transfer(owner(), balance) */\n      swap1\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8655:8662  success */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8650:8714  if (!success) {... */\n      tag_306\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8685:8703  WithdrawalFailed() */\n      mload(0x40)\n      shl(0xe0, 0x27fcd9d1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8650:8714  if (!success) {... */\n    tag_306:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8728:8766  RewardFundsWithdrawn(owner(), balance) */\n      0x2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8749:8756  owner() */\n      tag_307\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8749:8756  owner() */\n    tag_307:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8728:8766  RewardFundsWithdrawn(owner(), balance) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4374:4425   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4456:4458   */\n      0x20\n        /* \"#utility.yul\":4441:4459   */\n      dup3\n      add\n        /* \"#utility.yul\":4434:4468   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8728:8766  RewardFundsWithdrawn(owner(), balance) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8453:8773  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_129\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":364:415   */\n      mstore\n        /* \"#utility.yul\":337:355   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_173\n        /* \"#utility.yul\":196:421   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_326\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":382:414   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":364:415   */\n      dup2\n      mstore\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7575:7828  function markParticipantAsHavingClaimedReward(... */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7687:7746  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7687:7720  participantsWhoHaveClaimedRewards */\n      0x04\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7687:7746  participantsWhoHaveClaimedRewards[participantWalletAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7687:7753  participantsWhoHaveClaimedRewards[participantWalletAddress] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7749:7753  true */\n      0x01\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7687:7753  participantsWhoHaveClaimedRewards[participantWalletAddress] = true */\n      or\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7768:7821  ParticipantMarkedAsRewarded(participantWalletAddress) */\n      swap1\n      mload\n        /* \"#utility.yul\":364:415   */\n      swap2\n      dup3\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7768:7821  ParticipantMarkedAsRewarded(participantWalletAddress) */\n      0x654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943\n      swap2\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7768:7821  ParticipantMarkedAsRewarded(participantWalletAddress) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7575:7828  function markParticipantAsHavingClaimedReward(... */\n      pop\n      jump\t// out\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7834:8319  function rewardParticipant(address participantWalletAddress) private {... */\n    tag_234:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7993:8024  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7928:8034  cUSD.transfer(... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      dup4\n      dup2\n      and\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7928:8034  cUSD.transfer(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4374:4425   */\n      mstore\n        /* \"#utility.yul\":4441:4459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4434:4468   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7913:7925  bool success */\n      0x00\n      swap2\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7928:7932  cUSD */\n      immutable(\"0x4ce4dab4689da140a0c12de1a6af6b8f679594aeb723205f513e052d27f5b26f\")\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7928:7941  cUSD.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4347:4365   */\n      0x44\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7928:8034  cUSD.transfer(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_342\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_342:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":7913:8034  bool success = cUSD.transfer(... */\n      swap1\n      pop\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8049:8056  success */\n      dup1\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8044:8112  if (!success) {... */\n      tag_343\n      jumpi\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8079:8101  RewardTransferFailed() */\n      mload(0x40)\n      shl(0xe4, 0x078ecf41)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8044:8112  if (!success) {... */\n    tag_343:\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8147:8175  numberOfRewardedParticipants */\n      0x07\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8145:8175  ++numberOfRewardedParticipants */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8271:8302  rewardAmountPerParticipantInWei */\n      sload(0x05)\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8200:8312  ParticipantRewarded(... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4392:4424   */\n      dup6\n      and\n        /* \"#utility.yul\":4374:4425   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4456:4458   */\n      0x20\n        /* \"#utility.yul\":4441:4459   */\n      dup2\n      add\n        /* \"#utility.yul\":4434:4468   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8200:8312  ParticipantRewarded(... */\n      0x8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e\n      swap2\n        /* \"#utility.yul\":4347:4365   */\n      add\n        /* \"hardhat/contracts/ClosedSurvey.sol\":8200:8312  ParticipantRewarded(... */\n      tag_272\n        /* \"#utility.yul\":4200:4474   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":426:606   */\n    tag_48:\n        /* \"#utility.yul\":485:491   */\n      0x00\n        /* \"#utility.yul\":538:540   */\n      0x20\n        /* \"#utility.yul\":526:535   */\n      dup3\n        /* \"#utility.yul\":517:524   */\n      dup5\n        /* \"#utility.yul\":513:536   */\n      sub\n        /* \"#utility.yul\":509:541   */\n      slt\n        /* \"#utility.yul\":506:558   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":554:555   */\n      0x00\n        /* \"#utility.yul\":551:552   */\n      dup1\n        /* \"#utility.yul\":544:556   */\n      revert\n        /* \"#utility.yul\":506:558   */\n    tag_360:\n      pop\n        /* \"#utility.yul\":577:600   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":426:606   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:976   */\n    tag_355:\n        /* \"#utility.yul\":871:891   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":920:951   */\n      dup2\n      and\n        /* \"#utility.yul\":910:952   */\n      dup2\n      eq\n        /* \"#utility.yul\":900:970   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":966:967   */\n      0x00\n        /* \"#utility.yul\":963:964   */\n      dup1\n        /* \"#utility.yul\":956:968   */\n      revert\n        /* \"#utility.yul\":900:970   */\n    tag_363:\n        /* \"#utility.yul\":803:976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":981:1167   */\n    tag_62:\n        /* \"#utility.yul\":1040:1046   */\n      0x00\n        /* \"#utility.yul\":1093:1095   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup3\n        /* \"#utility.yul\":1072:1079   */\n      dup5\n        /* \"#utility.yul\":1068:1091   */\n      sub\n        /* \"#utility.yul\":1064:1096   */\n      slt\n        /* \"#utility.yul\":1061:1113   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1106:1107   */\n      dup1\n        /* \"#utility.yul\":1099:1111   */\n      revert\n        /* \"#utility.yul\":1061:1113   */\n    tag_365:\n        /* \"#utility.yul\":1132:1161   */\n      tag_366\n        /* \"#utility.yul\":1151:1160   */\n      dup3\n        /* \"#utility.yul\":1132:1161   */\n      tag_355\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1122:1161   */\n      swap4\n        /* \"#utility.yul\":981:1167   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1380:1990   */\n    tag_86:\n        /* \"#utility.yul\":1466:1472   */\n      0x00\n        /* \"#utility.yul\":1474:1480   */\n      dup1\n        /* \"#utility.yul\":1527:1529   */\n      0x20\n        /* \"#utility.yul\":1515:1524   */\n      dup4\n        /* \"#utility.yul\":1506:1513   */\n      dup6\n        /* \"#utility.yul\":1502:1525   */\n      sub\n        /* \"#utility.yul\":1498:1530   */\n      slt\n        /* \"#utility.yul\":1495:1547   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1540:1541   */\n      dup1\n        /* \"#utility.yul\":1533:1545   */\n      revert\n        /* \"#utility.yul\":1495:1547   */\n    tag_369:\n        /* \"#utility.yul\":1583:1592   */\n      dup3\n        /* \"#utility.yul\":1570:1593   */\n      calldataload\n        /* \"#utility.yul\":1616:1634   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1608:1614   */\n      dup2\n        /* \"#utility.yul\":1605:1635   */\n      gt\n        /* \"#utility.yul\":1602:1652   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":1648:1649   */\n      0x00\n        /* \"#utility.yul\":1645:1646   */\n      dup1\n        /* \"#utility.yul\":1638:1650   */\n      revert\n        /* \"#utility.yul\":1602:1652   */\n    tag_370:\n        /* \"#utility.yul\":1671:1693   */\n      dup4\n      add\n        /* \"#utility.yul\":1724:1728   */\n      0x1f\n        /* \"#utility.yul\":1716:1729   */\n      dup2\n      add\n        /* \"#utility.yul\":1712:1739   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1702:1757   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":1753:1754   */\n      0x00\n        /* \"#utility.yul\":1750:1751   */\n      dup1\n        /* \"#utility.yul\":1743:1755   */\n      revert\n        /* \"#utility.yul\":1702:1757   */\n    tag_371:\n        /* \"#utility.yul\":1793:1795   */\n      dup1\n        /* \"#utility.yul\":1780:1796   */\n      calldataload\n        /* \"#utility.yul\":1819:1837   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1811:1817   */\n      dup2\n        /* \"#utility.yul\":1808:1838   */\n      gt\n        /* \"#utility.yul\":1805:1855   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1851:1852   */\n      0x00\n        /* \"#utility.yul\":1848:1849   */\n      dup1\n        /* \"#utility.yul\":1841:1853   */\n      revert\n        /* \"#utility.yul\":1805:1855   */\n    tag_372:\n        /* \"#utility.yul\":1904:1911   */\n      dup6\n        /* \"#utility.yul\":1899:1901   */\n      0x20\n        /* \"#utility.yul\":1889:1895   */\n      dup3\n        /* \"#utility.yul\":1886:1887   */\n      0x05\n        /* \"#utility.yul\":1882:1896   */\n      shl\n        /* \"#utility.yul\":1878:1880   */\n      dup5\n        /* \"#utility.yul\":1874:1897   */\n      add\n        /* \"#utility.yul\":1870:1902   */\n      add\n        /* \"#utility.yul\":1867:1912   */\n      gt\n        /* \"#utility.yul\":1864:1929   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1925:1926   */\n      0x00\n        /* \"#utility.yul\":1922:1923   */\n      dup1\n        /* \"#utility.yul\":1915:1927   */\n      revert\n        /* \"#utility.yul\":1864:1929   */\n    tag_373:\n        /* \"#utility.yul\":1956:1958   */\n      0x20\n        /* \"#utility.yul\":1948:1959   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":1978:1984   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":1380:1990   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1995:2632   */\n    tag_98:\n        /* \"#utility.yul\":2185:2187   */\n      0x20\n        /* \"#utility.yul\":2197:2218   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2267:2280   */\n      dup3\n      mload\n        /* \"#utility.yul\":2170:2188   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2289:2311   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2137:2141   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2368:2383   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2342:2344   */\n      0x40\n        /* \"#utility.yul\":2327:2345   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":2137:2141   */\n      dup4\n        /* \"#utility.yul\":2411:2606   */\n    tag_375:\n        /* \"#utility.yul\":2425:2431   */\n      dup2\n        /* \"#utility.yul\":2422:2423   */\n      dup2\n        /* \"#utility.yul\":2419:2432   */\n      lt\n        /* \"#utility.yul\":2411:2606   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":2490:2503   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2486:2525   */\n      and\n        /* \"#utility.yul\":2474:2526   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2581:2596   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2546:2558   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2522:2523   */\n      0x01\n        /* \"#utility.yul\":2440:2449   */\n      add\n        /* \"#utility.yul\":2411:2606   */\n      jump(tag_375)\n    tag_377:\n      pop\n        /* \"#utility.yul\":2623:2626   */\n      swap1\n      swap6\n        /* \"#utility.yul\":1995:2632   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2890:3017   */\n    tag_163:\n        /* \"#utility.yul\":2951:2961   */\n      0x4e487b71\n        /* \"#utility.yul\":2946:2949   */\n      0xe0\n        /* \"#utility.yul\":2942:2962   */\n      shl\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2963   */\n      mstore\n        /* \"#utility.yul\":2982:2986   */\n      0x32\n        /* \"#utility.yul\":2979:2980   */\n      0x04\n        /* \"#utility.yul\":2972:2987   */\n      mstore\n        /* \"#utility.yul\":3006:3010   */\n      0x24\n        /* \"#utility.yul\":3003:3004   */\n      0x00\n        /* \"#utility.yul\":2996:3011   */\n      revert\n        /* \"#utility.yul\":3022:3637   */\n    tag_181:\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"#utility.yul\":3234:3255   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3207:3225   */\n      dup2\n      add\n        /* \"#utility.yul\":3290:3312   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3174:3178   */\n      0x00\n        /* \"#utility.yul\":3369:3375   */\n      dup4\n        /* \"#utility.yul\":3343:3345   */\n      0x40\n        /* \"#utility.yul\":3328:3346   */\n      dup4\n      add\n        /* \"#utility.yul\":3174:3178   */\n      dup3\n        /* \"#utility.yul\":3403:3611   */\n    tag_381:\n        /* \"#utility.yul\":3417:3423   */\n      dup6\n        /* \"#utility.yul\":3414:3415   */\n      dup2\n        /* \"#utility.yul\":3411:3424   */\n      lt\n        /* \"#utility.yul\":3403:3611   */\n      iszero\n      tag_383\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3482:3508   */\n      tag_384\n        /* \"#utility.yul\":3501:3507   */\n      dup5\n        /* \"#utility.yul\":3482:3508   */\n      tag_355\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":3478:3530   */\n      and\n        /* \"#utility.yul\":3466:3531   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"#utility.yul\":3586:3601   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":3551:3563   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":3439:3440   */\n      0x01\n        /* \"#utility.yul\":3432:3441   */\n      add\n        /* \"#utility.yul\":3403:3611   */\n      jump(tag_381)\n    tag_383:\n      pop\n        /* \"#utility.yul\":3628:3631   */\n      swap6\n        /* \"#utility.yul\":3022:3637   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3642:3826   */\n    tag_228:\n        /* \"#utility.yul\":3712:3718   */\n      0x00\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"#utility.yul\":3753:3762   */\n      dup3\n        /* \"#utility.yul\":3744:3751   */\n      dup5\n        /* \"#utility.yul\":3740:3763   */\n      sub\n        /* \"#utility.yul\":3736:3768   */\n      slt\n        /* \"#utility.yul\":3733:3785   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":3781:3782   */\n      0x00\n        /* \"#utility.yul\":3778:3779   */\n      dup1\n        /* \"#utility.yul\":3771:3783   */\n      revert\n        /* \"#utility.yul\":3733:3785   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":3804:3820   */\n      mload\n      swap2\n        /* \"#utility.yul\":3642:3826   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3831:4063   */\n    tag_247:\n        /* \"#utility.yul\":3870:3873   */\n      0x00\n        /* \"#utility.yul\":3891:3908   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3888:4028   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3950:3960   */\n      0x4e487b71\n        /* \"#utility.yul\":3945:3948   */\n      0xe0\n        /* \"#utility.yul\":3941:3961   */\n      shl\n        /* \"#utility.yul\":3938:3939   */\n      0x00\n        /* \"#utility.yul\":3931:3962   */\n      mstore\n        /* \"#utility.yul\":3985:3989   */\n      0x11\n        /* \"#utility.yul\":3982:3983   */\n      0x04\n        /* \"#utility.yul\":3975:3990   */\n      mstore\n        /* \"#utility.yul\":4013:4017   */\n      0x24\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4003:4018   */\n      revert\n        /* \"#utility.yul\":3888:4028   */\n    tag_388:\n      pop\n        /* \"#utility.yul\":4055:4056   */\n      0x01\n        /* \"#utility.yul\":4044:4057   */\n      add\n      swap1\n        /* \"#utility.yul\":3831:4063   */\n      jump\t// out\n        /* \"#utility.yul\":4068:4195   */\n    tag_250:\n        /* \"#utility.yul\":4129:4139   */\n      0x4e487b71\n        /* \"#utility.yul\":4124:4127   */\n      0xe0\n        /* \"#utility.yul\":4120:4140   */\n      shl\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4110:4141   */\n      mstore\n        /* \"#utility.yul\":4160:4164   */\n      0x41\n        /* \"#utility.yul\":4157:4158   */\n      0x04\n        /* \"#utility.yul\":4150:4165   */\n      mstore\n        /* \"#utility.yul\":4184:4188   */\n      0x24\n        /* \"#utility.yul\":4181:4182   */\n      0x00\n        /* \"#utility.yul\":4174:4189   */\n      revert\n        /* \"#utility.yul\":4479:4756   */\n    tag_305:\n        /* \"#utility.yul\":4546:4552   */\n      0x00\n        /* \"#utility.yul\":4599:4601   */\n      0x20\n        /* \"#utility.yul\":4587:4596   */\n      dup3\n        /* \"#utility.yul\":4578:4585   */\n      dup5\n        /* \"#utility.yul\":4574:4597   */\n      sub\n        /* \"#utility.yul\":4570:4602   */\n      slt\n        /* \"#utility.yul\":4567:4619   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":4615:4616   */\n      0x00\n        /* \"#utility.yul\":4612:4613   */\n      dup1\n        /* \"#utility.yul\":4605:4617   */\n      revert\n        /* \"#utility.yul\":4567:4619   */\n    tag_392:\n        /* \"#utility.yul\":4647:4656   */\n      dup2\n        /* \"#utility.yul\":4641:4657   */\n      mload\n        /* \"#utility.yul\":4700:4705   */\n      dup1\n        /* \"#utility.yul\":4693:4706   */\n      iszero\n        /* \"#utility.yul\":4686:4707   */\n      iszero\n        /* \"#utility.yul\":4679:4684   */\n      dup2\n        /* \"#utility.yul\":4676:4708   */\n      eq\n        /* \"#utility.yul\":4666:4726   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4722:4723   */\n      0x00\n        /* \"#utility.yul\":4719:4720   */\n      dup1\n        /* \"#utility.yul\":4712:4724   */\n      revert\n\n    auxdata: 0xa26469706673582212201eb983fe5d593e244dab6c5fe7b335155cf1f4278d5ff01f8476f9fc84a4cfa464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_315": {
									"entryPoint": null,
									"id": 315,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_420": {
									"entryPoint": null,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_719": {
									"entryPoint": null,
									"id": 719,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 270,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:920:7",
										"nodeType": "YulBlock",
										"src": "0:920:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:7",
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nativeSrc": "84:22:7",
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nativeSrc": "93:13:7",
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:7",
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nativeSrc": "171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nativeSrc": "171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:7",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:7",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nativeSrc": "150:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:7",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nativeSrc": "146:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nativeSrc": "135:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nativeSrc": "125:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nativeSrc": "118:50:7",
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nativeSrc": "115:70:7",
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:7",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "328:382:7",
													"nodeType": "YulBlock",
													"src": "328:382:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:7",
																"nodeType": "YulBlock",
																"src": "375:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:7",
																					"nodeType": "YulLiteral",
																					"src": "384:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:7",
																					"nodeType": "YulLiteral",
																					"src": "387:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:7"
																			},
																			"nativeSrc": "377:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:7"
																		},
																		"nativeSrc": "377:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:7"
																		},
																		"nativeSrc": "345:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:7",
																		"nodeType": "YulLiteral",
																		"src": "370:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:7"
																},
																"nativeSrc": "341:33:7",
																"nodeType": "YulFunctionCall",
																"src": "341:33:7"
															},
															"nativeSrc": "338:53:7",
															"nodeType": "YulIf",
															"src": "338:53:7"
														},
														{
															"nativeSrc": "400:50:7",
															"nodeType": "YulAssignment",
															"src": "400:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:7"
																},
																"nativeSrc": "410:40:7",
																"nodeType": "YulFunctionCall",
																"src": "410:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:7"
																}
															]
														},
														{
															"nativeSrc": "459:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "459:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "472:1:7",
																"nodeType": "YulLiteral",
																"src": "472:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "463:5:7",
																	"nodeType": "YulTypedName",
																	"src": "463:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "482:34:7",
															"nodeType": "YulAssignment",
															"src": "482:34:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "501:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "512:2:7",
																				"nodeType": "YulLiteral",
																				"src": "512:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:7"
																		},
																		"nativeSrc": "497:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "491:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "491:5:7"
																},
																"nativeSrc": "491:25:7",
																"nodeType": "YulFunctionCall",
																"src": "491:25:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "482:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "482:5:7"
																}
															]
														},
														{
															"nativeSrc": "525:15:7",
															"nodeType": "YulAssignment",
															"src": "525:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "535:5:7",
																"nodeType": "YulIdentifier",
																"src": "535:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:7"
																}
															]
														},
														{
															"nativeSrc": "549:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "549:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "564:1:7",
																"nodeType": "YulLiteral",
																"src": "564:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "553:7:7",
																	"nodeType": "YulTypedName",
																	"src": "553:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "574:36:7",
															"nodeType": "YulAssignment",
															"src": "574:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "595:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "595:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "606:2:7",
																				"nodeType": "YulLiteral",
																				"src": "606:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "591:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "591:3:7"
																		},
																		"nativeSrc": "591:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "591:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "585:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "585:5:7"
																},
																"nativeSrc": "585:25:7",
																"nodeType": "YulFunctionCall",
																"src": "585:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "574:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "574:7:7"
																}
															]
														},
														{
															"nativeSrc": "619:17:7",
															"nodeType": "YulAssignment",
															"src": "619:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "629:7:7",
																"nodeType": "YulIdentifier",
																"src": "629:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "619:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:7"
																}
															]
														},
														{
															"nativeSrc": "645:59:7",
															"nodeType": "YulAssignment",
															"src": "645:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "689:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "689:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "700:2:7",
																				"nodeType": "YulLiteral",
																				"src": "700:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "685:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:7"
																		},
																		"nativeSrc": "685:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "685:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "655:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "655:29:7"
																},
																"nativeSrc": "655:49:7",
																"nodeType": "YulFunctionCall",
																"src": "655:49:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "645:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "196:514:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:7",
														"nodeType": "YulTypedName",
														"src": "270:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:7",
														"nodeType": "YulTypedName",
														"src": "281:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:7",
														"nodeType": "YulTypedName",
														"src": "293:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:7",
														"nodeType": "YulTypedName",
														"src": "301:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:7",
														"nodeType": "YulTypedName",
														"src": "309:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:7",
														"nodeType": "YulTypedName",
														"src": "317:6:7",
														"type": ""
													}
												],
												"src": "196:514:7"
											},
											{
												"body": {
													"nativeSrc": "816:102:7",
													"nodeType": "YulBlock",
													"src": "816:102:7",
													"statements": [
														{
															"nativeSrc": "826:26:7",
															"nodeType": "YulAssignment",
															"src": "826:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "838:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:2:7",
																		"nodeType": "YulLiteral",
																		"src": "849:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:7"
																},
																"nativeSrc": "834:18:7",
																"nodeType": "YulFunctionCall",
																"src": "834:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "826:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "883:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:3:7",
																								"nodeType": "YulLiteral",
																								"src": "899:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "904:1:7",
																								"nodeType": "YulLiteral",
																								"src": "904:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "895:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:7"
																						},
																						"nativeSrc": "895:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "908:1:7",
																						"nodeType": "YulLiteral",
																						"src": "908:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "891:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:7"
																				},
																				"nativeSrc": "891:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "879:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:7"
																		},
																		"nativeSrc": "879:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:7"
																},
																"nativeSrc": "861:51:7",
																"nodeType": "YulFunctionCall",
																"src": "861:51:7"
															},
															"nativeSrc": "861:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "861:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "715:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:7",
														"nodeType": "YulTypedName",
														"src": "785:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "796:6:7",
														"nodeType": "YulTypedName",
														"src": "796:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "807:4:7",
														"nodeType": "YulTypedName",
														"src": "807:4:7",
														"type": ""
													}
												],
												"src": "715:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let value := 0\n        value := mload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 64))\n        value2 := value_1\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b506040516116c43803806116c483398101604081905261002f9161017a565b836001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161010e565b50600180556002805460ff191690556001600160a01b038416158061009357506001600160a01b038116155b156100b15760405163d92e233d60e01b815260040160405180910390fd5b826000036100d257604051630d428a0160e41b815260040160405180910390fd5b816000036100f3576040516336c5eec760e21b815260040160405180910390fd5b6001600160a01b0316608052600591909155600655506101c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461017557600080fd5b919050565b6000806000806080858703121561019057600080fd5b6101998561015e565b60208601516040870151919550935091506101b66060860161015e565b905092959194509250565b6080516114cc6101f8600039600081816101cf0152818161095001528181610dc201528181610e5c015261116a01526114cc6000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80638da5cb5b116100f9578063c25a02ec11610097578063e082fe2a11610071578063e082fe2a1461037c578063f22069df14610384578063f2fde38b1461038c578063fc05542a1461039f57600080fd5b8063c25a02ec14610358578063d335993a14610361578063d90843261461037457600080fd5b8063a0858343116100d3578063a085834314610309578063a34db0a01461031c578063a6a098111461033c578063b07029131461034557600080fd5b80638da5cb5b146102d257806398b48493146102e35780639a0474e8146102f657600080fd5b80636fa1c59d11610166578063715018a611610140578063715018a61461028c578063741ae614146102945780637a0abf081461029c57806385737020146102a557600080fd5b80636fa1c59d146102505780636ff65c20146102585780637069243c1461028457600080fd5b80631318fbf1146101ae5780631fccf672146101ca5780633960fc6614610209578063528780cc146102135780635c975abb1461022657806364bb632f1461023d575b600080fd5b6101b760075481565b6040519081526020015b60405180910390f35b6101f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c1565b6102116103cb565b005b6102116102213660046112a3565b6103dd565b60025460ff165b60405190151581526020016101c1565b61021161024b3660046112a3565b61044f565b6006546101b7565b61022d6102663660046112d8565b6001600160a01b031660009081526004602052604090205460ff1690565b6005546101b7565b6102116104b8565b6007546101b7565b6101b760055481565b61022d6102b33660046112d8565b6001600160a01b031660009081526003602052604090205460ff161590565b6000546001600160a01b03166101f1565b6102116102f13660046112fa565b6104ca565b6102116103043660046112fa565b61069b565b6102116103173660046112d8565b610866565b61032f61032a3660046112fa565b610a26565b6040516101c19190611371565b6101b760065481565b6102116103533660046112d8565b610bd4565b6101b760085481565b61021161036f3660046112d8565b610cb2565b6008546101b7565b610211610d82565b610211610d92565b61021161039a3660046112d8565b610f8b565b61022d6103ad3660046112d8565b6001600160a01b031660009081526003602052604090205460ff1690565b6103d3610fc6565b6103db610ff3565b565b6103e5610fc6565b80600003610406576040516336c5eec760e21b815260040160405180910390fd5b6006805490829055604080518281526020810184905283917f2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef91015b60405180910390a1505050565b610457610fc6565b8060000361047857604051630d428a0160e41b815260040160405180910390fd5b6005805490829055604080518281526020810184905283917ff0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c949101610442565b6104c0610fc6565b6103db6000611045565b6104d2610fc6565b8060008190036104f557604051634ec4810560e11b815260040160405180910390fd5b60005b818110156105f6576000848483818110610514576105146113bd565b905060200201602081019061052991906112d8565b6001600160a01b0316036105505760405163d92e233d60e01b815260040160405180910390fd5b60036000858584818110610566576105666113bd565b905060200201602081019061057b91906112d8565b6001600160a01b0316815260208101919091526040016000205460ff16156105ee578383828181106105af576105af6113bd565b90506020020160208101906105c491906112d8565b604051633746725b60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b6001016104f8565b5060005b818110156106695760016003600086868581811061061a5761061a6113bd565b905060200201602081019061062f91906112d8565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600880546001908101909155016105fa565b507f9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc83836040516104429291906113d3565b6106a3610fc6565b8060008190036106c657604051634ec4810560e11b815260040160405180910390fd5b60005b818110156107c15760008484838181106106e5576106e56113bd565b90506020020160208101906106fa91906112d8565b6001600160a01b0316036107215760405163d92e233d60e01b815260040160405180910390fd5b60036000858584818110610737576107376113bd565b905060200201602081019061074c91906112d8565b6001600160a01b0316815260208101919091526040016000205460ff166107b95783838281811061077f5761077f6113bd565b905060200201602081019061079491906112d8565b60405163de55cc3360e01b81526001600160a01b0390911660048201526024016105e5565b6001016106c9565b5060005b81811015610834576000600360008686858181106107e5576107e56113bd565b90506020020160208101906107fa91906112d8565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600880546000190190556001016107c5565b507fd68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b83836040516104429291906113d3565b61086e611095565b6108766110b9565b80336001600160a01b038216146108ab576040516344b5040560e01b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038216600090815260036020526040902054829060ff166108f15760405163de55cc3360e01b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038316600090815260046020526040902054839060ff1615610938576040516301ee5f6f60e31b81526001600160a01b03821660048201526024016105e5565b6005546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c3919061141e565b10156109e25760405163786e0a9960e01b815260040160405180910390fd5b60065460075403610a05576040516227007f60ea1b815260040160405180910390fd5b610a0e846110e3565b610a178461113d565b505050610a2360018055565b50565b6060816000819003610a4b57604051634ec4810560e11b815260040160405180910390fd5b6000805b82811015610aba5760036000878784818110610a6d57610a6d6113bd565b9050602002016020810190610a8291906112d8565b6001600160a01b0316815260208101919091526040016000205460ff1615610ab25781610aae81611437565b9250505b600101610a4f565b5060008167ffffffffffffffff811115610ad657610ad661145e565b604051908082528060200260200182016040528015610aff578160200160208202803683370190505b5090506000805b84811015610bc85760036000898984818110610b2457610b246113bd565b9050602002016020810190610b3991906112d8565b6001600160a01b0316815260208101919091526040016000205460ff1615610bc057878782818110610b6d57610b6d6113bd565b9050602002016020810190610b8291906112d8565b8383610b8d81611437565b945081518110610b9f57610b9f6113bd565b60200260200101906001600160a01b031690816001600160a01b0316815250505b600101610b06565b50909695505050505050565b610bdc610fc6565b6001600160a01b038116600090815260036020526040902054819060ff1615610c2357604051633746725b60e11b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038216610c4a5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038216600081815260036020908152604091829020805460ff1916600190811790915560088054909101905590519182527f1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d2791015b60405180910390a15050565b610cba610fc6565b6001600160a01b038116600090815260036020526040902054819060ff16610d005760405163de55cc3360e01b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038216610d275760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038216600081815260036020908152604091829020805460ff191690556008805460001901905590519182527fa354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e29101610ca6565b610d8a610fc6565b6103db611243565b610d9a610fc6565b610da2611095565b610daa6110b9565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e35919061141e565b905080600003610e58576040516316e3ff0560e21b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610e9b6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c9190611474565b905080610f2c576040516327fcd9d160e01b815260040160405180910390fd5b7f2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097610f5f6000546001600160a01b031690565b604080516001600160a01b039092168252602082018590520160405180910390a150506103db60018055565b610f93610fc6565b6001600160a01b038116610fbd57604051631e4fbdf760e01b8152600060048201526024016105e5565b610a2381611045565b6000546001600160a01b031633146103db5760405163118cdaa760e01b81523360048201526024016105e5565b610ffb611280565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460ff16156103db5760405163d93c066560e01b815260040160405180910390fd5b6002600154036110dc57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527f654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943910160405180910390a150565b60055460405163a9059cbb60e01b81526001600160a01b03838116600483015260248201929092526000917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d79190611474565b9050806111f75760405163078ecf4160e41b815260040160405180910390fd5b600780546001019055600554604080516001600160a01b038516815260208101929092527f8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e9101610ca6565b61124b611095565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110283390565b60025460ff166103db57604051638dfc202b60e01b815260040160405180910390fd5b6000602082840312156112b557600080fd5b5035919050565b80356001600160a01b03811681146112d357600080fd5b919050565b6000602082840312156112ea57600080fd5b6112f3826112bc565b9392505050565b6000806020838503121561130d57600080fd5b823567ffffffffffffffff81111561132457600080fd5b8301601f8101851361133557600080fd5b803567ffffffffffffffff81111561134c57600080fd5b8560208260051b840101111561136157600080fd5b6020919091019590945092505050565b602080825282518282018190526000918401906040840190835b818110156113b25783516001600160a01b031683526020938401939092019160010161138b565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b6020808252810182905260008360408301825b85811015611414576001600160a01b036113ff846112bc565b168252602092830192909101906001016113e6565b5095945050505050565b60006020828403121561143057600080fd5b5051919050565b60006001820161145757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561148657600080fd5b815180151581146112f357600080fdfea26469706673582212201eb983fe5d593e244dab6c5fe7b335155cf1f4278d5ff01f8476f9fc84a4cfa464736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16C4 CODESIZE SUB DUP1 PUSH2 0x16C4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x17A JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x10E JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 PUSH2 0x93 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 SUB PUSH2 0xD2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD428A01 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0xF3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36C5EEC7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE POP PUSH2 0x1C1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x199 DUP6 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1B6 PUSH1 0x60 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x14CC PUSH2 0x1F8 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1CF ADD MSTORE DUP2 DUP2 PUSH2 0x950 ADD MSTORE DUP2 DUP2 PUSH2 0xDC2 ADD MSTORE DUP2 DUP2 PUSH2 0xE5C ADD MSTORE PUSH2 0x116A ADD MSTORE PUSH2 0x14CC PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC25A02EC GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE082FE2A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE082FE2A EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xF22069DF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xFC05542A EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC25A02EC EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD335993A EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xD9084326 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0858343 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA0858343 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA34DB0A0 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xA6A09811 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xB0702913 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x98B48493 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x9A0474E8 EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FA1C59D GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x741AE614 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x7A0ABF08 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x85737020 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FA1C59D EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6FF65C20 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x7069243C EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1318FBF1 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1FCCF672 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x3960FC66 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x528780CC EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x64BB632F EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x211 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH2 0x211 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x211 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x211 PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x22D PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0xFF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36C5EEC7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0x2E31E8893A04CE5258044D342D7658948A6AC9710D97E32462AB75F131AE11EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x457 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD428A01 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xF0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94 SWAP2 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3DB PUSH1 0x0 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EE JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AF PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x61A PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE ADD PUSH2 0x5FA JUMP JUMPDEST POP PUSH32 0x9A9F2A64A3B0B4774DA60129AA707715E049CB95062F7ACAAFFC07DDC244C1CC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x442 SWAP3 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x6A3 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x6E5 JUMPI PUSH2 0x6E5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x737 JUMPI PUSH2 0x737 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7B9 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6C9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x7E5 JUMPI PUSH2 0x7E5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x7C5 JUMP JUMPDEST POP PUSH32 0xD68B41369D54FACA53E699320360840DB6E0E2E175D3974EB304FD18713D916B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x442 SWAP3 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x86E PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x876 PUSH2 0x10B9 JUMP JUMPDEST DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x44B50405 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EE5F6F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x141E JUMP JUMPDEST LT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD SUB PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x27007F PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0E DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0xA17 DUP5 PUSH2 0x113D JUMP JUMPDEST POP POP POP PUSH2 0xA23 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x3 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xA6D JUMPI PUSH2 0xA6D PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAB2 JUMPI DUP2 PUSH2 0xAAE DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA4F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD6 JUMPI PUSH2 0xAD6 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xBC8 JUMPI PUSH1 0x3 PUSH1 0x0 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBC0 JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0xB6D JUMPI PUSH2 0xB6D PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB8D DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9F PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB06 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBDC PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1AFDE38C60D2BE0D28D001619816D86C39CE78B350C9D94F23C095099B9C1D27 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xCBA PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA354190DD7342316E40E5358C9F72037F2C677CDC057D3DEBBC4F1B62495E2E2 SWAP2 ADD PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x1243 JUMP JUMPDEST PUSH2 0xD9A PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xDA2 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0xDAA PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x141E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16E3FF05 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xE9B PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0C SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0x27FCD9D1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097 PUSH2 0xF5F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x3DB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xF93 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0xA23 DUP2 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0xFFB PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x78ECF41 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E SWAP2 ADD PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x124B PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1028 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F3 DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x138B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP4 PUSH1 0x40 DUP4 ADD DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13FF DUP5 PUSH2 0x12BC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13E6 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1457 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12F3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB9 DUP4 INVALID TSTORE MSIZE RETURNDATACOPY 0x24 0x4D 0xAB PUSH13 0x5FE7B335155CF1F4278D5FF01F DUP5 PUSH23 0xF9FC84A4CFA464736F6C634300081C0033000000000000 ",
							"sourceMap": "330:11982:6:-:0;;;3321:811;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3517:23;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;861:51:7;834:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:5;2061:21;;1231:7:4;:15;;-1:-1:-1;;1231:15:4;;;-1:-1:-1;;;;;3569:37:6;::::1;::::0;;:83:::1;;-1:-1:-1::0;;;;;;3622:30:6;::::1;::::0;3569:83:::1;3552:156;;;3684:13;;-1:-1:-1::0;;;3684:13:6::1;;;;;;;;;;;3552:156;3721:32;3757:1;3721:37:::0;3717:101:::1;;3781:26;;-1:-1:-1::0;;;3781:26:6::1;;;;;;;;;;;3717:101;3832:27;3863:1;3832:32:::0;3828:105:::1;;3887:35;;-1:-1:-1::0;;;3887:35:6::1;;;;;;;;;;;3828:105;-1:-1:-1::0;;;;;3943:39:6::1;;::::0;3993:31:::1;:66:::0;;;;4069:26:::1;:56:::0;-1:-1:-1;330:11982:6;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:514::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;512:2;497:18;;491:25;606:2;591:18;;585:25;400:50;;-1:-1:-1;491:25:7;-1:-1:-1;585:25:7;-1:-1:-1;655:49:7;700:2;685:18;;655:49;:::i;:::-;645:59;;196:514;;;;;;;:::o;715:203::-;330:11982:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 4038,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_455": {
									"entryPoint": null,
									"id": 455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_447": {
									"entryPoint": 4281,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_381": {
									"entryPoint": 4675,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_352": {
									"entryPoint": 4245,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_365": {
									"entryPoint": 4736,
									"id": 365,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4165,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_397": {
									"entryPoint": 4083,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blacklistMultipleWhitelistedUserAddresses_972": {
									"entryPoint": 1691,
									"id": 972,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@blacklistOneWhitelistedUserAddress_791": {
									"entryPoint": 3250,
									"id": 791,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cUSD_482": {
									"entryPoint": null,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkIfParticipantHasAlreadyClaimedReward_1309": {
									"entryPoint": null,
									"id": 1309,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkIfUserAddressIsBlacklisted_1334": {
									"entryPoint": null,
									"id": 1334,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkIfUserAddressIsWhitelisted_1321": {
									"entryPoint": null,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNumberOfRewardedParticipants_1350": {
									"entryPoint": null,
									"id": 1350,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumberOfWhitelistedUserAddresses_1366": {
									"entryPoint": null,
									"id": 1366,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardAmountPerParticipantInWei_1342": {
									"entryPoint": null,
									"id": 1342,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTargetNumberOfParticipants_1358": {
									"entryPoint": null,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWhitelistedAddressesFromRegisteredAddresses_1297": {
									"entryPoint": 2598,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@markParticipantAsHavingClaimedReward_1037": {
									"entryPoint": 4323,
									"id": 1037,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@numberOfRewardedParticipants_496": {
									"entryPoint": null,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numberOfWhitelistedUserAddresses_498": {
									"entryPoint": null,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pauseSurvey_1192": {
									"entryPoint": 3458,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processRewardClaimByParticipant_1021": {
									"entryPoint": 2150,
									"id": 1021,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1208,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmountPerParticipantInWei_492": {
									"entryPoint": null,
									"id": 492,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardParticipant_1067": {
									"entryPoint": 4413,
									"id": 1067,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@targetNumberOfParticipants_494": {
									"entryPoint": null,
									"id": 494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3979,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpauseSurvey_1201": {
									"entryPoint": 971,
									"id": 1201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateRewardAmountPerParticipant_1150": {
									"entryPoint": 1103,
									"id": 1150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTargetNumberOfParticipants_1183": {
									"entryPoint": 989,
									"id": 1183,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelistMultipleUserAddresses_881": {
									"entryPoint": 1226,
									"id": 881,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@whitelistOneUserAddress_755": {
									"entryPoint": 3028,
									"id": 755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawAllRewardFundsToResearcher_1117": {
									"entryPoint": 3474,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 4858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5075,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4758:7",
										"nodeType": "YulBlock",
										"src": "0:4758:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "319:102:7",
													"nodeType": "YulBlock",
													"src": "319:102:7",
													"statements": [
														{
															"nativeSrc": "329:26:7",
															"nodeType": "YulAssignment",
															"src": "329:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "341:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "341:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:2:7",
																		"nodeType": "YulLiteral",
																		"src": "352:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "337:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:7"
																},
																"nativeSrc": "337:18:7",
																"nodeType": "YulFunctionCall",
																"src": "337:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "329:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "329:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "371:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "386:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "386:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "402:3:7",
																								"nodeType": "YulLiteral",
																								"src": "402:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:1:7",
																								"nodeType": "YulLiteral",
																								"src": "407:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "398:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "398:3:7"
																						},
																						"nativeSrc": "398:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "398:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "411:1:7",
																						"nodeType": "YulLiteral",
																						"src": "411:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "394:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "394:3:7"
																				},
																				"nativeSrc": "394:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "394:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:7"
																		},
																		"nativeSrc": "382:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "382:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "364:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "364:6:7"
																},
																"nativeSrc": "364:51:7",
																"nodeType": "YulFunctionCall",
																"src": "364:51:7"
															},
															"nativeSrc": "364:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "364:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed",
												"nativeSrc": "196:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "288:9:7",
														"nodeType": "YulTypedName",
														"src": "288:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "299:6:7",
														"nodeType": "YulTypedName",
														"src": "299:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "310:4:7",
														"nodeType": "YulTypedName",
														"src": "310:4:7",
														"type": ""
													}
												],
												"src": "196:225:7"
											},
											{
												"body": {
													"nativeSrc": "496:110:7",
													"nodeType": "YulBlock",
													"src": "496:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "542:16:7",
																"nodeType": "YulBlock",
																"src": "542:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "551:1:7",
																					"nodeType": "YulLiteral",
																					"src": "551:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "554:1:7",
																					"nodeType": "YulLiteral",
																					"src": "554:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "544:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "544:6:7"
																			},
																			"nativeSrc": "544:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "544:12:7"
																		},
																		"nativeSrc": "544:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "544:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "517:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "517:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "526:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "526:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "513:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "513:3:7"
																		},
																		"nativeSrc": "513:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "513:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "538:2:7",
																		"nodeType": "YulLiteral",
																		"src": "538:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:3:7"
																},
																"nativeSrc": "509:32:7",
																"nodeType": "YulFunctionCall",
																"src": "509:32:7"
															},
															"nativeSrc": "506:52:7",
															"nodeType": "YulIf",
															"src": "506:52:7"
														},
														{
															"nativeSrc": "567:33:7",
															"nodeType": "YulAssignment",
															"src": "567:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "590:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "590:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "577:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "577:12:7"
																},
																"nativeSrc": "577:23:7",
																"nodeType": "YulFunctionCall",
																"src": "577:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "567:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "426:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "462:9:7",
														"nodeType": "YulTypedName",
														"src": "462:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "473:7:7",
														"nodeType": "YulTypedName",
														"src": "473:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "485:6:7",
														"nodeType": "YulTypedName",
														"src": "485:6:7",
														"type": ""
													}
												],
												"src": "426:180:7"
											},
											{
												"body": {
													"nativeSrc": "706:92:7",
													"nodeType": "YulBlock",
													"src": "706:92:7",
													"statements": [
														{
															"nativeSrc": "716:26:7",
															"nodeType": "YulAssignment",
															"src": "716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "728:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "728:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "739:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "724:3:7"
																},
																"nativeSrc": "724:18:7",
																"nodeType": "YulFunctionCall",
																"src": "724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "716:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "716:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "758:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "758:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "783:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "783:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "776:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "776:6:7"
																				},
																				"nativeSrc": "776:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "776:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "769:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "769:6:7"
																		},
																		"nativeSrc": "769:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "769:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:7"
																},
																"nativeSrc": "751:41:7",
																"nodeType": "YulFunctionCall",
																"src": "751:41:7"
															},
															"nativeSrc": "751:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "751:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "611:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "675:9:7",
														"nodeType": "YulTypedName",
														"src": "675:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "686:6:7",
														"nodeType": "YulTypedName",
														"src": "686:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "697:4:7",
														"nodeType": "YulTypedName",
														"src": "697:4:7",
														"type": ""
													}
												],
												"src": "611:187:7"
											},
											{
												"body": {
													"nativeSrc": "852:124:7",
													"nodeType": "YulBlock",
													"src": "852:124:7",
													"statements": [
														{
															"nativeSrc": "862:29:7",
															"nodeType": "YulAssignment",
															"src": "862:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "884:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "871:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "871:12:7"
																},
																"nativeSrc": "871:20:7",
																"nodeType": "YulFunctionCall",
																"src": "871:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "862:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "862:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "954:16:7",
																"nodeType": "YulBlock",
																"src": "954:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "963:1:7",
																					"nodeType": "YulLiteral",
																					"src": "963:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "966:1:7",
																					"nodeType": "YulLiteral",
																					"src": "966:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "956:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:7"
																			},
																			"nativeSrc": "956:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "956:12:7"
																		},
																		"nativeSrc": "956:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "956:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "913:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "913:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "924:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "924:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "939:3:7",
																										"nodeType": "YulLiteral",
																										"src": "939:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "944:1:7",
																										"nodeType": "YulLiteral",
																										"src": "944:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "935:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "935:3:7"
																								},
																								"nativeSrc": "935:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "935:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "948:1:7",
																								"nodeType": "YulLiteral",
																								"src": "948:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "931:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "931:3:7"
																						},
																						"nativeSrc": "931:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "931:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "920:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:7"
																				},
																				"nativeSrc": "920:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "920:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "910:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "910:2:7"
																		},
																		"nativeSrc": "910:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "910:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:7"
																},
																"nativeSrc": "903:50:7",
																"nodeType": "YulFunctionCall",
																"src": "903:50:7"
															},
															"nativeSrc": "900:70:7",
															"nodeType": "YulIf",
															"src": "900:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "803:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "831:6:7",
														"nodeType": "YulTypedName",
														"src": "831:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "842:5:7",
														"nodeType": "YulTypedName",
														"src": "842:5:7",
														"type": ""
													}
												],
												"src": "803:173:7"
											},
											{
												"body": {
													"nativeSrc": "1051:116:7",
													"nodeType": "YulBlock",
													"src": "1051:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1097:16:7",
																"nodeType": "YulBlock",
																"src": "1097:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1106:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1106:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1109:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1099:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1099:6:7"
																			},
																			"nativeSrc": "1099:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1099:12:7"
																		},
																		"nativeSrc": "1099:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1099:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1072:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1072:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1081:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1068:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:7"
																		},
																		"nativeSrc": "1068:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1068:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1093:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1093:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1064:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1064:3:7"
																},
																"nativeSrc": "1064:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1064:32:7"
															},
															"nativeSrc": "1061:52:7",
															"nodeType": "YulIf",
															"src": "1061:52:7"
														},
														{
															"nativeSrc": "1122:39:7",
															"nodeType": "YulAssignment",
															"src": "1122:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1132:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1132:18:7"
																},
																"nativeSrc": "1132:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1132:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1122:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "981:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1017:9:7",
														"nodeType": "YulTypedName",
														"src": "1017:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1028:7:7",
														"nodeType": "YulTypedName",
														"src": "1028:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1040:6:7",
														"nodeType": "YulTypedName",
														"src": "1040:6:7",
														"type": ""
													}
												],
												"src": "981:186:7"
											},
											{
												"body": {
													"nativeSrc": "1273:102:7",
													"nodeType": "YulBlock",
													"src": "1273:102:7",
													"statements": [
														{
															"nativeSrc": "1283:26:7",
															"nodeType": "YulAssignment",
															"src": "1283:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1295:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1295:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1291:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:7"
																},
																"nativeSrc": "1291:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1291:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1283:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1283:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1325:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1340:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1340:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1356:3:7",
																								"nodeType": "YulLiteral",
																								"src": "1356:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1361:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1361:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1352:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1352:3:7"
																						},
																						"nativeSrc": "1352:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1352:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1365:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1365:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1348:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1348:3:7"
																				},
																				"nativeSrc": "1348:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1348:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1336:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1336:3:7"
																		},
																		"nativeSrc": "1336:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1336:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1318:6:7"
																},
																"nativeSrc": "1318:51:7",
																"nodeType": "YulFunctionCall",
																"src": "1318:51:7"
															},
															"nativeSrc": "1318:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "1318:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1172:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:7",
														"nodeType": "YulTypedName",
														"src": "1242:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1253:6:7",
														"nodeType": "YulTypedName",
														"src": "1253:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1264:4:7",
														"nodeType": "YulTypedName",
														"src": "1264:4:7",
														"type": ""
													}
												],
												"src": "1172:203:7"
											},
											{
												"body": {
													"nativeSrc": "1485:505:7",
													"nodeType": "YulBlock",
													"src": "1485:505:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1531:16:7",
																"nodeType": "YulBlock",
																"src": "1531:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1543:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1543:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1533:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1533:6:7"
																			},
																			"nativeSrc": "1533:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1533:12:7"
																		},
																		"nativeSrc": "1533:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1533:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1506:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1506:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1515:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1515:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:7"
																		},
																		"nativeSrc": "1502:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1527:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1527:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1498:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:7"
																},
																"nativeSrc": "1498:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1498:32:7"
															},
															"nativeSrc": "1495:52:7",
															"nodeType": "YulIf",
															"src": "1495:52:7"
														},
														{
															"nativeSrc": "1556:37:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1556:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1583:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1570:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1570:12:7"
																},
																"nativeSrc": "1570:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1570:23:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1560:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1560:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1636:16:7",
																"nodeType": "YulBlock",
																"src": "1636:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1645:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1645:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1648:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1648:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1638:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1638:6:7"
																			},
																			"nativeSrc": "1638:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1638:12:7"
																		},
																		"nativeSrc": "1638:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1638:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1608:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1608:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1616:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1616:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1605:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1605:2:7"
																},
																"nativeSrc": "1605:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1605:30:7"
															},
															"nativeSrc": "1602:50:7",
															"nodeType": "YulIf",
															"src": "1602:50:7"
														},
														{
															"nativeSrc": "1661:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1675:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1675:9:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1686:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1686:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1671:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:7"
																},
																"nativeSrc": "1671:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1671:22:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1665:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1665:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1741:16:7",
																"nodeType": "YulBlock",
																"src": "1741:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1750:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1750:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1753:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1753:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1743:6:7"
																			},
																			"nativeSrc": "1743:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1743:12:7"
																		},
																		"nativeSrc": "1743:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1743:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1720:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1720:2:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1724:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1724:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1716:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1716:3:7"
																				},
																				"nativeSrc": "1716:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1716:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1731:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1731:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:7"
																		},
																		"nativeSrc": "1712:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1712:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1705:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1705:6:7"
																},
																"nativeSrc": "1705:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1705:35:7"
															},
															"nativeSrc": "1702:55:7",
															"nodeType": "YulIf",
															"src": "1702:55:7"
														},
														{
															"nativeSrc": "1766:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1766:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1793:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1793:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1780:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1780:12:7"
																},
																"nativeSrc": "1780:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1780:16:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1770:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1770:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1839:16:7",
																"nodeType": "YulBlock",
																"src": "1839:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1848:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1848:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1851:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1851:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1841:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1841:6:7"
																			},
																			"nativeSrc": "1841:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1841:12:7"
																		},
																		"nativeSrc": "1841:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1841:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1811:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1811:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1819:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1819:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1808:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:2:7"
																},
																"nativeSrc": "1808:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1808:30:7"
															},
															"nativeSrc": "1805:50:7",
															"nodeType": "YulIf",
															"src": "1805:50:7"
														},
														{
															"body": {
																"nativeSrc": "1913:16:7",
																"nodeType": "YulBlock",
																"src": "1913:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1922:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1922:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1925:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1915:6:7"
																			},
																			"nativeSrc": "1915:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1915:12:7"
																		},
																		"nativeSrc": "1915:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1915:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1878:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "1878:2:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1886:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:7",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "1889:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "1889:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1882:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1882:3:7"
																						},
																						"nativeSrc": "1882:14:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1882:14:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1874:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1874:3:7"
																				},
																				"nativeSrc": "1874:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1874:23:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1899:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1899:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1870:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:7"
																		},
																		"nativeSrc": "1870:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1870:32:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1904:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "1904:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1867:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1867:2:7"
																},
																"nativeSrc": "1867:45:7",
																"nodeType": "YulFunctionCall",
																"src": "1867:45:7"
															},
															"nativeSrc": "1864:65:7",
															"nodeType": "YulIf",
															"src": "1864:65:7"
														},
														{
															"nativeSrc": "1938:21:7",
															"nodeType": "YulAssignment",
															"src": "1938:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1952:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1952:2:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1956:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1948:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:3:7"
																},
																"nativeSrc": "1948:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:11:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1938:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:7"
																}
															]
														},
														{
															"nativeSrc": "1968:16:7",
															"nodeType": "YulAssignment",
															"src": "1968:16:7",
															"value": {
																"name": "length",
																"nativeSrc": "1978:6:7",
																"nodeType": "YulIdentifier",
																"src": "1978:6:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1968:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "1380:610:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1443:9:7",
														"nodeType": "YulTypedName",
														"src": "1443:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1454:7:7",
														"nodeType": "YulTypedName",
														"src": "1454:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1466:6:7",
														"nodeType": "YulTypedName",
														"src": "1466:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1474:6:7",
														"nodeType": "YulTypedName",
														"src": "1474:6:7",
														"type": ""
													}
												],
												"src": "1380:610:7"
											},
											{
												"body": {
													"nativeSrc": "2146:486:7",
													"nodeType": "YulBlock",
													"src": "2146:486:7",
													"statements": [
														{
															"nativeSrc": "2156:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2156:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2174:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2174:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2185:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:7"
																},
																"nativeSrc": "2170:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2170:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "2160:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2160:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2204:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2204:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2215:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2215:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2197:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:7"
																},
																"nativeSrc": "2197:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2197:21:7"
															},
															"nativeSrc": "2197:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2197:21:7"
														},
														{
															"nativeSrc": "2227:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2227:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "2238:6:7",
																"nodeType": "YulIdentifier",
																"src": "2238:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "2231:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2231:3:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2253:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2253:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2273:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2273:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2267:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2267:5:7"
																},
																"nativeSrc": "2267:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2267:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2257:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2257:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "2296:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2296:6:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2304:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2289:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2289:6:7"
																},
																"nativeSrc": "2289:22:7",
																"nodeType": "YulFunctionCall",
																"src": "2289:22:7"
															},
															"nativeSrc": "2289:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "2289:22:7"
														},
														{
															"nativeSrc": "2320:25:7",
															"nodeType": "YulAssignment",
															"src": "2320:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2331:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2342:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2342:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2327:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:7"
																},
																"nativeSrc": "2327:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2327:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2320:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:7"
																}
															]
														},
														{
															"nativeSrc": "2354:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2354:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2372:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2372:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2380:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2380:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2368:3:7"
																},
																"nativeSrc": "2368:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2368:15:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2358:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2358:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2392:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2392:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2401:1:7",
																"nodeType": "YulLiteral",
																"src": "2401:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2396:1:7",
																	"nodeType": "YulTypedName",
																	"src": "2396:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2460:146:7",
																"nodeType": "YulBlock",
																"src": "2460:146:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2481:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2481:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "2496:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2496:6:7"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "2490:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2490:5:7"
																							},
																							"nativeSrc": "2490:13:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2490:13:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2513:3:7",
																											"nodeType": "YulLiteral",
																											"src": "2513:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2518:1:7",
																											"nodeType": "YulLiteral",
																											"src": "2518:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2509:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2509:3:7"
																									},
																									"nativeSrc": "2509:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "2509:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2522:1:7",
																									"nodeType": "YulLiteral",
																									"src": "2522:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "2505:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2505:3:7"
																							},
																							"nativeSrc": "2505:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2505:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2486:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2486:3:7"
																					},
																					"nativeSrc": "2486:39:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2486:39:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2474:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:7"
																			},
																			"nativeSrc": "2474:52:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2474:52:7"
																		},
																		"nativeSrc": "2474:52:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:52:7"
																	},
																	{
																		"nativeSrc": "2539:19:7",
																		"nodeType": "YulAssignment",
																		"src": "2539:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2550:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2550:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2555:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2555:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2546:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2546:3:7"
																			},
																			"nativeSrc": "2546:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2546:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2539:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2539:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2571:25:7",
																		"nodeType": "YulAssignment",
																		"src": "2571:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2585:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2585:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2593:2:7",
																					"nodeType": "YulLiteral",
																					"src": "2593:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2581:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2581:3:7"
																			},
																			"nativeSrc": "2581:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2581:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2571:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2571:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2422:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "2422:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2425:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2425:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2419:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2419:2:7"
																},
																"nativeSrc": "2419:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2419:13:7"
															},
															"nativeSrc": "2411:195:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2433:18:7",
																"nodeType": "YulBlock",
																"src": "2433:18:7",
																"statements": [
																	{
																		"nativeSrc": "2435:14:7",
																		"nodeType": "YulAssignment",
																		"src": "2435:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2444:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "2444:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2447:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2440:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2440:3:7"
																			},
																			"nativeSrc": "2440:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2435:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "2435:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2415:3:7",
																"nodeType": "YulBlock",
																"src": "2415:3:7",
																"statements": []
															},
															"src": "2411:195:7"
														},
														{
															"nativeSrc": "2615:11:7",
															"nodeType": "YulAssignment",
															"src": "2615:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "2623:3:7",
																"nodeType": "YulIdentifier",
																"src": "2623:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1995:637:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2115:9:7",
														"nodeType": "YulTypedName",
														"src": "2115:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2126:6:7",
														"nodeType": "YulTypedName",
														"src": "2126:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2137:4:7",
														"nodeType": "YulTypedName",
														"src": "2137:4:7",
														"type": ""
													}
												],
												"src": "1995:637:7"
											},
											{
												"body": {
													"nativeSrc": "2766:119:7",
													"nodeType": "YulBlock",
													"src": "2766:119:7",
													"statements": [
														{
															"nativeSrc": "2776:26:7",
															"nodeType": "YulAssignment",
															"src": "2776:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2788:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2788:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2799:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2784:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2784:3:7"
																},
																"nativeSrc": "2784:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2784:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2776:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2776:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2818:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2818:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2829:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2811:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2811:6:7"
																},
																"nativeSrc": "2811:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2811:25:7"
															},
															"nativeSrc": "2811:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "2811:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2856:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2867:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2867:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:7"
																		},
																		"nativeSrc": "2852:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2872:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2845:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:7"
																},
																"nativeSrc": "2845:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2845:34:7"
															},
															"nativeSrc": "2845:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2845:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2637:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2727:9:7",
														"nodeType": "YulTypedName",
														"src": "2727:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2738:6:7",
														"nodeType": "YulTypedName",
														"src": "2738:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2746:6:7",
														"nodeType": "YulTypedName",
														"src": "2746:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2757:4:7",
														"nodeType": "YulTypedName",
														"src": "2757:4:7",
														"type": ""
													}
												],
												"src": "2637:248:7"
											},
											{
												"body": {
													"nativeSrc": "2922:95:7",
													"nodeType": "YulBlock",
													"src": "2922:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2939:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2939:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2946:3:7",
																				"nodeType": "YulLiteral",
																				"src": "2946:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2951:10:7",
																				"nodeType": "YulLiteral",
																				"src": "2951:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2942:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2942:3:7"
																		},
																		"nativeSrc": "2942:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2942:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:7"
																},
																"nativeSrc": "2932:31:7",
																"nodeType": "YulFunctionCall",
																"src": "2932:31:7"
															},
															"nativeSrc": "2932:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "2932:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2979:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2979:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2982:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2982:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2972:6:7"
																},
																"nativeSrc": "2972:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2972:15:7"
															},
															"nativeSrc": "2972:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2972:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3003:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3006:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3006:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2996:6:7"
																},
																"nativeSrc": "2996:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2996:15:7"
															},
															"nativeSrc": "2996:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2996:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2890:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2890:127:7"
											},
											{
												"body": {
													"nativeSrc": "3183:454:7",
													"nodeType": "YulBlock",
													"src": "3183:454:7",
													"statements": [
														{
															"nativeSrc": "3193:32:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3193:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3211:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3222:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3207:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:7"
																},
																"nativeSrc": "3207:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3207:18:7"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3197:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3197:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3241:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3241:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:7"
																},
																"nativeSrc": "3234:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3234:21:7"
															},
															"nativeSrc": "3234:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3234:21:7"
														},
														{
															"nativeSrc": "3264:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3264:17:7",
															"value": {
																"name": "tail_1",
																"nativeSrc": "3275:6:7",
																"nodeType": "YulIdentifier",
																"src": "3275:6:7"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "3268:3:7",
																	"nodeType": "YulTypedName",
																	"src": "3268:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "3297:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3297:6:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3305:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3305:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:7"
																},
																"nativeSrc": "3290:22:7",
																"nodeType": "YulFunctionCall",
																"src": "3290:22:7"
															},
															"nativeSrc": "3290:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "3290:22:7"
														},
														{
															"nativeSrc": "3321:25:7",
															"nodeType": "YulAssignment",
															"src": "3321:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3332:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3332:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3343:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3343:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3328:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3328:3:7"
																},
																"nativeSrc": "3328:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3328:18:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:7"
																}
															]
														},
														{
															"nativeSrc": "3355:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3355:20:7",
															"value": {
																"name": "value0",
																"nativeSrc": "3369:6:7",
																"nodeType": "YulIdentifier",
																"src": "3369:6:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3359:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3359:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3384:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3384:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3393:1:7",
																"nodeType": "YulLiteral",
																"src": "3393:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "3388:1:7",
																	"nodeType": "YulTypedName",
																	"src": "3388:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3452:159:7",
																"nodeType": "YulBlock",
																"src": "3452:159:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3473:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3473:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "3501:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3501:6:7"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_address",
																								"nativeSrc": "3482:18:7",
																								"nodeType": "YulIdentifier",
																								"src": "3482:18:7"
																							},
																							"nativeSrc": "3482:26:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3482:26:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3518:3:7",
																											"nodeType": "YulLiteral",
																											"src": "3518:3:7",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3523:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3523:1:7",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3514:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3514:3:7"
																									},
																									"nativeSrc": "3514:11:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3514:11:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3527:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3527:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3510:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3510:3:7"
																							},
																							"nativeSrc": "3510:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3510:19:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3478:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3478:3:7"
																					},
																					"nativeSrc": "3478:52:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3478:52:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3466:6:7"
																			},
																			"nativeSrc": "3466:65:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3466:65:7"
																		},
																		"nativeSrc": "3466:65:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3466:65:7"
																	},
																	{
																		"nativeSrc": "3544:19:7",
																		"nodeType": "YulAssignment",
																		"src": "3544:19:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3555:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3555:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3560:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3551:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3551:3:7"
																			},
																			"nativeSrc": "3551:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3551:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3544:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3544:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3576:25:7",
																		"nodeType": "YulAssignment",
																		"src": "3576:25:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3590:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3590:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3598:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3598:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3586:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3586:3:7"
																			},
																			"nativeSrc": "3586:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3586:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3576:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3576:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3414:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3414:1:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3417:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3417:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3411:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3411:2:7"
																},
																"nativeSrc": "3411:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3411:13:7"
															},
															"nativeSrc": "3403:208:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3425:18:7",
																"nodeType": "YulBlock",
																"src": "3425:18:7",
																"statements": [
																	{
																		"nativeSrc": "3427:14:7",
																		"nodeType": "YulAssignment",
																		"src": "3427:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3436:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "3436:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3439:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3439:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3432:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3432:3:7"
																			},
																			"nativeSrc": "3432:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3432:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3427:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "3427:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3407:3:7",
																"nodeType": "YulBlock",
																"src": "3407:3:7",
																"statements": []
															},
															"src": "3403:208:7"
														},
														{
															"nativeSrc": "3620:11:7",
															"nodeType": "YulAssignment",
															"src": "3620:11:7",
															"value": {
																"name": "pos",
																"nativeSrc": "3628:3:7",
																"nodeType": "YulIdentifier",
																"src": "3628:3:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3620:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3620:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3022:615:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3144:9:7",
														"nodeType": "YulTypedName",
														"src": "3144:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3155:6:7",
														"nodeType": "YulTypedName",
														"src": "3155:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3163:6:7",
														"nodeType": "YulTypedName",
														"src": "3163:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3174:4:7",
														"nodeType": "YulTypedName",
														"src": "3174:4:7",
														"type": ""
													}
												],
												"src": "3022:615:7"
											},
											{
												"body": {
													"nativeSrc": "3723:103:7",
													"nodeType": "YulBlock",
													"src": "3723:103:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3769:16:7",
																"nodeType": "YulBlock",
																"src": "3769:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3778:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3778:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3781:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3781:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3771:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:6:7"
																			},
																			"nativeSrc": "3771:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3771:12:7"
																		},
																		"nativeSrc": "3771:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3771:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3744:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3744:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3753:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3753:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3740:3:7"
																		},
																		"nativeSrc": "3740:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3765:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3765:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:7"
																},
																"nativeSrc": "3736:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3736:32:7"
															},
															"nativeSrc": "3733:52:7",
															"nodeType": "YulIf",
															"src": "3733:52:7"
														},
														{
															"nativeSrc": "3794:26:7",
															"nodeType": "YulAssignment",
															"src": "3794:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3810:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3804:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:5:7"
																},
																"nativeSrc": "3804:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3794:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3794:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3642:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3689:9:7",
														"nodeType": "YulTypedName",
														"src": "3689:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3700:7:7",
														"nodeType": "YulTypedName",
														"src": "3700:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3712:6:7",
														"nodeType": "YulTypedName",
														"src": "3712:6:7",
														"type": ""
													}
												],
												"src": "3642:184:7"
											},
											{
												"body": {
													"nativeSrc": "3878:185:7",
													"nodeType": "YulBlock",
													"src": "3878:185:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3917:111:7",
																"nodeType": "YulBlock",
																"src": "3917:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3938:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3938:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3945:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3945:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3950:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3950:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3941:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3941:3:7"
																					},
																					"nativeSrc": "3941:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3941:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3931:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3931:6:7"
																			},
																			"nativeSrc": "3931:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3931:31:7"
																		},
																		"nativeSrc": "3931:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3931:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3982:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3985:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3985:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3975:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3975:6:7"
																			},
																			"nativeSrc": "3975:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3975:15:7"
																		},
																		"nativeSrc": "3975:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3975:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4010:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4010:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4013:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4013:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4003:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4003:6:7"
																			},
																			"nativeSrc": "4003:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4003:15:7"
																		},
																		"nativeSrc": "4003:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4003:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3894:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3894:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3905:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:7"
																		},
																		"nativeSrc": "3901:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3891:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3891:2:7"
																},
																"nativeSrc": "3891:17:7",
																"nodeType": "YulFunctionCall",
																"src": "3891:17:7"
															},
															"nativeSrc": "3888:140:7",
															"nodeType": "YulIf",
															"src": "3888:140:7"
														},
														{
															"nativeSrc": "4037:20:7",
															"nodeType": "YulAssignment",
															"src": "4037:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4048:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4048:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4055:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4044:3:7"
																},
																"nativeSrc": "4044:13:7",
																"nodeType": "YulFunctionCall",
																"src": "4044:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4037:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3831:232:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3860:5:7",
														"nodeType": "YulTypedName",
														"src": "3860:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3870:3:7",
														"nodeType": "YulTypedName",
														"src": "3870:3:7",
														"type": ""
													}
												],
												"src": "3831:232:7"
											},
											{
												"body": {
													"nativeSrc": "4100:95:7",
													"nodeType": "YulBlock",
													"src": "4100:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4117:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4117:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4124:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4124:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4129:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4129:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4120:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:7"
																		},
																		"nativeSrc": "4120:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4110:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4110:6:7"
																},
																"nativeSrc": "4110:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4110:31:7"
															},
															"nativeSrc": "4110:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4110:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4157:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4160:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4160:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4150:6:7"
																},
																"nativeSrc": "4150:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4150:15:7"
															},
															"nativeSrc": "4150:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4150:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4181:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4181:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4184:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4184:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4174:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4174:6:7"
																},
																"nativeSrc": "4174:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4174:15:7"
															},
															"nativeSrc": "4174:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4174:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4068:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4068:127:7"
											},
											{
												"body": {
													"nativeSrc": "4329:145:7",
													"nodeType": "YulBlock",
													"src": "4329:145:7",
													"statements": [
														{
															"nativeSrc": "4339:26:7",
															"nodeType": "YulAssignment",
															"src": "4339:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4351:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4362:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4362:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4347:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:7"
																},
																"nativeSrc": "4347:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4347:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4339:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4381:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4381:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4396:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4396:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4412:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4412:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4417:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4417:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4408:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4408:3:7"
																						},
																						"nativeSrc": "4408:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4408:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4421:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4421:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4404:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4404:3:7"
																				},
																				"nativeSrc": "4404:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4404:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4392:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4392:3:7"
																		},
																		"nativeSrc": "4392:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4392:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4374:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4374:6:7"
																},
																"nativeSrc": "4374:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4374:51:7"
															},
															"nativeSrc": "4374:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4374:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4445:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4456:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4441:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4441:3:7"
																		},
																		"nativeSrc": "4441:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4441:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4461:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4434:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4434:6:7"
																},
																"nativeSrc": "4434:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4434:34:7"
															},
															"nativeSrc": "4434:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4434:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4200:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:7",
														"nodeType": "YulTypedName",
														"src": "4290:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4301:6:7",
														"nodeType": "YulTypedName",
														"src": "4301:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4309:6:7",
														"nodeType": "YulTypedName",
														"src": "4309:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4320:4:7",
														"nodeType": "YulTypedName",
														"src": "4320:4:7",
														"type": ""
													}
												],
												"src": "4200:274:7"
											},
											{
												"body": {
													"nativeSrc": "4557:199:7",
													"nodeType": "YulBlock",
													"src": "4557:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4603:16:7",
																"nodeType": "YulBlock",
																"src": "4603:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4612:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4612:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4615:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4615:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4605:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4605:6:7"
																			},
																			"nativeSrc": "4605:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4605:12:7"
																		},
																		"nativeSrc": "4605:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4605:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4578:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4578:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4587:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4587:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:7"
																		},
																		"nativeSrc": "4574:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4574:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4599:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4599:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4570:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:7"
																},
																"nativeSrc": "4570:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4570:32:7"
															},
															"nativeSrc": "4567:52:7",
															"nodeType": "YulIf",
															"src": "4567:52:7"
														},
														{
															"nativeSrc": "4628:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4628:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4647:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4647:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4641:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4641:5:7"
																},
																"nativeSrc": "4641:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4641:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4632:5:7",
																	"nodeType": "YulTypedName",
																	"src": "4632:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4710:16:7",
																"nodeType": "YulBlock",
																"src": "4710:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4719:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4719:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4722:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4722:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4712:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4712:6:7"
																			},
																			"nativeSrc": "4712:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4712:12:7"
																		},
																		"nativeSrc": "4712:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4712:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4679:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4679:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4700:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4700:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4693:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4693:6:7"
																						},
																						"nativeSrc": "4693:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4693:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4686:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4686:6:7"
																				},
																				"nativeSrc": "4686:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4686:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4676:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4676:2:7"
																		},
																		"nativeSrc": "4676:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4676:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4669:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:7"
																},
																"nativeSrc": "4669:40:7",
																"nodeType": "YulFunctionCall",
																"src": "4669:40:7"
															},
															"nativeSrc": "4666:60:7",
															"nodeType": "YulIf",
															"src": "4666:60:7"
														},
														{
															"nativeSrc": "4735:15:7",
															"nodeType": "YulAssignment",
															"src": "4735:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "4745:5:7",
																"nodeType": "YulIdentifier",
																"src": "4745:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4735:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4479:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4523:9:7",
														"nodeType": "YulTypedName",
														"src": "4523:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4534:7:7",
														"nodeType": "YulTypedName",
														"src": "4534:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4546:6:7",
														"nodeType": "YulTypedName",
														"src": "4546:6:7",
														"type": ""
													}
												],
												"src": "4479:277:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 64)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            mstore(pos, and(abi_decode_address(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"482": [
									{
										"length": 32,
										"start": 463
									},
									{
										"length": 32,
										"start": 2384
									},
									{
										"length": 32,
										"start": 3522
									},
									{
										"length": 32,
										"start": 3676
									},
									{
										"length": 32,
										"start": 4458
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80638da5cb5b116100f9578063c25a02ec11610097578063e082fe2a11610071578063e082fe2a1461037c578063f22069df14610384578063f2fde38b1461038c578063fc05542a1461039f57600080fd5b8063c25a02ec14610358578063d335993a14610361578063d90843261461037457600080fd5b8063a0858343116100d3578063a085834314610309578063a34db0a01461031c578063a6a098111461033c578063b07029131461034557600080fd5b80638da5cb5b146102d257806398b48493146102e35780639a0474e8146102f657600080fd5b80636fa1c59d11610166578063715018a611610140578063715018a61461028c578063741ae614146102945780637a0abf081461029c57806385737020146102a557600080fd5b80636fa1c59d146102505780636ff65c20146102585780637069243c1461028457600080fd5b80631318fbf1146101ae5780631fccf672146101ca5780633960fc6614610209578063528780cc146102135780635c975abb1461022657806364bb632f1461023d575b600080fd5b6101b760075481565b6040519081526020015b60405180910390f35b6101f17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c1565b6102116103cb565b005b6102116102213660046112a3565b6103dd565b60025460ff165b60405190151581526020016101c1565b61021161024b3660046112a3565b61044f565b6006546101b7565b61022d6102663660046112d8565b6001600160a01b031660009081526004602052604090205460ff1690565b6005546101b7565b6102116104b8565b6007546101b7565b6101b760055481565b61022d6102b33660046112d8565b6001600160a01b031660009081526003602052604090205460ff161590565b6000546001600160a01b03166101f1565b6102116102f13660046112fa565b6104ca565b6102116103043660046112fa565b61069b565b6102116103173660046112d8565b610866565b61032f61032a3660046112fa565b610a26565b6040516101c19190611371565b6101b760065481565b6102116103533660046112d8565b610bd4565b6101b760085481565b61021161036f3660046112d8565b610cb2565b6008546101b7565b610211610d82565b610211610d92565b61021161039a3660046112d8565b610f8b565b61022d6103ad3660046112d8565b6001600160a01b031660009081526003602052604090205460ff1690565b6103d3610fc6565b6103db610ff3565b565b6103e5610fc6565b80600003610406576040516336c5eec760e21b815260040160405180910390fd5b6006805490829055604080518281526020810184905283917f2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef91015b60405180910390a1505050565b610457610fc6565b8060000361047857604051630d428a0160e41b815260040160405180910390fd5b6005805490829055604080518281526020810184905283917ff0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c949101610442565b6104c0610fc6565b6103db6000611045565b6104d2610fc6565b8060008190036104f557604051634ec4810560e11b815260040160405180910390fd5b60005b818110156105f6576000848483818110610514576105146113bd565b905060200201602081019061052991906112d8565b6001600160a01b0316036105505760405163d92e233d60e01b815260040160405180910390fd5b60036000858584818110610566576105666113bd565b905060200201602081019061057b91906112d8565b6001600160a01b0316815260208101919091526040016000205460ff16156105ee578383828181106105af576105af6113bd565b90506020020160208101906105c491906112d8565b604051633746725b60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b6001016104f8565b5060005b818110156106695760016003600086868581811061061a5761061a6113bd565b905060200201602081019061062f91906112d8565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600880546001908101909155016105fa565b507f9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc83836040516104429291906113d3565b6106a3610fc6565b8060008190036106c657604051634ec4810560e11b815260040160405180910390fd5b60005b818110156107c15760008484838181106106e5576106e56113bd565b90506020020160208101906106fa91906112d8565b6001600160a01b0316036107215760405163d92e233d60e01b815260040160405180910390fd5b60036000858584818110610737576107376113bd565b905060200201602081019061074c91906112d8565b6001600160a01b0316815260208101919091526040016000205460ff166107b95783838281811061077f5761077f6113bd565b905060200201602081019061079491906112d8565b60405163de55cc3360e01b81526001600160a01b0390911660048201526024016105e5565b6001016106c9565b5060005b81811015610834576000600360008686858181106107e5576107e56113bd565b90506020020160208101906107fa91906112d8565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600880546000190190556001016107c5565b507fd68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b83836040516104429291906113d3565b61086e611095565b6108766110b9565b80336001600160a01b038216146108ab576040516344b5040560e01b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038216600090815260036020526040902054829060ff166108f15760405163de55cc3360e01b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038316600090815260046020526040902054839060ff1615610938576040516301ee5f6f60e31b81526001600160a01b03821660048201526024016105e5565b6005546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561099f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c3919061141e565b10156109e25760405163786e0a9960e01b815260040160405180910390fd5b60065460075403610a05576040516227007f60ea1b815260040160405180910390fd5b610a0e846110e3565b610a178461113d565b505050610a2360018055565b50565b6060816000819003610a4b57604051634ec4810560e11b815260040160405180910390fd5b6000805b82811015610aba5760036000878784818110610a6d57610a6d6113bd565b9050602002016020810190610a8291906112d8565b6001600160a01b0316815260208101919091526040016000205460ff1615610ab25781610aae81611437565b9250505b600101610a4f565b5060008167ffffffffffffffff811115610ad657610ad661145e565b604051908082528060200260200182016040528015610aff578160200160208202803683370190505b5090506000805b84811015610bc85760036000898984818110610b2457610b246113bd565b9050602002016020810190610b3991906112d8565b6001600160a01b0316815260208101919091526040016000205460ff1615610bc057878782818110610b6d57610b6d6113bd565b9050602002016020810190610b8291906112d8565b8383610b8d81611437565b945081518110610b9f57610b9f6113bd565b60200260200101906001600160a01b031690816001600160a01b0316815250505b600101610b06565b50909695505050505050565b610bdc610fc6565b6001600160a01b038116600090815260036020526040902054819060ff1615610c2357604051633746725b60e11b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038216610c4a5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038216600081815260036020908152604091829020805460ff1916600190811790915560088054909101905590519182527f1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d2791015b60405180910390a15050565b610cba610fc6565b6001600160a01b038116600090815260036020526040902054819060ff16610d005760405163de55cc3360e01b81526001600160a01b03821660048201526024016105e5565b6001600160a01b038216610d275760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038216600081815260036020908152604091829020805460ff191690556008805460001901905590519182527fa354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e29101610ca6565b610d8a610fc6565b6103db611243565b610d9a610fc6565b610da2611095565b610daa6110b9565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e35919061141e565b905080600003610e58576040516316e3ff0560e21b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610e9b6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c9190611474565b905080610f2c576040516327fcd9d160e01b815260040160405180910390fd5b7f2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097610f5f6000546001600160a01b031690565b604080516001600160a01b039092168252602082018590520160405180910390a150506103db60018055565b610f93610fc6565b6001600160a01b038116610fbd57604051631e4fbdf760e01b8152600060048201526024016105e5565b610a2381611045565b6000546001600160a01b031633146103db5760405163118cdaa760e01b81523360048201526024016105e5565b610ffb611280565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460ff16156103db5760405163d93c066560e01b815260040160405180910390fd5b6002600154036110dc57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527f654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943910160405180910390a150565b60055460405163a9059cbb60e01b81526001600160a01b03838116600483015260248201929092526000917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d79190611474565b9050806111f75760405163078ecf4160e41b815260040160405180910390fd5b600780546001019055600554604080516001600160a01b038516815260208101929092527f8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e9101610ca6565b61124b611095565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110283390565b60025460ff166103db57604051638dfc202b60e01b815260040160405180910390fd5b6000602082840312156112b557600080fd5b5035919050565b80356001600160a01b03811681146112d357600080fd5b919050565b6000602082840312156112ea57600080fd5b6112f3826112bc565b9392505050565b6000806020838503121561130d57600080fd5b823567ffffffffffffffff81111561132457600080fd5b8301601f8101851361133557600080fd5b803567ffffffffffffffff81111561134c57600080fd5b8560208260051b840101111561136157600080fd5b6020919091019590945092505050565b602080825282518282018190526000918401906040840190835b818110156113b25783516001600160a01b031683526020938401939092019160010161138b565b509095945050505050565b634e487b7160e01b600052603260045260246000fd5b6020808252810182905260008360408301825b85811015611414576001600160a01b036113ff846112bc565b168252602092830192909101906001016113e6565b5095945050505050565b60006020828403121561143057600080fd5b5051919050565b60006001820161145757634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561148657600080fd5b815180151581146112f357600080fdfea26469706673582212201eb983fe5d593e244dab6c5fe7b335155cf1f4278d5ff01f8476f9fc84a4cfa464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC25A02EC GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE082FE2A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE082FE2A EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xF22069DF EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xFC05542A EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC25A02EC EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD335993A EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xD9084326 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0858343 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xA0858343 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA34DB0A0 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xA6A09811 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xB0702913 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x98B48493 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x9A0474E8 EQ PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FA1C59D GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x741AE614 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x7A0ABF08 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x85737020 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FA1C59D EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6FF65C20 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x7069243C EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1318FBF1 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1FCCF672 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x3960FC66 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x528780CC EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x64BB632F EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x12A3 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22D PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x211 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH2 0x211 PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH2 0x32F PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x12FA JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x1B7 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B7 JUMP JUMPDEST PUSH2 0x211 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x211 PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x211 PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0xF8B JUMP JUMPDEST PUSH2 0x22D PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0xFF3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x406 JUMPI PUSH1 0x40 MLOAD PUSH4 0x36C5EEC7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0x2E31E8893A04CE5258044D342D7658948A6AC9710D97E32462AB75F131AE11EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x457 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD428A01 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xF0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94 SWAP2 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x4C0 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3DB PUSH1 0x0 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x4F5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x514 JUMPI PUSH2 0x514 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x566 JUMPI PUSH2 0x566 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5EE JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x5AF JUMPI PUSH2 0x5AF PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5C4 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x669 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x61A PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP2 SSTORE ADD PUSH2 0x5FA JUMP JUMPDEST POP PUSH32 0x9A9F2A64A3B0B4774DA60129AA707715E049CB95062F7ACAAFFC07DDC244C1CC DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x442 SWAP3 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x6A3 PUSH2 0xFC6 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x6C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x6E5 JUMPI PUSH2 0x6E5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x737 JUMPI PUSH2 0x737 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7B9 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6C9 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x7E5 JUMPI PUSH2 0x7E5 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7FA SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x7C5 JUMP JUMPDEST POP PUSH32 0xD68B41369D54FACA53E699320360840DB6E0E2E175D3974EB304FD18713D916B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x442 SWAP3 SWAP2 SWAP1 PUSH2 0x13D3 JUMP JUMPDEST PUSH2 0x86E PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x876 PUSH2 0x10B9 JUMP JUMPDEST DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x44B50405 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND PUSH2 0x8F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x938 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1EE5F6F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0x141E JUMP JUMPDEST LT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD SUB PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x27007F PUSH1 0xEA SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0E DUP5 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0xA17 DUP5 PUSH2 0x113D JUMP JUMPDEST POP POP POP PUSH2 0xA23 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH4 0x4EC48105 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x3 PUSH1 0x0 DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0xA6D JUMPI PUSH2 0xA6D PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA82 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAB2 JUMPI DUP2 PUSH2 0xAAE DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA4F JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD6 JUMPI PUSH2 0xAD6 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAFF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xBC8 JUMPI PUSH1 0x3 PUSH1 0x0 DUP10 DUP10 DUP5 DUP2 DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBC0 JUMPI DUP8 DUP8 DUP3 DUP2 DUP2 LT PUSH2 0xB6D JUMPI PUSH2 0xB6D PUSH2 0x13BD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xB8D DUP2 PUSH2 0x1437 JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0xB9F JUMPI PUSH2 0xB9F PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB06 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBDC PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3746725B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x1AFDE38C60D2BE0D28D001619816D86C39CE78B350C9D94F23C095099B9C1D27 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xCBA PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDE55CC33 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD27 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD92E233D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xA354190DD7342316E40E5358C9F72037F2C677CDC057D3DEBBC4F1B62495E2E2 SWAP2 ADD PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0xD8A PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x3DB PUSH2 0x1243 JUMP JUMPDEST PUSH2 0xD9A PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0xDA2 PUSH2 0x1095 JUMP JUMPDEST PUSH2 0xDAA PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x141E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x16E3FF05 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xE9B PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0C SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH4 0x27FCD9D1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097 PUSH2 0xF5F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x3DB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xF93 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0xA23 DUP2 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0xFFB PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x1474 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x11F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x78ECF41 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E SWAP2 ADD PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x124B PUSH2 0x1095 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1028 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F3 DUP3 PUSH2 0x12BC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13B2 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x138B JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP4 PUSH1 0x40 DUP4 ADD DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1414 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x13FF DUP5 PUSH2 0x12BC JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13E6 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1457 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12F3 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xB9 DUP4 INVALID TSTORE MSIZE RETURNDATACOPY 0x24 0x4D 0xAB PUSH13 0x5FE7B335155CF1F4278D5FF01F DUP5 PUSH23 0xF9FC84A4CFA464736F6C634300081C0033000000000000 ",
							"sourceMap": "330:11982:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;675:43;;;;;;;;;160:25:7;;;148:2;133:18;675:43:6;;;;;;;;396:36;;;;;;;;-1:-1:-1;;;;;382:32:7;;;364:51;;352:2;337:18;396:36:6;196:225:7;10111:71:6;;;:::i;:::-;;9421:611;;;;;;:::i;:::-;;:::i;1850:84:4:-;1920:7;;;;1850:84;;;776:14:7;;769:22;751:41;;739:2;724:18;1850:84:4;611:187:7;8779:636:6;;;;;;:::i;:::-;;:::i;12018:123::-;12108:26;;12018:123;;11168:189;;;;;;:::i;:::-;-1:-1:-1;;;;;11302:48:6;11279:4;11302:48;;;:33;:48;;;;;;;;;11168:189;11718:161;11841:31;;11718:161;;2293:101:0;;;:::i;11885:127:6:-;11977:28;;11885:127;;576:46;;;;;;11540:172;;;;;;:::i;:::-;-1:-1:-1;;;;;11665:40:6;11641:4;11665:40;;;:25;:40;;;;;;;;11664:41;;11540:172;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;4985:949:6;;;;;;:::i;:::-;;:::i;5940:968::-;;;;;;:::i;:::-;;:::i;6914:655::-;;;;;;:::i;:::-;;:::i;10188:974::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;628:41::-;;;;;;4138:406;;;;;;:::i;:::-;;:::i;724:47::-;;;;;;4550:429;;;;;;:::i;:::-;;:::i;12147:163::-;12271:32;;12147:163;;10038:67;;;:::i;8325:448::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;11363:171:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;11487:40:6;11464:4;11487:40;;;:25;:40;;;;;;;;;11363:171;10111:71;1531:13:0;:11;:13::i;:::-;10165:10:6::1;:8;:10::i;:::-;10111:71::o:0;9421:611::-;1531:13:0;:11;:13::i;:::-;9550:30:6::1;9584:1;9550:35:::0;9546:108:::1;;9608:35;;-1:-1:-1::0;;;9608:35:6::1;;;;;;;;;;;9546:108;9704:26;::::0;;9822:58;;;;9896:129:::1;::::0;;2811:25:7;;;2867:2;2852:18;;2845:34;;;9822:58:6;;9896:129:::1;::::0;2784:18:7;9896:129:6::1;;;;;;;;9536:496;;9421:611:::0;:::o;8779:636::-;1531:13:0;:11;:13::i;:::-;8913:35:6::1;8952:1;8913:40:::0;8909:104:::1;;8976:26;;-1:-1:-1::0;;;8976:26:6::1;;;;;;;;;;;8909:104;9067:31;::::0;;9199:68;;;;9283:125:::1;::::0;;2811:25:7;;;2867:2;2852:18;;2845:34;;;9199:68:6;;9283:125:::1;::::0;2784:18:7;9283:125:6::1;2637:248:7::0;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;4985:949:6:-:0;1531:13:0;:11;:13::i;:::-;5121:15:6;5104:14:::1;5157:11:::0;;;5153:69:::1;;5191:20;;-1:-1:-1::0;;;5191:20:6::1;;;;;;;;;;;5153:69;5237:9;5232:361;5256:6;5252:1;:10;5232:361;;;5314:1;5284:15:::0;;5300:1;5284:18;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5284:32:6::1;::::0;5280:91:::1;;5343:13;;-1:-1:-1::0;;;5343:13:6::1;;;;;;;;;;;5280:91;5388:25;:45;5414:15;;5430:1;5414:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5388:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;5388:45:6;;::::1;;5384:140;;;5490:15;;5506:1;5490:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5460:49;::::0;-1:-1:-1;;;5460:49:6;;-1:-1:-1;;;;;382:32:7;;;5460:49:6::1;::::0;::::1;364:51:7::0;337:18;;5460:49:6::1;;;;;;;;5384:140;5565:3;;5232:361;;;;5608:9;5603:260;5627:6;5623:1;:10;5603:260;;;5699:4;5651:25;:45;5677:15;;5693:1;5677:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5651:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;5651:45:6;:52;;-1:-1:-1;;5651:52:6::1;::::0;::::1;;::::0;;;::::1;::::0;;5747:32:::1;5745:34:::0;;-1:-1:-1;5745:34:6;;::::1;::::0;;;5835:3:::1;5603:260;;;;5878:49;5911:15;;5878:49;;;;;;;:::i;5940:968::-:0;1531:13:0;:11;:13::i;:::-;6087:15:6;6070:14:::1;6123:11:::0;;;6119:69:::1;;6157:20;;-1:-1:-1::0;;;6157:20:6::1;;;;;;;;;;;6119:69;6203:9;6198:358;6222:6;6218:1;:10;6198:358;;;6280:1;6250:15:::0;;6266:1;6250:18;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6250:32:6::1;::::0;6246:91:::1;;6309:13;;-1:-1:-1::0;;;6309:13:6::1;;;;;;;;;;;6246:91;6355:25;:45;6381:15;;6397:1;6381:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6355:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;6355:45:6;;::::1;;6350:137;;6453:15;;6469:1;6453:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6427:45;::::0;-1:-1:-1;;;6427:45:6;;-1:-1:-1;;;;;382:32:7;;;6427:45:6::1;::::0;::::1;364:51:7::0;337:18;;6427:45:6::1;196:225:7::0;6350:137:6::1;6528:3;;6198:358;;;;6571:9;6566:261;6590:6;6586:1;:10;6566:261;;;6662:5;6614:25;:45;6640:15;;6656:1;6640:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6614:45:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;6614:45:6;:53;;-1:-1:-1;;6614:53:6::1;::::0;::::1;;::::0;;;::::1;::::0;;6711:32:::1;6709:34:::0;;-1:-1:-1;;6709:34:6;;;-1:-1:-1;6799:3:6::1;6566:261;;;;6841:60;6885:15;;6841:60;;;;;;;:::i;6914:655::-:0;1474:19:4;:17;:19::i;:::-;2500:21:5::1;:19;:21::i;:::-;7076:13:6::0;3193:10:::2;-1:-1:-1::0;;;;;3193:27:6;::::2;;3189:105;;3243:40;::::0;-1:-1:-1;;;3243:40:6;;-1:-1:-1;;;;;382:32:7;;3243:40:6::2;::::0;::::2;364:51:7::0;337:18;;3243:40:6::2;196:225:7::0;3189:105:6::2;-1:-1:-1::0;;;;;2338:40:6;::::3;;::::0;;;:25:::3;:40;::::0;;;;;7122:13;;2338:40:::3;;2333:119;;2401:40;::::0;-1:-1:-1;;;2401:40:6;;-1:-1:-1;;;;;382:32:7;;2401:40:6::3;::::0;::::3;364:51:7::0;337:18;;2401:40:6::3;196:225:7::0;2333:119:6::3;-1:-1:-1::0;;;;;2963:59:6;::::4;;::::0;;;:33:::4;:59;::::0;;;;;7171:13;;2963:59:::4;;2959:149;;;3045:52;::::0;-1:-1:-1;;;3045:52:6;;-1:-1:-1;;;;;382:32:7;;3045:52:6::4;::::0;::::4;364:51:7::0;337:18;;3045:52:6::4;196:225:7::0;2959:149:6::4;7236:31:::5;::::0;7204:29:::5;::::0;-1:-1:-1;;;7204:29:6;;7227:4:::5;7204:29;::::0;::::5;364:51:7::0;7204:4:6::5;-1:-1:-1::0;;;;;7204:14:6::5;::::0;::::5;::::0;337:18:7;;7204:29:6::5;;;;;;;;;;;;;;;;;::::0;::::5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;7200:130;;;7290:29;;-1:-1:-1::0;;;7290:29:6::5;;;;;;;;;;;7200:130;7375:26;;7343:28;;:58:::0;7339:121:::5;;7424:25;;-1:-1:-1::0;;;7424:25:6::5;;;;;;;;;;;7339:121;7469:51;7506:13;7469:36;:51::i;:::-;7530:32;7548:13;7530:17;:32::i;:::-;2461:1:::4;3303::::3;2531::5::2;2542:20:::1;1857:1:::0;3068:21;;2888:208;2542:20:::1;6914:655:6::0;:::o;10188:974::-;10321:16;10366:19;10349:14;10406:11;;;10402:69;;10440:20;;-1:-1:-1;;;10440:20:6;;;;;;;;;;;10402:69;10481:24;10524:9;10519:223;10543:6;10539:1;:10;10519:223;;;10571:25;:49;10597:19;;10617:1;10597:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10571:49:6;;;;;;;;;;;;-1:-1:-1;10571:49:6;;;;10567:106;;;10640:18;;;;:::i;:::-;;;;10567:106;10714:3;;10519:223;;;;10752:37;10806:16;10792:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10792:31:6;;10752:71;;10833:13;10865:9;10860:259;10884:6;10880:1;:10;10860:259;;;10912:25;:49;10938:19;;10958:1;10938:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10912:49:6;;;;;;;;;;;;-1:-1:-1;10912:49:6;;;;10908:142;;;11013:19;;11033:1;11013:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10981:20;11002:7;;;;:::i;:::-;;;10981:29;;;;;;;;:::i;:::-;;;;;;:54;-1:-1:-1;;;;;10981:54:6;;;-1:-1:-1;;;;;10981:54:6;;;;;10908:142;11091:3;;10860:259;;;-1:-1:-1;11135:20:6;;10188:974;-1:-1:-1;;;;;;10188:974:6:o;4138:406::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2740:40:6;::::1;;::::0;;;:25:::1;:40;::::0;;;;;4245:13;;2740:40:::1;;2736:122;;;2803:44;::::0;-1:-1:-1;;;2803:44:6;;-1:-1:-1;;;;;382:32:7;;2803:44:6::1;::::0;::::1;364:51:7::0;337:18;;2803:44:6::1;196:225:7::0;2736:122:6::1;-1:-1:-1::0;;;;;4274:27:6;::::2;4270:78;;4324:13;;-1:-1:-1::0;;;4324:13:6::2;;;;;;;;;;;4270:78;-1:-1:-1::0;;;;;4357:40:6;::::2;;::::0;;;:25:::2;:40;::::0;;;;;;;;:47;;-1:-1:-1;;4357:47:6::2;4400:4;4357:47:::0;;::::2;::::0;;;4440:32:::2;4438:34:::0;;;;::::2;::::0;;4497:40;;364:51:7;;;4497:40:6::2;::::0;337:18:7;4497:40:6::2;;;;;;;;1554:1:0::1;4138:406:6::0;:::o;4550:429::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2539:40:6;::::1;;::::0;;;:25:::1;:40;::::0;;;;;4668:13;;2539:40:::1;;2534:119;;2602:40;::::0;-1:-1:-1;;;2602:40:6;;-1:-1:-1;;;;;382:32:7;;2602:40:6::1;::::0;::::1;364:51:7::0;337:18;;2602:40:6::1;196:225:7::0;2534:119:6::1;-1:-1:-1::0;;;;;4697:27:6;::::2;4693:78;;4747:13;;-1:-1:-1::0;;;4747:13:6::2;;;;;;;;;;;4693:78;-1:-1:-1::0;;;;;4780:40:6;::::2;4823:5;4780:40:::0;;;:25:::2;:40;::::0;;;;;;;;:48;;-1:-1:-1;;4780:48:6::2;::::0;;4864:32:::2;4862:34:::0;;-1:-1:-1;;4862:34:6;;;4921:51;;364::7;;;4921::6::2;::::0;337:18:7;4921:51:6::2;196:225:7::0;10038:67:6;1531:13:0;:11;:13::i;:::-;10090:8:6::1;:6;:8::i;8325:448::-:0;1531:13:0;:11;:13::i;:::-;1474:19:4::1;:17;:19::i;:::-;2500:21:5::2;:19;:21::i;:::-;8481:29:6::3;::::0;-1:-1:-1;;;8481:29:6;;8504:4:::3;8481:29;::::0;::::3;364:51:7::0;8463:15:6::3;::::0;8481:4:::3;-1:-1:-1::0;;;;;8481:14:6::3;::::0;::::3;::::0;337:18:7;;8481:29:6::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8463:47;;8524:7;8535:1;8524:12:::0;8520:65:::3;;8559:15;;-1:-1:-1::0;;;8559:15:6::3;;;;;;;;;;;8520:65;8594:12;8609:4;-1:-1:-1::0;;;;;8609:13:6::3;;8623:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;8623:7:6::3;8609:31;::::0;-1:-1:-1;;;;;;8609:31:6::3;::::0;;;;;;-1:-1:-1;;;;;4392:32:7;;;8609:31:6::3;::::0;::::3;4374:51:7::0;4441:18;;;4434:34;;;4347:18;;8609:31:6::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8594:46;;8655:7;8650:64;;8685:18;;-1:-1:-1::0;;;8685:18:6::3;;;;;;;;;;;8650:64;8728:38;8749:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;8749:7:6::3;8728:38;::::0;;-1:-1:-1;;;;;4392:32:7;;;4374:51;;4456:2;4441:18;;4434:34;;;4347:18;8728:38:6::3;;;;;;;8453:320;;2542:20:5::2;1857:1:::0;3068:21;;2888:208;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;364:51:7::0;337:18;;2672:31:0::1;196:225:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;364:51:7;337:18;;1901:40:0;196:225:7;2710:117:4;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:4::1;::::0;;2798:22:::1;735:10:3::0;2807:12:4::1;2798:22;::::0;-1:-1:-1;;;;;382:32:7;;;364:51;;352:2;337:18;2798:22:4::1;;;;;;;2710:117::o:0;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2002:128:4:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:4;;;;;;;;;;;2575:307:5;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:5;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;7575:253:6:-;-1:-1:-1;;;;;7687:59:6;;;;;;:33;:59;;;;;;;;;:66;;-1:-1:-1;;7687:66:6;7749:4;7687:66;;;7768:53;;364:51:7;;;7768:53:6;;337:18:7;7768:53:6;;;;;;;7575:253;:::o;7834:485::-;7993:31;;7928:106;;-1:-1:-1;;;7928:106:6;;-1:-1:-1;;;;;4392:32:7;;;7928:106:6;;;4374:51:7;4441:18;;;4434:34;;;;7913:12:6;;7928:4;:13;;;;4347:18:7;;7928:106:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7913:121;;8049:7;8044:68;;8079:22;;-1:-1:-1;;;8079:22:6;;;;;;;;;;;8044:68;8147:28;8145:30;;;;;;8271:31;;8200:112;;;-1:-1:-1;;;;;4392:32:7;;4374:51;;4456:2;4441:18;;4434:34;;;;8200:112:6;;4347:18:7;8200:112:6;4200:274:7;2463:115:4;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:4::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:3::0;;656:96;2202:126:4;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:4;;;;;;;;;;;426:180:7;485:6;538:2;526:9;517:7;513:23;509:32;506:52;;;554:1;551;544:12;506:52;-1:-1:-1;577:23:7;;426:180;-1:-1:-1;426:180:7:o;803:173::-;871:20;;-1:-1:-1;;;;;920:31:7;;910:42;;900:70;;966:1;963;956:12;900:70;803:173;;;:::o;981:186::-;1040:6;1093:2;1081:9;1072:7;1068:23;1064:32;1061:52;;;1109:1;1106;1099:12;1061:52;1132:29;1151:9;1132:29;:::i;:::-;1122:39;981:186;-1:-1:-1;;;981:186:7:o;1380:610::-;1466:6;1474;1527:2;1515:9;1506:7;1502:23;1498:32;1495:52;;;1543:1;1540;1533:12;1495:52;1583:9;1570:23;1616:18;1608:6;1605:30;1602:50;;;1648:1;1645;1638:12;1602:50;1671:22;;1724:4;1716:13;;1712:27;-1:-1:-1;1702:55:7;;1753:1;1750;1743:12;1702:55;1793:2;1780:16;1819:18;1811:6;1808:30;1805:50;;;1851:1;1848;1841:12;1805:50;1904:7;1899:2;1889:6;1886:1;1882:14;1878:2;1874:23;1870:32;1867:45;1864:65;;;1925:1;1922;1915:12;1864:65;1956:2;1948:11;;;;;1978:6;;-1:-1:-1;1380:610:7;-1:-1:-1;;;1380:610:7:o;1995:637::-;2185:2;2197:21;;;2267:13;;2170:18;;;2289:22;;;2137:4;;2368:15;;;2342:2;2327:18;;;2137:4;2411:195;2425:6;2422:1;2419:13;2411:195;;;2490:13;;-1:-1:-1;;;;;2486:39:7;2474:52;;2555:2;2581:15;;;;2546:12;;;;2522:1;2440:9;2411:195;;;-1:-1:-1;2623:3:7;;1995:637;-1:-1:-1;;;;;1995:637:7:o;2890:127::-;2951:10;2946:3;2942:20;2939:1;2932:31;2982:4;2979:1;2972:15;3006:4;3003:1;2996:15;3022:615;3222:2;3234:21;;;3207:18;;3290:22;;;3174:4;3369:6;3343:2;3328:18;;3174:4;3403:208;3417:6;3414:1;3411:13;3403:208;;;-1:-1:-1;;;;;3482:26:7;3501:6;3482:26;:::i;:::-;3478:52;3466:65;;3560:2;3586:15;;;;3551:12;;;;3439:1;3432:9;3403:208;;;-1:-1:-1;3628:3:7;3022:615;-1:-1:-1;;;;;3022:615:7:o;3642:184::-;3712:6;3765:2;3753:9;3744:7;3740:23;3736:32;3733:52;;;3781:1;3778;3771:12;3733:52;-1:-1:-1;3804:16:7;;3642:184;-1:-1:-1;3642:184:7:o;3831:232::-;3870:3;3891:17;;;3888:140;;3950:10;3945:3;3941:20;3938:1;3931:31;3985:4;3982:1;3975:15;4013:4;4010:1;4003:15;3888:140;-1:-1:-1;4055:1:7;4044:13;;3831:232::o;4068:127::-;4129:10;4124:3;4120:20;4117:1;4110:31;4160:4;4157:1;4150:15;4184:4;4181:1;4174:15;4479:277;4546:6;4599:2;4587:9;4578:7;4574:23;4570:32;4567:52;;;4615:1;4612;4605:12;4567:52;4647:9;4641:16;4700:5;4693:13;4686:21;4679:5;4676:32;4666:60;;4722:1;4719;4712:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1064800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"blacklistMultipleWhitelistedUserAddresses(address[])": "infinite",
								"blacklistOneWhitelistedUserAddress(address)": "54389",
								"cUSD()": "infinite",
								"checkIfParticipantHasAlreadyClaimedReward(address)": "2617",
								"checkIfUserAddressIsBlacklisted(address)": "2663",
								"checkIfUserAddressIsWhitelisted(address)": "2659",
								"getNumberOfRewardedParticipants()": "2348",
								"getNumberOfWhitelistedUserAddresses()": "2370",
								"getRewardAmountPerParticipantInWei()": "2371",
								"getTargetNumberOfParticipants()": "2327",
								"getWhitelistedAddressesFromRegisteredAddresses(address[])": "infinite",
								"numberOfRewardedParticipants()": "2308",
								"numberOfWhitelistedUserAddresses()": "2329",
								"owner()": "2377",
								"pauseSurvey()": "infinite",
								"paused()": "2405",
								"processRewardClaimByParticipant(address)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardAmountPerParticipantInWei()": "2373",
								"targetNumberOfParticipants()": "2373",
								"transferOwnership(address)": "28421",
								"unpauseSurvey()": "infinite",
								"updateRewardAmountPerParticipant(uint256)": "28115",
								"updateTargetNumberOfParticipants(uint256)": "28060",
								"whitelistMultipleUserAddresses(address[])": "infinite",
								"whitelistOneUserAddress(address)": "54440",
								"withdrawAllRewardFundsToResearcher()": "infinite"
							},
							"internal": {
								"markParticipantAsHavingClaimedReward(address)": "infinite",
								"rewardParticipant(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3321,
									"end": 4132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3321,
									"end": 4132,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3540,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 861,
									"end": 912,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 834,
									"end": 852,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 852,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3569,
									"end": 3606,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3606,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3606,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3606,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3652,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 3569,
									"end": 3652,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3622,
									"end": 3652,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3622,
									"end": 3652,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3622,
									"end": 3652,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3569,
									"end": 3652,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 3569,
									"end": 3652,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3708,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3708,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3552,
									"end": 3708,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D92E233D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3684,
									"end": 3697,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3552,
									"end": 3708,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 3552,
									"end": 3708,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3721,
									"end": 3753,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3757,
									"end": 3758,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3721,
									"end": 3758,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3818,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3717,
									"end": 3818,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D428A01"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3781,
									"end": 3807,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3717,
									"end": 3818,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 3717,
									"end": 3818,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3832,
									"end": 3859,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3863,
									"end": 3864,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3832,
									"end": 3864,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3828,
									"end": 3933,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3828,
									"end": 3933,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "36C5EEC7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3887,
									"end": 3922,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3828,
									"end": 3933,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3828,
									"end": 3933,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3943,
									"end": 3982,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3943,
									"end": 3982,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3943,
									"end": 3982,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3993,
									"end": 4024,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3993,
									"end": 4059,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3993,
									"end": 4059,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3993,
									"end": 4059,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3993,
									"end": 4059,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4069,
									"end": 4095,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 4069,
									"end": 4125,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 710,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 512,
									"end": 514,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 497,
									"end": 515,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 491,
									"end": 516,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 606,
									"end": 608,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 591,
									"end": 609,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 585,
									"end": 610,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 491,
									"end": 516,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 585,
									"end": 610,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 655,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 700,
									"end": 702,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 685,
									"end": 703,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 655,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 655,
									"end": 704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 655,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 655,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 645,
									"end": 704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 645,
									"end": 704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 715,
									"end": 918,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 715,
									"end": 918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "482"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 12312,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201eb983fe5d593e244dab6c5fe7b335155cf1f4278d5ff01f8476f9fc84a4cfa464736f6c634300081c0033",
									".code": [
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "C25A02EC"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "E082FE2A"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "E082FE2A"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "F22069DF"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "FC05542A"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "C25A02EC"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "D335993A"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "D9084326"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "A0858343"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "A0858343"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "A34DB0A0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "A6A09811"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "B0702913"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "98B48493"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "9A0474E8"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "6FA1C59D"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "741AE614"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "7A0ABF08"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "85737020"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "6FA1C59D"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "6FF65C20"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "7069243C"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "1318FBF1"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "1FCCF672"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "3960FC66"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "528780CC"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "5C975ABB"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "64BB632F"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 330,
											"end": 12312,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 675,
											"end": 718,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 675,
											"end": 718,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 396,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 432,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 396,
											"end": 432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 432,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 432,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 432,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 396,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 10111,
											"end": 10182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 9421,
											"end": 10032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9421,
											"end": 10032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 776,
											"end": 790,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 776,
											"end": 790,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 769,
											"end": 791,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 751,
											"end": 792,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 751,
											"end": 792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 739,
											"end": 741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 724,
											"end": 742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 611,
											"end": 798,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 8779,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8779,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12018,
											"end": 12141,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 12018,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12108,
											"end": 12134,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12108,
											"end": 12134,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12018,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 12018,
											"end": 12141,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 11168,
											"end": 11357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11283,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11335,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11350,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11357,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11718,
											"end": 11879,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11718,
											"end": 11879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11841,
											"end": 11872,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11841,
											"end": 11872,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11718,
											"end": 11879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 11718,
											"end": 11879,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11885,
											"end": 12012,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 11885,
											"end": 12012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11977,
											"end": 12005,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11977,
											"end": 12005,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11885,
											"end": 12012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 11885,
											"end": 12012,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 622,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 576,
											"end": 622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 576,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 576,
											"end": 622,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 576,
											"end": 622,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 576,
											"end": 622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 576,
											"end": 622,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 11540,
											"end": 11712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11641,
											"end": 11645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11690,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11665,
											"end": 11705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11664,
											"end": 11705,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11664,
											"end": 11705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11540,
											"end": 11712,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4985,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5940,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5940,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6914,
											"end": 7569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6914,
											"end": 7569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 10188,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10188,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10188,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 628,
											"end": 669,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 628,
											"end": 669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 628,
											"end": 669,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 669,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 628,
											"end": 669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 628,
											"end": 669,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4138,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4138,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 724,
											"end": 771,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 724,
											"end": 771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 724,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 724,
											"end": 771,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 724,
											"end": 771,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 724,
											"end": 771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 724,
											"end": 771,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4550,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4550,
											"end": 4979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12147,
											"end": 12310,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 12147,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12271,
											"end": 12303,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12271,
											"end": 12303,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12147,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 12147,
											"end": 12310,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10105,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 10038,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10038,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 10038,
											"end": 10105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8773,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 8325,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8325,
											"end": 8773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 8325,
											"end": 8773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 11363,
											"end": 11534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11464,
											"end": 11468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11512,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11487,
											"end": 11527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11363,
											"end": 11534,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 10111,
											"end": 10182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10165,
											"end": 10173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 10165,
											"end": 10175,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10165,
											"end": 10175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10165,
											"end": 10175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9550,
											"end": 9580,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9584,
											"end": 9585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9585,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 9546,
											"end": 9654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "36C5EEC7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9608,
											"end": 9643,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 9546,
											"end": 9654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9704,
											"end": 9730,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9822,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9822,
											"end": 9880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9822,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9822,
											"end": 9880,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9880,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9822,
											"end": 9880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2E31E8893A04CE5258044D342D7658948A6AC9710D97E32462AB75F131AE11EF"
										},
										{
											"begin": 9896,
											"end": 10025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 10025,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 10032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 10032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 10032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8779,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8913,
											"end": 8948,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8952,
											"end": 8953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8909,
											"end": 9013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8909,
											"end": 9013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D428A01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9002,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8909,
											"end": 9013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8909,
											"end": 9013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9067,
											"end": 9098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9098,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9199,
											"end": 9267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9199,
											"end": 9267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9199,
											"end": 9267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9199,
											"end": 9267,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9283,
											"end": 9408,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9408,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2845,
											"end": 2879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9199,
											"end": 9267,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "F0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94"
										},
										{
											"begin": 9283,
											"end": 9408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9283,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2637,
											"end": 2885,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4985,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5168,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5168,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5153,
											"end": 5222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EC48105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5211,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5153,
											"end": 5222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5256,
											"end": 5262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5262,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5300,
											"end": 5301,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5284,
											"end": 5302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5284,
											"end": 5302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5284,
											"end": 5302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5284,
											"end": 5316,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5371,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5280,
											"end": 5371,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5356,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5280,
											"end": 5371,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5280,
											"end": 5371,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5388,
											"end": 5433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5429,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5429,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5431,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5414,
											"end": 5432,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5414,
											"end": 5432,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 5414,
											"end": 5432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5388,
											"end": 5433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5388,
											"end": 5433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5388,
											"end": 5433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5524,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5384,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5505,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5505,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5507,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5490,
											"end": 5508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5490,
											"end": 5508,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5490,
											"end": 5508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3746725B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5460,
											"end": 5509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5460,
											"end": 5509,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5509,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 5384,
											"end": 5524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5565,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5565,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5232,
											"end": 5593,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5608,
											"end": 5617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5627,
											"end": 5633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5633,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5699,
											"end": 5703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5651,
											"end": 5676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5651,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5692,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5692,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5694,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5677,
											"end": 5695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5677,
											"end": 5695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5677,
											"end": 5695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5651,
											"end": 5696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5696,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5651,
											"end": 5703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5651,
											"end": 5703,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 5779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5779,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5745,
											"end": 5779,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5835,
											"end": 5838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5603,
											"end": 5863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "9A9F2A64A3B0B4774DA60129AA707715E049CB95062F7ACAAFFC07DDC244C1CC"
										},
										{
											"begin": 5911,
											"end": 5926,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5911,
											"end": 5926,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 5878,
											"end": 5927,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5940,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6087,
											"end": 6102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6123,
											"end": 6134,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6119,
											"end": 6188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6119,
											"end": 6188,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EC48105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6177,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6119,
											"end": 6188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6119,
											"end": 6188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6222,
											"end": 6228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6228,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6280,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6265,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6265,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6250,
											"end": 6268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6250,
											"end": 6268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 6250,
											"end": 6268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6282,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6246,
											"end": 6337,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6322,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6246,
											"end": 6337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6246,
											"end": 6337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6355,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6396,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6396,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6398,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6381,
											"end": 6399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6381,
											"end": 6399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6381,
											"end": 6399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6355,
											"end": 6400,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6350,
											"end": 6487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6350,
											"end": 6487,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6468,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6468,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6469,
											"end": 6470,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6453,
											"end": 6471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6453,
											"end": 6471,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6453,
											"end": 6471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6427,
											"end": 6472,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE55CC33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6427,
											"end": 6472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6427,
											"end": 6472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6472,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6427,
											"end": 6472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6350,
											"end": 6487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6350,
											"end": 6487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6531,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6528,
											"end": 6531,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6587,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6596,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6662,
											"end": 6667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6614,
											"end": 6659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6655,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6655,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6657,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6640,
											"end": 6658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6640,
											"end": 6658,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6640,
											"end": 6658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6614,
											"end": 6659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6659,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6614,
											"end": 6667,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6614,
											"end": 6667,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6709,
											"end": 6743,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6709,
											"end": 6743,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6709,
											"end": 6743,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6709,
											"end": 6743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6709,
											"end": 6743,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6799,
											"end": 6802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D68B41369D54FACA53E699320360840DB6E0E2E175D3974EB304FD18713D916B"
										},
										{
											"begin": 6885,
											"end": 6900,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6900,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6841,
											"end": 6901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7076,
											"end": 7089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3203,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3193,
											"end": 3220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3220,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3220,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3189,
											"end": 3294,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3283,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3243,
											"end": 3283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "44B50405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3283,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3283,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3243,
											"end": 3283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3243,
											"end": 3283,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3243,
											"end": 3283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3189,
											"end": 3294,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3189,
											"end": 3294,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2363,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2338,
											"end": 2378,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2378,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2338,
											"end": 2378,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2452,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2333,
											"end": 2452,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2441,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE55CC33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2401,
											"end": 2441,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2452,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2333,
											"end": 2452,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"modifierDepth": 4,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2996,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3022,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7171,
											"end": 7184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7171,
											"end": 7184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 3022,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2963,
											"end": 3022,
											"modifierDepth": 4,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2959,
											"end": 3108,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2959,
											"end": 3108,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2959,
											"end": 3108,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3097,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1EE5F6F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3097,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3045,
											"end": 3097,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3097,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 3108,
											"modifierDepth": 4,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2959,
											"end": 3108,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7267,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7236,
											"end": 7267,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7204,
											"end": 7233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7204,
											"end": 7233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7231,
											"modifierDepth": 5,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7204,
											"end": 7233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7208,
											"modifierDepth": 5,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7204,
											"end": 7218,
											"modifierDepth": 5,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7218,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7204,
											"end": 7218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7204,
											"end": 7233,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7204,
											"end": 7233,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7204,
											"end": 7233,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7267,
											"modifierDepth": 5,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7330,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7330,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7200,
											"end": 7330,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "786E0A99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7319,
											"modifierDepth": 5,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7330,
											"modifierDepth": 5,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7200,
											"end": 7330,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7401,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7375,
											"end": 7401,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7371,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7343,
											"end": 7371,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7460,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7339,
											"end": 7460,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27007F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7449,
											"modifierDepth": 5,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7460,
											"modifierDepth": 5,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 7339,
											"end": 7460,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7520,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7506,
											"end": 7519,
											"modifierDepth": 5,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7505,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7469,
											"end": 7520,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7520,
											"modifierDepth": 5,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7469,
											"end": 7520,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7562,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7548,
											"end": 7561,
											"modifierDepth": 5,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7547,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7530,
											"end": 7562,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7562,
											"modifierDepth": 5,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7530,
											"end": 7562,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2461,
											"end": 2462,
											"modifierDepth": 4,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3304,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 7569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6914,
											"end": 7569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10321,
											"end": 10337,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10366,
											"end": 10385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10349,
											"end": 10363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10406,
											"end": 10417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10417,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4EC48105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10460,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 10402,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10481,
											"end": 10505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10533,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10543,
											"end": 10549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10539,
											"end": 10549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10596,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10597,
											"end": 10616,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10616,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10597,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 10597,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 10597,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10571,
											"end": 10620,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10673,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 10567,
											"end": 10673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 10640,
											"end": 10658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10567,
											"end": 10673,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 10567,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10717,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 10792,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10792,
											"end": 10823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10865,
											"end": 10874,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10884,
											"end": 10890,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10880,
											"end": 10881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10880,
											"end": 10890,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10937,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10957,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10957,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 10958,
											"end": 10959,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10938,
											"end": 10960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 10938,
											"end": 10960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10938,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10912,
											"end": 10961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 11050,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10908,
											"end": 11050,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11032,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11032,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11033,
											"end": 11034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 11013,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 11013,
											"end": 11035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 11013,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 11002,
											"end": 11009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10981,
											"end": 11010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11010,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10981,
											"end": 11035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10908,
											"end": 11050,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10908,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11091,
											"end": 11094,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11091,
											"end": 11094,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 10860,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 11162,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10188,
											"end": 11162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2740,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2740,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2858,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2736,
											"end": 2858,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2803,
											"end": 2847,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3746725B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2803,
											"end": 2847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2847,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2803,
											"end": 2847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2847,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2803,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2736,
											"end": 2858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4274,
											"end": 4301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4301,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4348,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4270,
											"end": 4348,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4337,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4270,
											"end": 4348,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4270,
											"end": 4348,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4382,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4357,
											"end": 4397,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4397,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4404,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4400,
											"end": 4404,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"modifierDepth": 2,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4404,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4438,
											"end": 4472,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4472,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4472,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4472,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4472,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1AFDE38C60D2BE0D28D001619816D86C39CE78B350C9D94F23C095099B9C1D27"
										},
										{
											"begin": 4497,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4537,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4138,
											"end": 4544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4550,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2539,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2539,
											"end": 2579,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2534,
											"end": 2653,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE55CC33"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2534,
											"end": 2653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4724,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4771,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4693,
											"end": 4771,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D92E233D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4760,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4771,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4693,
											"end": 4771,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4780,
											"end": 4820,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4820,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4828,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4780,
											"end": 4828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4780,
											"end": 4828,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4864,
											"end": 4896,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4862,
											"end": 4896,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "A354190DD7342316E40E5358C9F72037F2C677CDC057D3DEBBC4F1B62495E2E2"
										},
										{
											"begin": 4921,
											"end": 4972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10038,
											"end": 10105,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 10038,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10090,
											"end": 10098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 10090,
											"end": 10096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 10090,
											"end": 10098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8773,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 8325,
											"end": 8773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8504,
											"end": 8508,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8478,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8485,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8495,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8495,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 8481,
											"end": 8495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 8481,
											"end": 8510,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8481,
											"end": 8510,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8463,
											"end": 8510,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8463,
											"end": 8510,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8531,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8535,
											"end": 8536,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8536,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8585,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8520,
											"end": 8585,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16E3FF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8574,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 8585,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8520,
											"end": 8585,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8606,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8613,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8609,
											"end": 8622,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8622,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 8623,
											"end": 8630,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8630,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 8623,
											"end": 8630,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8640,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8609,
											"end": 8640,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8609,
											"end": 8640,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8640,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8640,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8662,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 8714,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8650,
											"end": 8714,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27FCD9D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8703,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8650,
											"end": 8714,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 8650,
											"end": 8714,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097"
										},
										{
											"begin": 8749,
											"end": 8756,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8756,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 8749,
											"end": 8756,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8728,
											"end": 8766,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8728,
											"end": 8766,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8773,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8773,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 337,
											"end": 355,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 196,
											"end": 421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 382,
											"end": 414,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7828,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7575,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7720,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7746,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7753,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7687,
											"end": 7753,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7749,
											"end": 7753,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7687,
											"end": 7753,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7753,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 364,
											"end": 415,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 364,
											"end": 415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "PUSH",
											"source": 6,
											"value": "654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943"
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7821,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 8319,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7834,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7993,
											"end": 8024,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7993,
											"end": 8024,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7932,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 7928,
											"end": 7941,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 7941,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 7928,
											"end": 7941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7928,
											"end": 8034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 7928,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 8056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 8044,
											"end": 8112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78ECF41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8079,
											"end": 8101,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8112,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 8044,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8145,
											"end": 8175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8145,
											"end": 8175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8175,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8271,
											"end": 8302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8200,
											"end": 8312,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8200,
											"end": 8312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8200,
											"end": 8312,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4424,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4425,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4434,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8200,
											"end": 8312,
											"name": "PUSH",
											"source": 6,
											"value": "8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E"
										},
										{
											"begin": 8200,
											"end": 8312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8200,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4200,
											"end": 4474,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 426,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 426,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 485,
											"end": 491,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 540,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 517,
											"end": 524,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 513,
											"end": 536,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 509,
											"end": 541,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 506,
											"end": 558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 506,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 544,
											"end": 556,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 506,
											"end": 558,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 577,
											"end": 600,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 577,
											"end": 600,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 426,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 803,
											"end": 976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 871,
											"end": 891,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 920,
											"end": 951,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 920,
											"end": 951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 910,
											"end": 952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 910,
											"end": 952,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 900,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 900,
											"end": 970,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 966,
											"end": 967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 900,
											"end": 970,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 900,
											"end": 970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 803,
											"end": 976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1167,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 981,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1068,
											"end": 1091,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1151,
											"end": 1160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1132,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1132,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1161,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1167,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1990,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1380,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1466,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1480,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1513,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1525,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1498,
											"end": 1530,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1547,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1495,
											"end": 1547,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1495,
											"end": 1547,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1495,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1635,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1652,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1602,
											"end": 1652,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1648,
											"end": 1649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1650,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1652,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 1602,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1724,
											"end": 1728,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1716,
											"end": 1729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1712,
											"end": 1739,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1702,
											"end": 1757,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1743,
											"end": 1755,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1757,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 1702,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1795,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1780,
											"end": 1796,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1837,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 1817,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1838,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1855,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 1805,
											"end": 1855,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1841,
											"end": 1853,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1855,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 1805,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1901,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1889,
											"end": 1895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1882,
											"end": 1896,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 1880,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1912,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1929,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 1864,
											"end": 1929,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1927,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1929,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 1864,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1958,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1984,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1990,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2632,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1995,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2289,
											"end": 2311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2141,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2432,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2525,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2526,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2546,
											"end": 2558,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 2411,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1995,
											"end": 2632,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1995,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 3017,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2890,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 2961,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2946,
											"end": 2949,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2942,
											"end": 2962,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2986,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2979,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3010,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3003,
											"end": 3004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3637,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3022,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3234,
											"end": 3255,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3312,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3312,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3312,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3343,
											"end": 3345,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3174,
											"end": 3178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3424,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3482,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3530,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 3403,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3628,
											"end": 3631,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3637,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3826,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3642,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3753,
											"end": 3762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3751,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3740,
											"end": 3763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3736,
											"end": 3768,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3783,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3733,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4063,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 3831,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3870,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3945,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3941,
											"end": 3961,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3962,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3985,
											"end": 3989,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4017,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4018,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3888,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4044,
											"end": 4057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3831,
											"end": 4063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4195,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4068,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4129,
											"end": 4139,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4124,
											"end": 4127,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4120,
											"end": 4140,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4164,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4150,
											"end": 4165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4188,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4181,
											"end": 4182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4174,
											"end": 4189,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4756,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4479,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4587,
											"end": 4596,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4597,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4605,
											"end": 4617,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 4567,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4647,
											"end": 4656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4641,
											"end": 4657,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4693,
											"end": 4706,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4679,
											"end": 4684,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4708,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 4666,
											"end": 4726,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"hardhat/contracts/ClosedSurvey.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"blacklistMultipleWhitelistedUserAddresses(address[])": "9a0474e8",
							"blacklistOneWhitelistedUserAddress(address)": "d335993a",
							"cUSD()": "1fccf672",
							"checkIfParticipantHasAlreadyClaimedReward(address)": "6ff65c20",
							"checkIfUserAddressIsBlacklisted(address)": "85737020",
							"checkIfUserAddressIsWhitelisted(address)": "fc05542a",
							"getNumberOfRewardedParticipants()": "741ae614",
							"getNumberOfWhitelistedUserAddresses()": "d9084326",
							"getRewardAmountPerParticipantInWei()": "7069243c",
							"getTargetNumberOfParticipants()": "6fa1c59d",
							"getWhitelistedAddressesFromRegisteredAddresses(address[])": "a34db0a0",
							"numberOfRewardedParticipants()": "1318fbf1",
							"numberOfWhitelistedUserAddresses()": "c25a02ec",
							"owner()": "8da5cb5b",
							"pauseSurvey()": "e082fe2a",
							"paused()": "5c975abb",
							"processRewardClaimByParticipant(address)": "a0858343",
							"renounceOwnership()": "715018a6",
							"rewardAmountPerParticipantInWei()": "7a0abf08",
							"targetNumberOfParticipants()": "a6a09811",
							"transferOwnership(address)": "f2fde38b",
							"unpauseSurvey()": "3960fc66",
							"updateRewardAmountPerParticipant(uint256)": "64bb632f",
							"updateTargetNumberOfParticipants(uint256)": "528780cc",
							"whitelistMultipleUserAddresses(address[])": "98b48493",
							"whitelistOneUserAddress(address)": "b0702913",
							"withdrawAllRewardFundsToResearcher()": "f22069df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"researcherWalletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardAmountPerParticipantInWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetNumberOfParticipants\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"cUSDTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllParticipantsRewarded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNumberOfTargetParticipants\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardAmountGiven\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoRewardFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"ParticipantAlreadyRewarded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"unauthorizedMessageSender\",\"type\":\"address\"}],\"name\":\"UnauthorizedMessageSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"UserAddressAlreadyWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"UserAddressNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"MultipleUserAddressesWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"MultipleWhitelistedUserAddressesBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"}],\"name\":\"OneUserAddressWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"}],\"name\":\"OneWhitelistedUserAddressBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"}],\"name\":\"ParticipantMarkedAsRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participantWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ParticipantRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldcUSDRewardAmountPerParticipantInWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newcUSDRewardAmountPerParticipantInWei\",\"type\":\"uint256\"}],\"name\":\"RewardAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"researcherWalletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTargetNumberOfParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTargetNumberOfParticipants\",\"type\":\"uint256\"}],\"name\":\"TargetNumberOfParticipantsUpdates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"blacklistMultipleWhitelistedUserAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"blacklistOneWhitelistedUserAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cUSD\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"checkIfParticipantHasAlreadyClaimedReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"checkIfUserAddressIsBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"checkIfUserAddressIsWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfRewardedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfWhitelistedUserAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmountPerParticipantInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetNumberOfParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"registeredAddresses\",\"type\":\"address[]\"}],\"name\":\"getWhitelistedAddressesFromRegisteredAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfRewardedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfWhitelistedUserAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"processRewardClaimByParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmountPerParticipantInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetNumberOfParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRewardAmountPerParticipantInWei\",\"type\":\"uint256\"}],\"name\":\"updateRewardAmountPerParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTargetNumberOfParticipants\",\"type\":\"uint256\"}],\"name\":\"updateTargetNumberOfParticipants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"walletAddresses\",\"type\":\"address[]\"}],\"name\":\"whitelistMultipleUserAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"whitelistOneUserAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllRewardFundsToResearcher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"hardhat/contracts/ClosedSurvey.sol\":\"ClosedSurvey\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"hardhat/contracts/ClosedSurvey.sol\":{\"keccak256\":\"0xaf90151ac32d23be2b8630d17347b8a56d535836dd940ba6a65671944cc8b341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ac61c524820bfc8a8d484060be68338ab73a3805b0c80188708c3332ad16e79\",\"dweb:/ipfs/Qmcx3yrSnfC2NkdqA3aywfnP286A4pyCXDSKNybotKjpaU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 409,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 290,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 486,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "usersWhitelistedForSurvey",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 490,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "participantsWhoHaveClaimedRewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 492,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "rewardAmountPerParticipantInWei",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 494,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "targetNumberOfParticipants",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 496,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "numberOfRewardedParticipants",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 498,
								"contract": "hardhat/contracts/ClosedSurvey.sol:ClosedSurvey",
								"label": "numberOfWhitelistedUserAddresses",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 282,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								281
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 226,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC20",
										"nameLocations": [
											"306:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "306:6:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:2",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:2"
									},
									"scope": 251,
									"src": "378:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "540:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:2"
									},
									"scope": 251,
									"src": "499:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "674:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 247,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:2"
									},
									"scope": 251,
									"src": "631:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "278:405:2",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "125:559:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							281
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 281,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 268,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 267,
												"id": 270,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 281,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 281,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Pausable": [
							398
						]
					},
					"id": 399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 399,
							"sourceUnit": 282,
							"src": "128:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 284,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 287,
										"name": "Context",
										"nameLocations": [
											"645:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "645:7:4"
									},
									"id": 288,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 286,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 398,
							"linearizedBaseContracts": [
								398,
								281
							],
							"name": "Pausable",
							"nameLocation": "633:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 398,
									"src": "659:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 289,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "770:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "777:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:4"
									},
									"src": "764:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "881:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "890:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:4"
									},
									"src": "875:32:4"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 303,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:4"
									},
									"src": "994:22:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 306,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:4"
									},
									"src": "1107:22:4"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "1221:32:4",
										"statements": [
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1231:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:4"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:4"
									},
									"scope": 398,
									"src": "1207:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1464:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 318,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "1474:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:4"
											},
											{
												"id": 321,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:4"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 323,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:4"
									},
									"src": "1439:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1711:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 326,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1721:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:4"
											},
											{
												"id": 329,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:4"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 331,
									"name": "whenPaused",
									"nameLocation": "1698:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:4"
									},
									"src": "1689:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "1903:31:4",
										"statements": [
											{
												"expression": {
													"id": 337,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 290,
													"src": "1920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 336,
												"id": 338,
												"nodeType": "Return",
												"src": "1913:14:4"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1897:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:4"
									},
									"scope": 398,
									"src": "1850:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2053:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 344,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2067:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "IfStatement",
												"src": "2063:61:4",
												"trueBody": {
													"id": 349,
													"nodeType": "Block",
													"src": "2077:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 346,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "2098:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 348,
															"nodeType": "RevertStatement",
															"src": "2091:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:4"
									},
									"scope": 398,
									"src": "2002:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "2250:78:4",
										"statements": [
											{
												"condition": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 356,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "2265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 363,
												"nodeType": "IfStatement",
												"src": "2260:62:4",
												"trueBody": {
													"id": 362,
													"nodeType": "Block",
													"src": "2275:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 359,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "2296:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 361,
															"nodeType": "RevertStatement",
															"src": "2289:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:4"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:4"
									},
									"scope": 398,
									"src": "2202:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2512:66:4",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2522:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 376,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2558:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 375,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2551:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "2546:25:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 368,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "2498:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:4"
									},
									"scope": 398,
									"src": "2463:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "2758:69:4",
										"statements": [
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2768:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 392,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2807:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 391,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2798:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "EmitStatement",
												"src": "2793:27:4"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 384,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2747:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:4"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:4"
									},
									"scope": 398,
									"src": "2710:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 399,
							"src": "615:2214:4",
							"usedErrors": [
								303,
								306
							],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "102:2728:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							467
						]
					},
					"id": 468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 401,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 467,
							"linearizedBaseContracts": [
								467
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 404,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "1818:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 407,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "1864:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 406,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 467,
									"src": "1907:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:5",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 412,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"src": "1994:37:5"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2051:38:5",
										"statements": [
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 415,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2061:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 416,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "2071:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:5"
											}
										]
									},
									"id": 420,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:5"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:5"
									},
									"scope": 467,
									"src": "2037:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2490:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 423,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "2500:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:5"
											},
											{
												"id": 426,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 427,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 455,
														"src": "2542:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:5"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 431,
									"name": "nonReentrant",
									"nameLocation": "2475:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:5"
									},
									"src": "2466:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2614:268:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2702:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 435,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2713:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "2698:86:5",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "2722:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 437,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "2743:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 439,
															"nodeType": "RevertStatement",
															"src": "2736:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 442,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2858:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 443,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2868:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:5"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:5"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:5"
									},
									"scope": 467,
									"src": "2575:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2926:170:5",
										"statements": [
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 450,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3068:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 451,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3078:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:5"
											}
										]
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:5"
									},
									"scope": 467,
									"src": "2888:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 465,
										"nodeType": "Block",
										"src": "3339:42:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 461,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "3356:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 462,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3367:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 460,
												"id": 464,
												"nodeType": "Return",
												"src": "3349:25:5"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:5"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "3333:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:5"
									},
									"scope": 467,
									"src": "3275:106:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 468,
							"src": "1030:2353:5",
							"usedErrors": [
								412
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:5"
				},
				"id": 5
			},
			"hardhat/contracts/ClosedSurvey.sol": {
				"ast": {
					"absolutePath": "hardhat/contracts/ClosedSurvey.sol",
					"exportedSymbols": {
						"ClosedSurvey": [
							1367
						],
						"Context": [
							281
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						],
						"Ownable": [
							147
						],
						"Pausable": [
							398
						],
						"ReentrancyGuard": [
							467
						]
					},
					"id": 1368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 148,
							"src": "58:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 252,
							"src": "111:75:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 468,
							"src": "187:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 473,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 399,
							"src": "247:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "Ownable",
										"nameLocations": [
											"355:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "355:7:6"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "355:7:6"
								},
								{
									"baseName": {
										"id": 476,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"364:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 467,
										"src": "364:15:6"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "364:15:6"
								},
								{
									"baseName": {
										"id": 478,
										"name": "Pausable",
										"nameLocations": [
											"381:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 398,
										"src": "381:8:6"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "381:8:6"
								}
							],
							"canonicalName": "ClosedSurvey",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1367,
							"linearizedBaseContracts": [
								1367,
								398,
								467,
								147,
								281
							],
							"name": "ClosedSurvey",
							"nameLocation": "339:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1fccf672",
									"id": 482,
									"mutability": "immutable",
									"name": "cUSD",
									"nameLocation": "428:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "396:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Metadata_$251",
										"typeString": "contract IERC20Metadata"
									},
									"typeName": {
										"id": 481,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 480,
											"name": "IERC20Metadata",
											"nameLocations": [
												"396:14:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 251,
											"src": "396:14:6"
										},
										"referencedDeclaration": 251,
										"src": "396:14:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$251",
											"typeString": "contract IERC20Metadata"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "usersWhitelistedForSurvey",
									"nameLocation": "472:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "439:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 485,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 483,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "447:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "439:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "458:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "participantsWhoHaveClaimedRewards",
									"nameLocation": "536:33:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "503:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 489,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 487,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "511:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "503:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 488,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "522:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7a0abf08",
									"id": 492,
									"mutability": "mutable",
									"name": "rewardAmountPerParticipantInWei",
									"nameLocation": "591:31:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "576:46:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "576:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6a09811",
									"id": 494,
									"mutability": "mutable",
									"name": "targetNumberOfParticipants",
									"nameLocation": "643:26:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "628:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 493,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1318fbf1",
									"id": 496,
									"mutability": "mutable",
									"name": "numberOfRewardedParticipants",
									"nameLocation": "690:28:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "675:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 495,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c25a02ec",
									"id": 498,
									"mutability": "mutable",
									"name": "numberOfWhitelistedUserAddresses",
									"nameLocation": "739:32:6",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "724:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 497,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1afde38c60d2be0d28d001619816d86c39ce78b350c9d94f23c095099b9c1d27",
									"id": 502,
									"name": "OneUserAddressWhitelisted",
									"nameLocation": "784:25:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "818:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "810:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:34:6"
									},
									"src": "778:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "9a9f2a64a3b0b4774da60129aa707715e049cb95062f7acaaffc07ddc244c1cc",
									"id": 507,
									"name": "MultipleUserAddressesWhitelisted",
									"nameLocation": "855:32:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "898:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "888:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 503,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 504,
													"nodeType": "ArrayTypeName",
													"src": "888:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:27:6"
									},
									"src": "849:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "a354190dd7342316e40e5358c9f72037f2c677cdc057d3debbc4f1b62495e2e2",
									"id": 511,
									"name": "OneWhitelistedUserAddressBlacklisted",
									"nameLocation": "926:36:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "980:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "972:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:48:6"
									},
									"src": "920:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "d68b41369d54faca53e699320360840db6e0e2e175d3974eb304fd18713d916b",
									"id": 516,
									"name": "MultipleWhitelistedUserAddressesBlacklisted",
									"nameLocation": "1022:43:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"indexed": false,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "1085:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1075:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 512,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1075:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 513,
													"nodeType": "ArrayTypeName",
													"src": "1075:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:41:6"
									},
									"src": "1016:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e",
									"id": 522,
									"name": "ParticipantRewarded",
									"nameLocation": "1118:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "1155:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1147:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1197:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "1189:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:78:6"
									},
									"src": "1112:104:6"
								},
								{
									"anonymous": false,
									"eventSelector": "654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943",
									"id": 526,
									"name": "ParticipantMarkedAsRewarded",
									"nameLocation": "1227:27:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "1263:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "1255:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:34:6"
									},
									"src": "1221:68:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097",
									"id": 532,
									"name": "RewardFundsWithdrawn",
									"nameLocation": "1300:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "researcherWalletAddress",
												"nameLocation": "1338:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1330:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1379:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1371:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:77:6"
									},
									"src": "1294:104:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c94",
									"id": 538,
									"name": "RewardAmountUpdated",
									"nameLocation": "1409:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldcUSDRewardAmountPerParticipantInWei",
												"nameLocation": "1446:38:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1438:46:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"indexed": false,
												"mutability": "mutable",
												"name": "newcUSDRewardAmountPerParticipantInWei",
												"nameLocation": "1502:38:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1494:46:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:118:6"
									},
									"src": "1403:144:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2e31e8893a04ce5258044d342d7658948a6ac9710d97e32462ab75f131ae11ef",
									"id": 544,
									"name": "TargetNumberOfParticipantsUpdates",
									"nameLocation": "1559:33:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldTargetNumberOfParticipants",
												"nameLocation": "1610:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1602:37:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTargetNumberOfParticipants",
												"nameLocation": "1657:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1649:37:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:100:6"
									},
									"src": "1553:140:6"
								},
								{
									"errorSelector": "d92e233d",
									"id": 546,
									"name": "ZeroAddress",
									"nameLocation": "1705:11:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1716:2:6"
									},
									"src": "1699:20:6"
								},
								{
									"errorSelector": "d428a010",
									"id": 548,
									"name": "InvalidRewardAmountGiven",
									"nameLocation": "1730:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:2:6"
									},
									"src": "1724:33:6"
								},
								{
									"errorSelector": "db17bb1c",
									"id": 550,
									"name": "InvalidNumberOfTargetParticipants",
									"nameLocation": "1768:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1801:2:6"
									},
									"src": "1762:42:6"
								},
								{
									"errorSelector": "de55cc33",
									"id": 554,
									"name": "UserAddressNotWhitelisted",
									"nameLocation": "1815:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1849:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1841:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1841:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1840:23:6"
									},
									"src": "1809:55:6"
								},
								{
									"errorSelector": "6e8ce4b6",
									"id": 558,
									"name": "UserAddressAlreadyWhitelisted",
									"nameLocation": "1875:29:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1913:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "1905:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:23:6"
									},
									"src": "1869:59:6"
								},
								{
									"errorSelector": "0f72fb78",
									"id": 562,
									"name": "ParticipantAlreadyRewarded",
									"nameLocation": "1939:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "1974:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1966:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:23:6"
									},
									"src": "1933:56:6"
								},
								{
									"errorSelector": "5b8ffc14",
									"id": 564,
									"name": "NoRewardFunds",
									"nameLocation": "2000:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:2:6"
									},
									"src": "1994:22:6"
								},
								{
									"errorSelector": "78ecf410",
									"id": 566,
									"name": "RewardTransferFailed",
									"nameLocation": "2027:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:6"
									},
									"src": "2021:29:6"
								},
								{
									"errorSelector": "9c01fc00",
									"id": 568,
									"name": "AllParticipantsRewarded",
									"nameLocation": "2061:23:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:2:6"
									},
									"src": "2055:32:6"
								},
								{
									"errorSelector": "44b50405",
									"id": 572,
									"name": "UnauthorizedMessageSender",
									"nameLocation": "2098:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "unauthorizedMessageSender",
												"nameLocation": "2132:25:6",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2124:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:35:6"
									},
									"src": "2092:67:6"
								},
								{
									"errorSelector": "27fcd9d1",
									"id": 574,
									"name": "WithdrawalFailed",
									"nameLocation": "2170:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:2:6"
									},
									"src": "2164:25:6"
								},
								{
									"errorSelector": "9d89020a",
									"id": 576,
									"name": "InvalidArrayLength",
									"nameLocation": "2200:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2218:2:6"
									},
									"src": "2194:27:6"
								},
								{
									"errorSelector": "786e0a99",
									"id": 578,
									"name": "InsufficientContractBalance",
									"nameLocation": "2232:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2259:2:6"
									},
									"src": "2226:36:6"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2323:146:6",
										"statements": [
											{
												"condition": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2337:41:6",
													"subExpression": {
														"baseExpression": {
															"id": 582,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2338:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 584,
														"indexExpression": {
															"id": 583,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "2364:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2338:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 591,
												"nodeType": "IfStatement",
												"src": "2333:119:6",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "2380:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 587,
																		"name": "walletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "2427:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 586,
																	"name": "UserAddressNotWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "2401:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2401:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 589,
															"nodeType": "RevertStatement",
															"src": "2394:47:6"
														}
													]
												}
											},
											{
												"id": 592,
												"nodeType": "PlaceholderStatement",
												"src": "2461:1:6"
											}
										]
									},
									"id": 594,
									"name": "onlyWhitelistedAddress",
									"nameLocation": "2277:22:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "2308:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2300:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:23:6"
									},
									"src": "2268:201:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "2524:146:6",
										"statements": [
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2538:41:6",
													"subExpression": {
														"baseExpression": {
															"id": 598,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2539:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 600,
														"indexExpression": {
															"id": 599,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "2565:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2539:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "2534:119:6",
												"trueBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "2581:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 603,
																		"name": "walletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "2628:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 602,
																	"name": "UserAddressNotWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "2602:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2602:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 605,
															"nodeType": "RevertStatement",
															"src": "2595:47:6"
														}
													]
												}
											},
											{
												"id": 608,
												"nodeType": "PlaceholderStatement",
												"src": "2662:1:6"
											}
										]
									},
									"id": 610,
									"name": "mustBeWhitelisted",
									"nameLocation": "2483:17:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "2509:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "2501:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2500:23:6"
									},
									"src": "2474:196:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2726:149:6",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 614,
														"name": "usersWhitelistedForSurvey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2740:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 616,
													"indexExpression": {
														"id": 615,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2740:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "IfStatement",
												"src": "2736:122:6",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "2782:76:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 618,
																		"name": "walletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "2833:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 617,
																	"name": "UserAddressAlreadyWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "2803:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2803:44:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 620,
															"nodeType": "RevertStatement",
															"src": "2796:51:6"
														}
													]
												}
											},
											{
												"id": 623,
												"nodeType": "PlaceholderStatement",
												"src": "2867:1:6"
											}
										]
									},
									"id": 625,
									"name": "mustBeBlacklisted",
									"nameLocation": "2685:17:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "2711:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2703:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:23:6"
									},
									"src": "2676:199:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2949:176:6",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 629,
														"name": "participantsWhoHaveClaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "2963:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 631,
													"indexExpression": {
														"id": 630,
														"name": "participantWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "2997:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2963:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 637,
												"nodeType": "IfStatement",
												"src": "2959:149:6",
												"trueBody": {
													"id": 636,
													"nodeType": "Block",
													"src": "3024:84:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 633,
																		"name": "participantWalletAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 627,
																		"src": "3072:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 632,
																	"name": "ParticipantAlreadyRewarded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "3045:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3045:52:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 635,
															"nodeType": "RevertStatement",
															"src": "3038:59:6"
														}
													]
												}
											},
											{
												"id": 638,
												"nodeType": "PlaceholderStatement",
												"src": "3117:1:6"
											}
										]
									},
									"id": 640,
									"name": "onlyUnrewardedParticipant",
									"nameLocation": "2889:25:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "2923:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2915:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:34:6"
									},
									"src": "2880:245:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "3179:132:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 644,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3193:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3197:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3193:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 646,
														"name": "messageSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "3207:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3193:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 653,
												"nodeType": "IfStatement",
												"src": "3189:105:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "3222:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 649,
																		"name": "messageSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 642,
																		"src": "3269:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 648,
																	"name": "UnauthorizedMessageSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "3243:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3243:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 651,
															"nodeType": "RevertStatement",
															"src": "3236:47:6"
														}
													]
												}
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "3303:1:6"
											}
										]
									},
									"id": 656,
									"name": "onlyValidSender",
									"nameLocation": "3140:15:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "messageSender",
												"nameLocation": "3164:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "3156:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3156:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3155:23:6"
									},
									"src": "3131:180:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3542:590:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 670,
															"name": "researcherWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "3569:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3604:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3596:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3596:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3596:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3569:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 676,
															"name": "cUSDTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3622:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3650:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3642:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3642:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3642:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3622:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3569:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 687,
												"nodeType": "IfStatement",
												"src": "3552:156:6",
												"trueBody": {
													"id": 686,
													"nodeType": "Block",
													"src": "3663:45:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 683,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "3684:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3684:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 685,
															"nodeType": "RevertStatement",
															"src": "3677:20:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 688,
														"name": "_rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "3721:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3757:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3721:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 695,
												"nodeType": "IfStatement",
												"src": "3717:101:6",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "3760:58:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 691,
																	"name": "InvalidRewardAmountGiven",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "3781:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3781:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 693,
															"nodeType": "RevertStatement",
															"src": "3774:33:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 696,
														"name": "_targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "3832:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3863:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3832:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "3828:105:6",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "3866:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 699,
																	"name": "InvalidNumberOfTargetParticipants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "3887:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3887:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "3880:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 704,
														"name": "cUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3943:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$251",
															"typeString": "contract IERC20Metadata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 706,
																"name": "cUSDTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "3965:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 705,
															"name": "IERC20Metadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "3950:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$251_$",
																"typeString": "type(contract IERC20Metadata)"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3950:32:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$251",
															"typeString": "contract IERC20Metadata"
														}
													},
													"src": "3943:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Metadata_$251",
														"typeString": "contract IERC20Metadata"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "3943:39:6"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "3993:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 711,
														"name": "_rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "4027:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3993:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "3993:66:6"
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 714,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4069:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 715,
														"name": "_targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "4098:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "4069:56:6"
											}
										]
									},
									"id": 719,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 667,
													"name": "researcherWalletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "3517:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 668,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 666,
												"name": "Ownable",
												"nameLocations": [
													"3509:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3509:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3509:32:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "researcherWalletAddress",
												"nameLocation": "3350:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3342:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3342:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_rewardAmountPerParticipantInWei",
												"nameLocation": "3391:32:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3383:40:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_targetNumberOfParticipants",
												"nameLocation": "3441:27:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3433:35:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3433:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "cUSDTokenAddress",
												"nameLocation": "3486:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3478:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:176:6"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:0:6"
									},
									"scope": 1367,
									"src": "3321:811:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "4260:284:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "4274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4299:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4291:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 730,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4291:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4291:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4274:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "4270:78:6",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "4303:45:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 735,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4324:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4324:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 737,
															"nodeType": "RevertStatement",
															"src": "4317:20:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 740,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4357:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 741,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4383:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4357:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4400:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4357:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "4357:47:6"
											},
											{
												"id": 749,
												"nodeType": "UncheckedBlock",
												"src": "4414:69:6",
												"statements": [
													{
														"expression": {
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "4438:34:6",
															"subExpression": {
																"id": 746,
																"name": "numberOfWhitelistedUserAddresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "4440:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 748,
														"nodeType": "ExpressionStatement",
														"src": "4438:34:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 751,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4523:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 750,
														"name": "OneUserAddressWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "4497:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4497:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "EmitStatement",
												"src": "4492:45:6"
											}
										]
									},
									"functionSelector": "b0702913",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "onlyOwner",
												"nameLocations": [
													"4217:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4217:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4217:9:6"
										},
										{
											"arguments": [
												{
													"id": 726,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "4245:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 725,
												"name": "mustBeBlacklisted",
												"nameLocations": [
													"4227:17:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 625,
												"src": "4227:17:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4227:32:6"
										}
									],
									"name": "whitelistOneUserAddress",
									"nameLocation": "4147:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "4188:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "4180:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4180:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:37:6"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4260:0:6"
									},
									"scope": 1367,
									"src": "4138:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "4683:296:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "4697:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4722:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 766,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4714:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4714:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4697:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "IfStatement",
												"src": "4693:78:6",
												"trueBody": {
													"id": 774,
													"nodeType": "Block",
													"src": "4726:45:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 771,
																	"name": "ZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4747:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4747:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 773,
															"nodeType": "RevertStatement",
															"src": "4740:20:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 776,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "4780:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4806:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4780:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4823:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4780:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "4780:48:6"
											},
											{
												"id": 785,
												"nodeType": "UncheckedBlock",
												"src": "4838:69:6",
												"statements": [
													{
														"expression": {
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "4862:34:6",
															"subExpression": {
																"id": 782,
																"name": "numberOfWhitelistedUserAddresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "4864:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 784,
														"nodeType": "ExpressionStatement",
														"src": "4862:34:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 787,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4958:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 786,
														"name": "OneWhitelistedUserAddressBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "4921:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4921:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "4916:56:6"
											}
										]
									},
									"functionSelector": "d335993a",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 759,
												"name": "onlyOwner",
												"nameLocations": [
													"4640:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4640:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4640:9:6"
										},
										{
											"arguments": [
												{
													"id": 762,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 757,
													"src": "4668:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 763,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 761,
												"name": "mustBeWhitelisted",
												"nameLocations": [
													"4650:17:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 610,
												"src": "4650:17:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4650:32:6"
										}
									],
									"name": "blacklistOneWhitelistedUserAddress",
									"nameLocation": "4559:34:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "4611:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4603:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4593:37:6"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4683:0:6"
									},
									"scope": 1367,
									"src": "4550:429:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "5094:840:6",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "5112:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 880,
														"src": "5104:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 799,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"initialValue": {
													"expression": {
														"id": 801,
														"name": "walletAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5121:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5137:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5121:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5104:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 804,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5157:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5167:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5157:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "IfStatement",
												"src": "5153:69:6",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "5170:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 807,
																	"name": "InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "5191:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5191:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 809,
															"nodeType": "RevertStatement",
															"src": "5184:27:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 849,
													"nodeType": "Block",
													"src": "5266:327:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 819,
																		"name": "walletAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "5284:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 821,
																	"indexExpression": {
																		"id": 820,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "5300:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5284:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5314:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5306:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 822,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5306:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5306:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5284:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 831,
															"nodeType": "IfStatement",
															"src": "5280:91:6",
															"trueBody": {
																"id": 830,
																"nodeType": "Block",
																"src": "5318:53:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 827,
																				"name": "ZeroAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "5343:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5343:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 829,
																		"nodeType": "RevertStatement",
																		"src": "5336:20:6"
																	}
																]
															}
														},
														{
															"condition": {
																"baseExpression": {
																	"id": 832,
																	"name": "usersWhitelistedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "5388:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 836,
																"indexExpression": {
																	"baseExpression": {
																		"id": 833,
																		"name": "walletAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "5414:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 835,
																	"indexExpression": {
																		"id": 834,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 813,
																		"src": "5430:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5414:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5388:45:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 844,
															"nodeType": "IfStatement",
															"src": "5384:140:6",
															"trueBody": {
																"id": 843,
																"nodeType": "Block",
																"src": "5435:89:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 838,
																						"name": "walletAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "5490:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 840,
																					"indexExpression": {
																						"id": 839,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 813,
																						"src": "5506:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5490:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 837,
																				"name": "UserAddressAlreadyWhitelisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "5460:29:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5460:49:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 842,
																		"nodeType": "RevertStatement",
																		"src": "5453:56:6"
																	}
																]
															}
														},
														{
															"id": 848,
															"nodeType": "UncheckedBlock",
															"src": "5537:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5565:3:6",
																		"subExpression": {
																			"id": 845,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 813,
																			"src": "5567:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 847,
																	"nodeType": "ExpressionStatement",
																	"src": "5565:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "5252:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 817,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5256:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5252:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"initializationExpression": {
													"assignments": [
														813
													],
													"declarations": [
														{
															"constant": false,
															"id": 813,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5245:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 850,
															"src": "5237:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 812,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5237:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 815,
													"initialValue": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5249:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5237:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5232:361:6"
											},
											{
												"body": {
													"id": 874,
													"nodeType": "Block",
													"src": "5637:226:6",
													"statements": [
														{
															"expression": {
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 858,
																		"name": "usersWhitelistedForSurvey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5651:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 862,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 859,
																			"name": "walletAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "5677:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 861,
																		"indexExpression": {
																			"id": 860,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "5693:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5677:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5651:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5699:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5651:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 865,
															"nodeType": "ExpressionStatement",
															"src": "5651:52:6"
														},
														{
															"id": 869,
															"nodeType": "UncheckedBlock",
															"src": "5717:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5745:34:6",
																		"subExpression": {
																			"id": 866,
																			"name": "numberOfWhitelistedUserAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "5747:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 868,
																	"nodeType": "ExpressionStatement",
																	"src": "5745:34:6"
																}
															]
														},
														{
															"id": 873,
															"nodeType": "UncheckedBlock",
															"src": "5807:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "5835:3:6",
																		"subExpression": {
																			"id": 870,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "5837:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 872,
																	"nodeType": "ExpressionStatement",
																	"src": "5835:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "5623:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 856,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5627:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5623:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 875,
												"initializationExpression": {
													"assignments": [
														852
													],
													"declarations": [
														{
															"constant": false,
															"id": 852,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5616:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 875,
															"src": "5608:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 851,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5608:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 854,
													"initialValue": {
														"hexValue": "30",
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5620:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5608:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "5603:260:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 877,
															"name": "walletAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "5911:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 876,
														"name": "MultipleUserAddressesWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "5878:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5878:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 879,
												"nodeType": "EmitStatement",
												"src": "5873:54:6"
											}
										]
									},
									"functionSelector": "98b48493",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 797,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 796,
												"name": "onlyOwner",
												"nameLocations": [
													"5084:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5084:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5084:9:6"
										}
									],
									"name": "whitelistMultipleUserAddresses",
									"nameLocation": "4994:30:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "5053:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "5034:34:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 792,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5034:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 793,
													"nodeType": "ArrayTypeName",
													"src": "5034:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5024:50:6"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5094:0:6"
									},
									"scope": 1367,
									"src": "4985:949:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "6060:848:6",
										"statements": [
											{
												"assignments": [
													890
												],
												"declarations": [
													{
														"constant": false,
														"id": 890,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6078:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "6070:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6070:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"expression": {
														"id": 891,
														"name": "walletAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "6087:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6103:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6087:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6070:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "6123:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6133:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6123:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "6119:69:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "6136:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 897,
																	"name": "InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "6157:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6157:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "6150:27:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 940,
													"nodeType": "Block",
													"src": "6232:324:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 909,
																		"name": "walletAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "6250:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 911,
																	"indexExpression": {
																		"id": 910,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "6266:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6250:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6280:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6272:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 912,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6272:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6272:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6250:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 921,
															"nodeType": "IfStatement",
															"src": "6246:91:6",
															"trueBody": {
																"id": 920,
																"nodeType": "Block",
																"src": "6284:53:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 917,
																				"name": "ZeroAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "6309:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6309:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 919,
																		"nodeType": "RevertStatement",
																		"src": "6302:20:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "6354:46:6",
																"subExpression": {
																	"baseExpression": {
																		"id": 922,
																		"name": "usersWhitelistedForSurvey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "6355:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 926,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 923,
																			"name": "walletAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "6381:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 925,
																		"indexExpression": {
																			"id": 924,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "6397:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6381:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6355:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 935,
															"nodeType": "IfStatement",
															"src": "6350:137:6",
															"trueBody": {
																"id": 934,
																"nodeType": "Block",
																"src": "6402:85:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 929,
																						"name": "walletAddresses",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 884,
																						"src": "6453:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 931,
																					"indexExpression": {
																						"id": 930,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 903,
																						"src": "6469:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6453:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 928,
																				"name": "UserAddressNotWhitelisted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "6427:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6427:45:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 933,
																		"nodeType": "RevertStatement",
																		"src": "6420:52:6"
																	}
																]
															}
														},
														{
															"id": 939,
															"nodeType": "UncheckedBlock",
															"src": "6500:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "6528:3:6",
																		"subExpression": {
																			"id": 936,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "6530:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 938,
																	"nodeType": "ExpressionStatement",
																	"src": "6528:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 906,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "6218:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 907,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "6222:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6218:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"initializationExpression": {
													"assignments": [
														903
													],
													"declarations": [
														{
															"constant": false,
															"id": 903,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6211:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 941,
															"src": "6203:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 902,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6203:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 905,
													"initialValue": {
														"hexValue": "30",
														"id": 904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6215:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6203:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "6198:358:6"
											},
											{
												"body": {
													"id": 965,
													"nodeType": "Block",
													"src": "6600:227:6",
													"statements": [
														{
															"expression": {
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 949,
																		"name": "usersWhitelistedForSurvey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "6614:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 953,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 950,
																			"name": "walletAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "6640:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 952,
																		"indexExpression": {
																			"id": 951,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "6656:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6640:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6614:45:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6662:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6614:53:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 956,
															"nodeType": "ExpressionStatement",
															"src": "6614:53:6"
														},
														{
															"id": 960,
															"nodeType": "UncheckedBlock",
															"src": "6681:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": true,
																		"src": "6709:34:6",
																		"subExpression": {
																			"id": 957,
																			"name": "numberOfWhitelistedUserAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 498,
																			"src": "6711:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 959,
																	"nodeType": "ExpressionStatement",
																	"src": "6709:34:6"
																}
															]
														},
														{
															"id": 964,
															"nodeType": "UncheckedBlock",
															"src": "6771:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "6799:3:6",
																		"subExpression": {
																			"id": 961,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "6801:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 963,
																	"nodeType": "ExpressionStatement",
																	"src": "6799:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 946,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "6586:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 947,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "6590:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6586:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 966,
												"initializationExpression": {
													"assignments": [
														943
													],
													"declarations": [
														{
															"constant": false,
															"id": 943,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6579:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 966,
															"src": "6571:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 942,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6571:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 945,
													"initialValue": {
														"hexValue": "30",
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6583:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6571:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "6566:261:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 968,
															"name": "walletAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "6885:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														],
														"id": 967,
														"name": "MultipleWhitelistedUserAddressesBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "6841:43:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6841:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "EmitStatement",
												"src": "6836:65:6"
											}
										]
									},
									"functionSelector": "9a0474e8",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 887,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 886,
												"name": "onlyOwner",
												"nameLocations": [
													"6050:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6050:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6050:9:6"
										}
									],
									"name": "blacklistMultipleWhitelistedUserAddresses",
									"nameLocation": "5949:41:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "walletAddresses",
												"nameLocation": "6019:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "6000:34:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 882,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6000:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 883,
													"nodeType": "ArrayTypeName",
													"src": "6000:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:50:6"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6060:0:6"
									},
									"scope": 1367,
									"src": "5940:968:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "7190:379:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 994,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7227:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ClosedSurvey_$1367",
																			"typeString": "contract ClosedSurvey"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ClosedSurvey_$1367",
																			"typeString": "contract ClosedSurvey"
																		}
																	],
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7219:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7219:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7219:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 990,
																"name": "cUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "7204:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																	"typeString": "contract IERC20Metadata"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7209:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 182,
															"src": "7204:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7204:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 997,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "7236:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7204:63:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "7200:130:6",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "7269:61:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 999,
																	"name": "InsufficientContractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7290:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7290:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1001,
															"nodeType": "RevertStatement",
															"src": "7283:36:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "numberOfRewardedParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "7343:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1005,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7375:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7343:58:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "IfStatement",
												"src": "7339:121:6",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "7403:57:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1007,
																	"name": "AllParticipantsRewarded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "7424:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7424:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1009,
															"nodeType": "RevertStatement",
															"src": "7417:32:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1013,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "7506:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1012,
														"name": "markParticipantAsHavingClaimedReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "7469:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7469:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "7469:51:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "7548:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1016,
														"name": "rewardParticipant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "7530:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7530:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "7530:32:6"
											}
										]
									},
									"functionSelector": "a0858343",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 977,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 976,
												"name": "whenNotPaused",
												"nameLocations": [
													"7017:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "7017:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7017:13:6"
										},
										{
											"id": 979,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 978,
												"name": "nonReentrant",
												"nameLocations": [
													"7039:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "7039:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7039:12:6"
										},
										{
											"arguments": [
												{
													"id": 981,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 974,
													"src": "7076:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 982,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 980,
												"name": "onlyValidSender",
												"nameLocations": [
													"7060:15:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "7060:15:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7060:30:6"
										},
										{
											"arguments": [
												{
													"id": 984,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 974,
													"src": "7122:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 985,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 983,
												"name": "onlyWhitelistedAddress",
												"nameLocations": [
													"7099:22:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 594,
												"src": "7099:22:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7099:37:6"
										},
										{
											"arguments": [
												{
													"id": 987,
													"name": "walletAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 974,
													"src": "7171:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "onlyUnrewardedParticipant",
												"nameLocations": [
													"7145:25:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 640,
												"src": "7145:25:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7145:40:6"
										}
									],
									"name": "processRewardClaimByParticipant",
									"nameLocation": "6923:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "6972:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6964:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6954:37:6"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7190:0:6"
									},
									"scope": 1367,
									"src": "6914:655:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "7677:151:6",
										"statements": [
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1026,
															"name": "participantsWhoHaveClaimedRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "7687:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1028,
														"indexExpression": {
															"id": 1027,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7721:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7687:59:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7749:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7687:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "7687:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1033,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "7796:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1032,
														"name": "ParticipantMarkedAsRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7768:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7768:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "EmitStatement",
												"src": "7763:58:6"
											}
										]
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markParticipantAsHavingClaimedReward",
									"nameLocation": "7584:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "7638:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "7630:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7620:48:6"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7677:0:6"
									},
									"scope": 1367,
									"src": "7575:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "7903:416:6",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7918:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1066,
														"src": "7913:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7913:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"arguments": [
														{
															"id": 1046,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "7955:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "rewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "7993:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1044,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7928:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7933:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "7928:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7928:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7913:121:6"
											},
											{
												"condition": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8048:8:6",
													"subExpression": {
														"id": 1050,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "8049:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "8044:68:6",
												"trueBody": {
													"id": 1055,
													"nodeType": "Block",
													"src": "8058:54:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1052,
																	"name": "RewardTransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "8079:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1054,
															"nodeType": "RevertStatement",
															"src": "8072:29:6"
														}
													]
												}
											},
											{
												"id": 1060,
												"nodeType": "UncheckedBlock",
												"src": "8121:65:6",
												"statements": [
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "8145:30:6",
															"subExpression": {
																"id": 1057,
																"name": "numberOfRewardedParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "8147:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "8145:30:6"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1062,
															"name": "participantWalletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "8233:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "rewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "8271:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "ParticipantRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "8200:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:112:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "EmitStatement",
												"src": "8195:117:6"
											}
										]
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardParticipant",
									"nameLocation": "7843:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "participantWalletAddress",
												"nameLocation": "7869:24:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "7861:32:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7860:34:6"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7903:0:6"
									},
									"scope": 1367,
									"src": "7834:485:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "8453:320:6",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "8471:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1116,
														"src": "8463:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8463:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1082,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8504:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ClosedSurvey_$1367",
																		"typeString": "contract ClosedSurvey"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ClosedSurvey_$1367",
																		"typeString": "contract ClosedSurvey"
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8496:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1080,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8496:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8496:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1078,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8481:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8486:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "8481:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8481:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1086,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "8524:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8535:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8524:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1093,
												"nodeType": "IfStatement",
												"src": "8520:65:6",
												"trueBody": {
													"id": 1092,
													"nodeType": "Block",
													"src": "8538:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1089,
																	"name": "NoRewardFunds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "8559:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8559:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1091,
															"nodeType": "RevertStatement",
															"src": "8552:22:6"
														}
													]
												}
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8599:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1116,
														"src": "8594:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1094,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8594:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1102,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1098,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "8623:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8623:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "8632:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1096,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8609:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8614:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "8609:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8609:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8594:46:6"
											},
											{
												"condition": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8654:8:6",
													"subExpression": {
														"id": 1103,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "8655:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1109,
												"nodeType": "IfStatement",
												"src": "8650:64:6",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "8664:50:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1105,
																	"name": "WithdrawalFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "8685:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8685:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1107,
															"nodeType": "RevertStatement",
															"src": "8678:25:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1111,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "8749:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8749:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "8758:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1110,
														"name": "RewardFundsWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "8728:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8728:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "EmitStatement",
												"src": "8723:43:6"
											}
										]
									},
									"functionSelector": "f22069df",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1070,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1069,
												"name": "onlyOwner",
												"nameLocations": [
													"8396:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8396:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8396:9:6"
										},
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "whenNotPaused",
												"nameLocations": [
													"8414:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "8414:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8414:13:6"
										},
										{
											"id": 1074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1073,
												"name": "nonReentrant",
												"nameLocations": [
													"8436:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 431,
												"src": "8436:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8436:12:6"
										}
									],
									"name": "withdrawAllRewardFundsToResearcher",
									"nameLocation": "8334:34:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8368:2:6"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8453:0:6"
									},
									"scope": 1367,
									"src": "8325:448:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "8899:516:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "_newRewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "8913:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8952:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8913:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "8909:104:6",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "8955:58:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1127,
																	"name": "InvalidRewardAmountGiven",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "8976:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8976:26:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "8969:33:6"
														}
													]
												}
											},
											{
												"assignments": [
													1133
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "oldRewardAmountPerParticipantInWei",
														"nameLocation": "9030:34:6",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "9022:42:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1132,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9022:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"id": 1134,
													"name": "rewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "9067:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9022:76:6"
											},
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "newRewardAmountPerParticipantInWei",
														"nameLocation": "9117:34:6",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "9109:42:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"id": 1138,
													"name": "_newRewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1119,
													"src": "9154:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:80:6"
											},
											{
												"expression": {
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1140,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "9199:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1141,
														"name": "newRewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "9233:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9199:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "9199:68:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1145,
															"name": "oldRewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "9316:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1146,
															"name": "newRewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "9364:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1144,
														"name": "RewardAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "9283:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9283:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "EmitStatement",
												"src": "9278:130:6"
											}
										]
									},
									"functionSelector": "64bb632f",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1121,
												"name": "onlyOwner",
												"nameLocations": [
													"8889:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8889:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "8889:9:6"
										}
									],
									"name": "updateRewardAmountPerParticipant",
									"nameLocation": "8788:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "_newRewardAmountPerParticipantInWei",
												"nameLocation": "8838:35:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "8830:43:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8830:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8820:59:6"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8899:0:6"
									},
									"scope": 1367,
									"src": "8779:636:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "9536:496:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1157,
														"name": "_newTargetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "9550:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9584:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9550:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "9546:108:6",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "9587:67:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1160,
																	"name": "InvalidNumberOfTargetParticipants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "9608:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9608:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "9601:42:6"
														}
													]
												}
											},
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "oldTargetNumberOfParticipants",
														"nameLocation": "9672:29:6",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "9664:37:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9664:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"id": 1167,
													"name": "targetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 494,
													"src": "9704:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9664:66:6"
											},
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "newTargetNumberOfParticipants",
														"nameLocation": "9749:29:6",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "9741:37:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1172,
												"initialValue": {
													"id": 1171,
													"name": "_newTargetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1152,
													"src": "9781:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:70:6"
											},
											{
												"expression": {
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1173,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "9822:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1174,
														"name": "newTargetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "9851:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9822:58:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "9822:58:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1178,
															"name": "oldTargetNumberOfParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "9943:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1179,
															"name": "newTargetNumberOfParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "9986:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1177,
														"name": "TargetNumberOfParticipantsUpdates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "9896:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9896:129:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "EmitStatement",
												"src": "9891:134:6"
											}
										]
									},
									"functionSelector": "528780cc",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1154,
												"name": "onlyOwner",
												"nameLocations": [
													"9526:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9526:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "9526:9:6"
										}
									],
									"name": "updateTargetNumberOfParticipants",
									"nameLocation": "9430:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_newTargetNumberOfParticipants",
												"nameLocation": "9480:30:6",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "9472:38:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9462:54:6"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9536:0:6"
									},
									"scope": 1367,
									"src": "9421:611:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "10080:25:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1188,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "10090:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10090:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "10090:8:6"
											}
										]
									},
									"functionSelector": "e082fe2a",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1185,
												"name": "onlyOwner",
												"nameLocations": [
													"10070:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10070:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "10070:9:6"
										}
									],
									"name": "pauseSurvey",
									"nameLocation": "10047:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10058:2:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10080:0:6"
									},
									"scope": 1367,
									"src": "10038:67:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "10155:27:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1197,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "10165:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10165:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "10165:10:6"
											}
										]
									},
									"functionSelector": "3960fc66",
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1195,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1194,
												"name": "onlyOwner",
												"nameLocations": [
													"10145:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10145:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "10145:9:6"
										}
									],
									"name": "unpauseSurvey",
									"nameLocation": "10120:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10133:2:6"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10155:0:6"
									},
									"scope": 1367,
									"src": "10111:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "10339:823:6",
										"statements": [
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "10357:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "10349:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10349:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"expression": {
														"id": 1212,
														"name": "registeredAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "10366:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
															"typeString": "address[] calldata"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10386:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "10366:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10349:43:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "10406:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10416:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10406:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1222,
												"nodeType": "IfStatement",
												"src": "10402:69:6",
												"trueBody": {
													"id": 1221,
													"nodeType": "Block",
													"src": "10419:52:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1218,
																	"name": "InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "10440:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10440:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1220,
															"nodeType": "RevertStatement",
															"src": "10433:27:6"
														}
													]
												}
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "whitelistedCount",
														"nameLocation": "10489:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "10481:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10481:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1226,
												"initialValue": {
													"hexValue": "30",
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10508:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10481:28:6"
											},
											{
												"body": {
													"id": 1248,
													"nodeType": "Block",
													"src": "10553:189:6",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"id": 1234,
																	"name": "usersWhitelistedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "10571:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1238,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1235,
																		"name": "registeredAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "10597:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1237,
																	"indexExpression": {
																		"id": 1236,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "10617:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10597:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10571:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1243,
															"nodeType": "IfStatement",
															"src": "10567:106:6",
															"trueBody": {
																"id": 1242,
																"nodeType": "Block",
																"src": "10622:51:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "10640:18:6",
																			"subExpression": {
																				"id": 1239,
																				"name": "whitelistedCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1224,
																				"src": "10640:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1241,
																		"nodeType": "ExpressionStatement",
																		"src": "10640:18:6"
																	}
																]
															}
														},
														{
															"id": 1247,
															"nodeType": "UncheckedBlock",
															"src": "10686:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "10714:3:6",
																		"subExpression": {
																			"id": 1244,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "10716:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1246,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1231,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "10539:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1232,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "10543:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10539:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"initializationExpression": {
													"assignments": [
														1228
													],
													"declarations": [
														{
															"constant": false,
															"id": 1228,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10532:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1249,
															"src": "10524:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1227,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10524:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1230,
													"initialValue": {
														"hexValue": "30",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10536:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10524:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "10519:223:6"
											},
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "whitelistedAddresses",
														"nameLocation": "10769:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "10752:37:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1252,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10752:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1253,
															"nodeType": "ArrayTypeName",
															"src": "10752:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1260,
												"initialValue": {
													"arguments": [
														{
															"id": 1258,
															"name": "whitelistedCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "10806:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10792:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1255,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10796:7:6",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1256,
															"nodeType": "ArrayTypeName",
															"src": "10796:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10792:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10752:71:6"
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "10841:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1296,
														"src": "10833:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10833:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"hexValue": "30",
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10849:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10833:17:6"
											},
											{
												"body": {
													"id": 1292,
													"nodeType": "Block",
													"src": "10894:225:6",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"id": 1272,
																	"name": "usersWhitelistedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "10912:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1276,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1273,
																		"name": "registeredAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "10938:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1275,
																	"indexExpression": {
																		"id": 1274,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "10958:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10938:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10912:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1287,
															"nodeType": "IfStatement",
															"src": "10908:142:6",
															"trueBody": {
																"id": 1286,
																"nodeType": "Block",
																"src": "10963:87:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1277,
																					"name": "whitelistedAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1254,
																					"src": "10981:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1280,
																				"indexExpression": {
																					"id": 1279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "11002:7:6",
																					"subExpression": {
																						"id": 1278,
																						"name": "index",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "11002:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "10981:29:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1281,
																					"name": "registeredAddresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1204,
																					"src": "11013:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																						"typeString": "address[] calldata"
																					}
																				},
																				"id": 1283,
																				"indexExpression": {
																					"id": 1282,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1266,
																					"src": "11033:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11013:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10981:54:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1285,
																		"nodeType": "ExpressionStatement",
																		"src": "10981:54:6"
																	}
																]
															}
														},
														{
															"id": 1291,
															"nodeType": "UncheckedBlock",
															"src": "11063:46:6",
															"statements": [
																{
																	"expression": {
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "11091:3:6",
																		"subExpression": {
																			"id": 1288,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "11093:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1290,
																	"nodeType": "ExpressionStatement",
																	"src": "11091:3:6"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1269,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "10880:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1270,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "10884:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10880:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"initializationExpression": {
													"assignments": [
														1266
													],
													"declarations": [
														{
															"constant": false,
															"id": 1266,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10873:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1293,
															"src": "10865:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1265,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10865:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1268,
													"initialValue": {
														"hexValue": "30",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10877:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10865:13:6"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "10860:259:6"
											},
											{
												"expression": {
													"id": 1294,
													"name": "whitelistedAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1254,
													"src": "11135:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1295,
												"nodeType": "Return",
												"src": "11128:27:6"
											}
										]
									},
									"functionSelector": "a34db0a0",
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWhitelistedAddressesFromRegisteredAddresses",
									"nameLocation": "10197:46:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "registeredAddresses",
												"nameLocation": "10272:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "10253:38:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1202,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10253:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1203,
													"nodeType": "ArrayTypeName",
													"src": "10253:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10243:54:6"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "10321:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1206,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10321:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1207,
													"nodeType": "ArrayTypeName",
													"src": "10321:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10320:18:6"
									},
									"scope": 1367,
									"src": "10188:974:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "11285:72:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1304,
														"name": "participantsWhoHaveClaimedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "11302:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1306,
													"indexExpression": {
														"id": 1305,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1299,
														"src": "11336:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11302:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1307,
												"nodeType": "Return",
												"src": "11295:55:6"
											}
										]
									},
									"functionSelector": "6ff65c20",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfParticipantHasAlreadyClaimedReward",
									"nameLocation": "11177:41:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "11236:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11228:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11218:37:6"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "11279:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11279:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11278:6:6"
									},
									"scope": 1367,
									"src": "11168:189:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "11470:64:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1316,
														"name": "usersWhitelistedForSurvey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "11487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1318,
													"indexExpression": {
														"id": 1317,
														"name": "walletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "11513:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11487:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1319,
												"nodeType": "Return",
												"src": "11480:47:6"
											}
										]
									},
									"functionSelector": "fc05542a",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfUserAddressIsWhitelisted",
									"nameLocation": "11372:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "11421:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "11413:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11413:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11403:37:6"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "11464:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11464:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11463:6:6"
									},
									"scope": 1367,
									"src": "11363:171:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "11647:65:6",
										"statements": [
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11664:41:6",
													"subExpression": {
														"baseExpression": {
															"id": 1328,
															"name": "usersWhitelistedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "11665:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1330,
														"indexExpression": {
															"id": 1329,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "11691:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11665:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1332,
												"nodeType": "Return",
												"src": "11657:48:6"
											}
										]
									},
									"functionSelector": "85737020",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfUserAddressIsBlacklisted",
									"nameLocation": "11549:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "11598:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "11590:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11580:37:6"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "11641:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11641:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11640:6:6"
									},
									"scope": 1367,
									"src": "11540:172:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "11824:55:6",
										"statements": [
											{
												"expression": {
													"id": 1339,
													"name": "rewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "11841:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1340,
												"nodeType": "Return",
												"src": "11834:38:6"
											}
										]
									},
									"functionSelector": "7069243c",
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmountPerParticipantInWei",
									"nameLocation": "11727:34:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11761:2:6"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "11811:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11811:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11810:9:6"
									},
									"scope": 1367,
									"src": "11718:161:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "11960:52:6",
										"statements": [
											{
												"expression": {
													"id": 1347,
													"name": "numberOfRewardedParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 496,
													"src": "11977:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1348,
												"nodeType": "Return",
												"src": "11970:35:6"
											}
										]
									},
									"functionSelector": "741ae614",
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfRewardedParticipants",
									"nameLocation": "11894:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11925:2:6"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "11951:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11951:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11950:9:6"
									},
									"scope": 1367,
									"src": "11885:127:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "12091:50:6",
										"statements": [
											{
												"expression": {
													"id": 1355,
													"name": "targetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 494,
													"src": "12108:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1356,
												"nodeType": "Return",
												"src": "12101:33:6"
											}
										]
									},
									"functionSelector": "6fa1c59d",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTargetNumberOfParticipants",
									"nameLocation": "12027:29:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12056:2:6"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "12082:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12082:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12081:9:6"
									},
									"scope": 1367,
									"src": "12018:123:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "12254:56:6",
										"statements": [
											{
												"expression": {
													"id": 1363,
													"name": "numberOfWhitelistedUserAddresses",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 498,
													"src": "12271:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1362,
												"id": 1364,
												"nodeType": "Return",
												"src": "12264:39:6"
											}
										]
									},
									"functionSelector": "d9084326",
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfWhitelistedUserAddresses",
									"nameLocation": "12156:35:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12191:2:6"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "12241:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12241:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12240:9:6"
									},
									"scope": 1367,
									"src": "12147:163:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1368,
							"src": "330:11982:6",
							"usedErrors": [
								13,
								18,
								303,
								306,
								412,
								546,
								548,
								550,
								554,
								558,
								562,
								564,
								566,
								568,
								572,
								574,
								576,
								578
							],
							"usedEvents": [
								24,
								295,
								300,
								502,
								507,
								511,
								516,
								522,
								526,
								532,
								538,
								544
							]
						}
					],
					"src": "32:12689:6"
				},
				"id": 6
			}
		}
	}
}