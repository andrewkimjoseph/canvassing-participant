{
	"id": "e19853d6d367bd7aa0229f7f3e270ad9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"smart-contract/hardhat/contracts/ClosedSurveyV4.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\n// Author: @andrewkimjoseph\n\n/**\n * @notice Contract for managing a closed survey system with participant rewards\n * @dev Inherits from Ownable for access control, ReentrancyGuard for security, and Pausable for emergency stops\n */\ncontract ClosedSurveyV4 is Ownable, ReentrancyGuard, Pausable {\n    using ECDSA for bytes32;\n\n    /**\n     * @notice Reference to the cUSD token contract\n     */\n    IERC20Metadata public immutable cUSD;\n\n    /**\n     * @notice Mapping to track participants who have received rewards\n     */\n    mapping(address => bool) private rewardedParticipants;\n\n    /**\n     * @notice Mapping to track participants who have been screened for the survey\n     */\n    mapping(address => bool) private participantsScreenedForSurvey;\n\n    /**\n     * @notice Mapping to track which signatures have been used for claiming rewards\n     */\n    mapping(bytes => bool) private signaturesUsedForClaiming;\n\n    /**\n     * @notice Amount of cUSD to reward each participant\n     */\n    uint256 public rewardAmountPerParticipantInWei;\n\n    /**\n     * @notice Maximum number of participants allowed in the survey\n     */\n    uint256 public targetNumberOfParticipants;\n\n    /**\n     * @notice Counter for number of participants who have been rewarded\n     */\n    uint256 private numberOfRewardedParticipants;\n\n    /**\n     * @notice Counter for number of rewards that have been claimed\n     */\n    uint256 private numberOfClaimedRewards;\n\n    /**\n     * @notice Counter for number of participants who have been screened\n     */\n    uint256 public numberOfScreenedParticipants;\n\n    /**\n     * @notice Counter for number of signatures that have been used\n     */\n    uint256 public numberOfUsedSignatures;\n\n    /**\n     * @notice Emitted when a participant completes the screening process\n     * @param participant The address of the screened participant\n     */\n    event ParticipantScreened(address participant);\n\n    /**\n     * @notice Emitted when a participant successfully claims their reward\n     * @param participant The address of the rewarded participant\n     * @param rewardAmount The amount of cUSD rewarded in wei\n     */\n    event ParticipantRewarded(address participant, uint256 rewardAmount);\n\n    /**\n     * @notice Emitted when a signature is used to claim a reward\n     * @param signature The signature that was used\n     * @param participant The address of the participant who used the signature\n     */\n    event SignatureUsed(bytes signature, address participant);\n\n    /**\n     * @notice Emitted when a participant is marked as having received their reward\n     * @param participant The address of the participant marked as rewarded\n     */\n    event ParticipantMarkedAsRewarded(address participant);\n\n    /**\n     * @notice Emitted when reward funds are withdrawn by the researcher\n     * @param researcher The address of the researcher who withdrew the funds\n     * @param rewardAmount The amount of cUSD withdrawn in wei\n     */\n    event RewardFundsWithdrawn(address researcher, uint256 rewardAmount);\n\n    /**\n     * @notice Emitted when the reward amount per participant is updated\n     * @param oldcUSDRewardAmountPerParticipantInWei The previous reward amount\n     * @param newcUSDRewardAmountPerParticipantInWei The new reward amount\n     */\n    event RewardAmountUpdated(\n        uint256 oldcUSDRewardAmountPerParticipantInWei,\n        uint256 newcUSDRewardAmountPerParticipantInWei\n    );\n\n    /**\n     * @notice Emitted when the target number of participants is updated\n     * @param oldTargetNumberOfParticipants The previous target number\n     * @param newTargetNumberOfParticipants The new target number\n     */\n    event TargetNumberOfParticipantsUpdated(\n        uint256 oldTargetNumberOfParticipants,\n        uint256 newTargetNumberOfParticipants\n    );\n\n    /**\n     * @dev Verifies that the signature provided matches the participant's data and was signed by the contract owner\n     * @param participant The wallet address of the participant claiming the reward\n     * @param rewardId Unique identifier for this reward claim\n     * @param nonce Unique number to prevent relay attacks\n     * @param signature Cryptographic signature generated by the contract owner\n     */\n    modifier onlyIfGivenSignatureIsValid(\n        address participant,\n        string memory rewardId,\n        uint256 nonce,\n        bytes memory signature\n    ) {\n        require(\n            verifySignature(participant, rewardId, nonce, signature),\n            \"Invalid signature\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Ensures a signature hasn't been used before to prevent replay attacks\n     * @param signature - The cryptographic signature to check\n     */\n    modifier onlyIfGivenSignatureIsUnused(bytes memory signature) {\n        require(\n            !signaturesUsedForClaiming[signature],\n            \"Signature already used\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Ensures participant hasn't been screened yet\n     * @param participant - Address of the participant to check\n     */\n    modifier onlyUnscreenedParticipant(address participant) {\n        require(\n            !participantsScreenedForSurvey[participant],\n            \"Only unscreened address\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Throws if called for a [participant] that is unscreened.\n     */\n    modifier mustBeScreened(address participant) {\n        require(participantsScreenedForSurvey[participant], \"Must be screened\");\n        _;\n    }\n\n    /**\n     * @dev Throws if called for a [participant] that is rewarded.\n     */\n    modifier onlyUnrewardedParticipant(address participant) {\n        require(\n            !rewardedParticipants[participant],\n            \"Participant already rewarded\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Throws if called for a [participant] that is not the [msg.sender].\n     */\n    modifier onlyIfSenderIsGivenParticipant(address participant) {\n        require(msg.sender == participant, \"Only valid sender\");\n        _;\n    }\n\n    /**\n     * @dev Throws if called when [cUSD.balanceOf(address(this))] is < [rewardAmountPerParticipantInWei]\n     */\n    modifier onlyIfContractHasEnoughcUSD() {\n        require(\n            cUSD.balanceOf(address(this)) >= rewardAmountPerParticipantInWei,\n            \"Contract does not have enough cUSD\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Throws if called when [cUSD.balanceOf(address(this))] is == 0.\n     */\n    modifier onlyIfContractHasAnycUSD() {\n        require(\n            cUSD.balanceOf(address(this)) > 0,\n            \"Contract does not have any cUSD\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Throws if called when all participants have been rewarded.\n     */\n    modifier onlyWhenAllParticipantsHaveNotBeenRewarded() {\n        require(\n            numberOfRewardedParticipants < targetNumberOfParticipants,\n            \"All participants have been rewarded\"\n        );\n        _;\n    }\n\n    /**\n     * @notice Initializes the survey contract with initial parameters\n     * @dev Sets up the contract with researcher address, reward amount, participant target, and cUSD token\n     * @param researcher Address of the researcher who will own and manage the contract\n     * @param _rewardAmountPerParticipantInWei Amount in wei to reward each participant\n     * @param _targetNumberOfParticipants Maximum number of participants for the survey\n     * @param cUSDToken Address of the cUSD token contract\n     */\n    constructor(\n        address researcher,\n        uint256 _rewardAmountPerParticipantInWei,\n        uint256 _targetNumberOfParticipants,\n        address cUSDToken\n    ) Ownable(researcher) {\n        require(cUSDToken != address(0), \"Zero address given for cUSD Token\");\n\n        require(researcher != address(0), \"Zero address given for researcher\");\n\n        require(_rewardAmountPerParticipantInWei > 0, \"Invalid reward amount\");\n\n        require(\n            _targetNumberOfParticipants > 0,\n            \"Invalid number of target participants\"\n        );\n\n        cUSD = IERC20Metadata(cUSDToken);\n\n        rewardAmountPerParticipantInWei = _rewardAmountPerParticipantInWei;\n        targetNumberOfParticipants = _targetNumberOfParticipants;\n    }\n\n    /**\n     * @dev Marks a [participant] as [true] in [participantsScreenedForSurvey].\n     */\n    function screenParticipant(address participant)\n        external\n        onlyIfSenderIsGivenParticipant(participant)\n        onlyUnscreenedParticipant(participant)\n    {\n        require(participant != address(0), \"Zero address passed\");\n\n        participantsScreenedForSurvey[participant] = true;\n        unchecked {\n            ++numberOfScreenedParticipants;\n        }\n        emit ParticipantScreened(participant);\n    }\n\n    /**\n     * @dev Gets the message hash that will be signed by the contract owner\n     * @param participant The wallet address of the participant claiming the reward\n     * @param rewardId A unique identifier for this specific reward claim\n     * @param nonce Unique number to prevent relay attacks\n     * @return bytes32 The keccak256 hash of the packed parameters\n     *\n     * The hash is created by tightly packing the parameters in order:\n     * 1. participant Address\n     * 2. rewardId String\n     * 3. nonce Unique number to prevent relay attacks\n     *\n     * This hash must match exactly what is signed off-chain by the contract owner\n     */\n    function getMessageHash(\n        address participant,\n        string memory rewardId,\n        uint256 nonce\n    ) private pure returns (bytes32) {\n        return keccak256(abi.encodePacked(participant, rewardId, nonce));\n    }\n\n    /**\n     * @dev Verifies that a signature is valid for given participant data\n     * @param participant Address of the participant claiming the reward\n     * @param rewardId Unique identifier for this reward claim\n     * @param nonce Unique number to prevent relay attacks\n     * @param signature Cryptographic signature to verify\n     * @return bool True if signature is valid, false otherwise\n     */\n    function verifySignature(\n        address participant,\n        string memory rewardId,\n        uint256 nonce,\n        bytes memory signature\n    ) private view returns (bool) {\n        bytes32 messageHash = getMessageHash(participant, rewardId, nonce);\n        bytes32 ethSignedMessageHash = MessageHashUtils.toEthSignedMessageHash(\n            messageHash\n        );\n        return ethSignedMessageHash.recover(signature) == owner();\n    }\n\n    /**\n     * @notice Allows a participant to claim their reward using a valid signature\n     * @dev Processes the reward claim if all conditions are met and signature is valid\n     * @param participant Address of the participant claiming the reward\n     * @param rewardId Unique identifier for this reward claim\n     * @param nonce Unique number to prevent relay attacks\n     * @param signature Cryptographic signature from the contract owner\n     */\n    function processRewardClaimByParticipant(\n        address participant,\n        string memory rewardId,\n        uint256 nonce,\n        bytes memory signature\n    )\n        external\n        whenNotPaused\n        nonReentrant\n        onlyIfGivenSignatureIsValid(participant, rewardId, nonce, signature)\n        onlyIfGivenSignatureIsUnused(signature)\n        onlyIfContractHasEnoughcUSD\n        onlyWhenAllParticipantsHaveNotBeenRewarded\n        onlyIfSenderIsGivenParticipant(participant)\n        onlyUnrewardedParticipant(participant)\n        mustBeScreened(participant)\n    {\n        bool rewardTransferIsSuccesful = rewardParticipant(participant);\n\n        if (rewardTransferIsSuccesful) {\n            markSignatureAsHavingBeenUsed(signature, participant);\n            markParticipantAsHavingClaimedReward(participant);\n        }\n    }\n\n    /**\n     * @dev Internal function to transfer the reward to a participant\n     * @param participant Address of the participant to reward\n     * @return bool True if the transfer was successful\n     */\n    function rewardParticipant(address participant) private returns (bool) {\n        bool rewardTransferIsSuccesful = cUSD.transfer(\n            participant,\n            rewardAmountPerParticipantInWei\n        );\n\n        if (rewardTransferIsSuccesful) {\n            unchecked {\n                ++numberOfRewardedParticipants;\n            }\n            emit ParticipantRewarded(\n                participant,\n                rewardAmountPerParticipantInWei\n            );\n        }\n\n        return rewardTransferIsSuccesful;\n    }\n\n    /**\n     * @notice Internal helper function to mark a participant as having claimed reward\n     * @param participant - The address of the participant who used the signature\n     */\n    function markParticipantAsHavingClaimedReward(address participant) private {\n        rewardedParticipants[participant] = true;\n\n        unchecked {\n            ++numberOfClaimedRewards;\n        }\n        emit ParticipantMarkedAsRewarded(participant);\n    }\n\n    /**\n     * @notice Internal helper function to mark a signature as used\n     * @param signature - The signature to mark as used\n     * @param participant - The address of the participant who used the signature\n     */\n    function markSignatureAsHavingBeenUsed(\n        bytes memory signature,\n        address participant\n    ) private {\n        signaturesUsedForClaiming[signature] = true;\n\n        unchecked {\n            ++numberOfUsedSignatures;\n        }\n        emit SignatureUsed(signature, participant);\n    }\n\n    /**\n     * @notice Allows the researcher to withdraw all remaining cUSD from the contract\n     * @dev Can only be called by the contract owner when the contract is not paused\n     */\n    function withdrawAllRewardFundsToResearcher()\n        external\n        onlyOwner\n        whenNotPaused\n        onlyIfContractHasAnycUSD\n    {\n        uint256 balance = cUSD.balanceOf(address(this));\n        bool transferIsSuccessful = cUSD.transfer(owner(), balance);\n\n        if (transferIsSuccessful) {\n            emit RewardFundsWithdrawn(owner(), balance);\n        }\n    }\n\n    /**\n     * @notice Updates the reward amount per participant\n     * @dev Can only be called by the contract owner\n     * @param _newRewardAmountPerParticipantInWei - New reward amount in wei\n     */\n    function updateRewardAmountPerParticipant(\n        uint256 _newRewardAmountPerParticipantInWei\n    ) external onlyOwner {\n        require(\n            _newRewardAmountPerParticipantInWei != 0,\n            \"Zero reward amount given\"\n        );\n\n        uint256 oldRewardAmountPerParticipantInWei = rewardAmountPerParticipantInWei;\n\n        uint256 newRewardAmountPerParticipantInWei = _newRewardAmountPerParticipantInWei;\n        rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei;\n\n        emit RewardAmountUpdated(\n            oldRewardAmountPerParticipantInWei,\n            newRewardAmountPerParticipantInWei\n        );\n    }\n\n    /**\n     * @notice Updates the target number of participants for the survey\n     * @dev Can only be called by the contract owner\n     * @param _newTargetNumberOfParticipants - New target number of participants\n     */\n    function updateTargetNumberOfParticipants(\n        uint256 _newTargetNumberOfParticipants\n    ) external onlyOwner {\n        require(\n            _newTargetNumberOfParticipants != 0,\n            \"Zero number of target participants given\"\n        );\n\n        uint256 oldTargetNumberOfParticipants = targetNumberOfParticipants;\n\n        uint256 newTargetNumberOfParticipants = _newTargetNumberOfParticipants;\n\n        targetNumberOfParticipants = newTargetNumberOfParticipants;\n\n        emit TargetNumberOfParticipantsUpdated(\n            oldTargetNumberOfParticipants,\n            newTargetNumberOfParticipants\n        );\n    }\n\n    /**\n     * @notice Pauses all reward claims and withdrawals\n     * @dev Can only be called by the contract owner\n     */\n    function pauseSurvey() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Resumes reward claims and withdrawals\n     * @dev Can only be called by the contract owner\n     */\n    function unpauseSurvey() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @notice Checks if a given participant has been screened\n     * @param participant - Address of the participant to check\n     * @return bool True if the participant has been screened\n     */\n    function checkIfParticipantIsScreened(address participant)\n        external\n        view\n        returns (bool)\n    {\n        return participantsScreenedForSurvey[participant];\n    }\n\n    /**\n     * @notice Checks if a given signature has been used\n     * @param signature Cryptographic signature generated by the contract owner\n     * @return bool True if the signature has been used\n     */\n    function checkIfSignatureIsUsed(bytes memory signature)\n        external\n        view\n        returns (bool)\n    {\n        return signaturesUsedForClaiming[signature];\n    }    \n\n    /**\n     * @notice Gets the current reward amount per participant\n     * @return uint256 The reward amount in wei\n     */\n    function getRewardAmountPerParticipantInWei()\n        external\n        view\n        returns (uint256)\n    {\n        return rewardAmountPerParticipantInWei;\n    }\n\n    /**\n     * @notice Gets the current number of rewarded participants\n     * @return uint256 The number of participants who have been rewarded\n     */\n    function getNumberOfRewardedParticipants() external view returns (uint256) {\n        return numberOfRewardedParticipants;\n    }\n\n    /**\n     * @notice Gets the target number of participants\n     * @return uint256 The maximum number of participants allowed\n     */\n    function getTargetNumberOfParticipants() external view returns (uint256) {\n        return targetNumberOfParticipants;\n    }\n\n    /**\n     * @notice Gets the number of participants who have been screened\n     * @return uint256 The number of screened participants\n     */\n    function getNumberOfScreenedParticipants() external view returns (uint256) {\n        return numberOfScreenedParticipants;\n    }\n\n    /**\n     * @notice Gets the number of signatures that have been used\n     * @return uint256 The number of used signatures\n     */\n    function getNumberOfUsedSignatures() external view returns (uint256) {\n        return numberOfUsedSignatures;\n    }\n\n    /**\n     * @notice Gets the number of rewards that have been claimed\n     * @return uint256 The number of claimed rewards\n     */\n    function getNumberOfClaimedRewards() external view returns (uint256) {\n        return numberOfClaimedRewards;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "657:1315:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE DIV NUMBER SWAP4 BYTE 0x2B DUP15 PUSH14 0x8B7F7F303A7C4E4FB18367FCB81 EXP SWAP14 0xC6 0x2B 0x28 0x4D CALL SWAP2 0xE4 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "657:1315:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220480443931a2b8e6d08b7f7f303a7c4e4fb18367fcb810a9dc62b284df191e4e064736f6c634300081c0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 342,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 461,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3931  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ecb4f0d7a62873c4f90ffd85ea78dc48de62fddc47d4bb7d2bc40b9ec27cfef464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ecb4f0d7a62873c4f90ffd85ea78dc48de62fddc47d4bb7d2bc40b9ec27cfef464736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB4 CREATE 0xD7 0xA6 0x28 PUSH20 0xC4F90FFD85EA78DC48DE62FDDC47D4BB7D2BC40B SWAP15 0xC2 PUSH29 0xFEF464736F6C634300081C003300000000000000000000000000000000 ",
							"sourceMap": "251:3680:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:3680:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ecb4f0d7a62873c4f90ffd85ea78dc48de62fddc47d4bb7d2bc40b9ec27cfef464736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB4 CREATE 0xD7 0xA6 0x28 PUSH20 0xC4F90FFD85EA78DC48DE62FDDC47D4BB7D2BC40B SWAP15 0xC2 PUSH29 0xFEF464736F6C634300081C003300000000000000000000000000000000 ",
							"sourceMap": "251:3680:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toChecksumHexString(address)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3931,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ecb4f0d7a62873c4f90ffd85ea78dc48de62fddc47d4bb7d2bc40b9ec27cfef464736f6c634300081c0033",
									".code": [
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3931,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH23 0x831630F08B8D35435F8576945761134EB73CBED0D9C2EC JUMPDEST PUSH5 0xBF80D3094A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "344:7470:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER PUSH23 0x831630F08B8D35435F8576945761134EB73CBED0D9C2EC JUMPDEST PUSH5 0xBF80D3094A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "344:7470:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203376831630f08b8d35435f8576945761134eb73cbed0d9c2ec5b64bf80d3094a64736f6c634300081c0033",
									".code": [
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3702  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3702  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b240903f0586641671b0fe88bc69d58cdc657e105aa8c2df1721970c058fa46c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b240903f0586641671b0fe88bc69d58cdc657e105aa8c2df1721970c058fa46c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 BLOCKHASH SWAP1 EXTCODEHASH SDIV DUP7 PUSH5 0x1671B0FE88 0xBC PUSH10 0xD58CDC657E105AA8C2DF OR 0x21 SWAP8 0xC SDIV DUP16 LOG4 PUSH13 0x64736F6C634300081C00330000 ",
							"sourceMap": "521:3181:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b240903f0586641671b0fe88bc69d58cdc657e105aa8c2df1721970c058fa46c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 BLOCKHASH SWAP1 EXTCODEHASH SDIV DUP7 PUSH5 0x1671B0FE88 0xBC PUSH10 0xD58CDC657E105AA8C2DF OR 0x21 SWAP8 0xC SDIV DUP16 LOG4 PUSH13 0x64736F6C634300081C00330000 ",
							"sourceMap": "521:3181:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 521,
									"end": 3702,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b240903f0586641671b0fe88bc69d58cdc657e105aa8c2df1721970c058fa46c64736f6c634300081c0033",
									".code": [
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 3702,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:28307  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cb20f7331818f57669171d01c05e9360981a09eef0109f5b1278b98ffce98cb664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb20f7331818f57669171d01c05e9360981a09eef0109f5b1278b98ffce98cb664736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB KECCAK256 0xF7 CALLER XOR XOR CREATE2 PUSH23 0x69171D01C05E9360981A09EEF0109F5B1278B98FFCE98C 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "281:28026:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb20f7331818f57669171d01c05e9360981a09eef0109f5b1278b98ffce98cb664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB KECCAK256 0xF7 CALLER XOR XOR CREATE2 PUSH23 0x69171D01C05E9360981A09EEF0109F5B1278B98FFCE98C 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "281:28026:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 281,
									"end": 28307,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb20f7331818f57669171d01c05e9360981a09eef0109f5b1278b98ffce98cb664736f6c634300081c0033",
									".code": [
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 281,
											"end": 28307,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CODECOPY 0xF8 0xE2 MCOPY PUSH9 0xA389C2A927BB23C6CB SWAP4 0xC7 SWAP13 SWAP4 DUP5 0xEA STOP SDIV MOD 0x2E 0xE0 BALANCE 0xEF 0xD CALL 0xD2 DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f339f8e25e68a389c2a927bb23c6cb93c79c9384ea0005062ee031ef0df1d28e64736f6c634300081c0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":258:2612  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "258:2354:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD SWAP12 0xE7 0x4C 0xDA SSTORE CALLER SWAP14 CALLER POP DUP1 0xCA PUSH0 PUSH11 0x3089CA675C8B749BB38B70 NUMBER INVALID RETURNDATASIZE EXTCODECOPY JUMPDEST SWAP6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "258:2354:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite",
								"ternary(bool,int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 258,
									"end": 2612,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220359be74cda55339d335080ca5f6a3089ca675c8b749bb38b7043fe3d3c5b95b164736f6c634300081c0033",
									".code": [
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 258,
											"end": 2612,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contract/hardhat/contracts/ClosedSurveyV4.sol": {
				"ClosedSurveyV4": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "researcher",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardAmountPerParticipantInWei",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_targetNumberOfParticipants",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "cUSDToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "ParticipantMarkedAsRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ParticipantRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "ParticipantScreened",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldcUSDRewardAmountPerParticipantInWei",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newcUSDRewardAmountPerParticipantInWei",
									"type": "uint256"
								}
							],
							"name": "RewardAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "researcher",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "RewardFundsWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "SignatureUsed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldTargetNumberOfParticipants",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTargetNumberOfParticipants",
									"type": "uint256"
								}
							],
							"name": "TargetNumberOfParticipantsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cUSD",
							"outputs": [
								{
									"internalType": "contract IERC20Metadata",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "checkIfParticipantIsScreened",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "checkIfSignatureIsUsed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfClaimedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfRewardedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfScreenedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfUsedSignatures",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmountPerParticipantInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTargetNumberOfParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numberOfScreenedParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numberOfUsedSignatures",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauseSurvey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "rewardId",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "processRewardClaimByParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardAmountPerParticipantInWei",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "screenParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetNumberOfParticipants",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpauseSurvey",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRewardAmountPerParticipantInWei",
									"type": "uint256"
								}
							],
							"name": "updateRewardAmountPerParticipant",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTargetNumberOfParticipants",
									"type": "uint256"
								}
							],
							"name": "updateTargetNumberOfParticipants",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAllRewardFundsToResearcher",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Inherits from Ownable for access control, ReentrancyGuard for security, and Pausable for emergency stops",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"ParticipantMarkedAsRewarded(address)": {
								"params": {
									"participant": "The address of the participant marked as rewarded"
								}
							},
							"ParticipantRewarded(address,uint256)": {
								"params": {
									"participant": "The address of the rewarded participant",
									"rewardAmount": "The amount of cUSD rewarded in wei"
								}
							},
							"ParticipantScreened(address)": {
								"params": {
									"participant": "The address of the screened participant"
								}
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RewardAmountUpdated(uint256,uint256)": {
								"params": {
									"newcUSDRewardAmountPerParticipantInWei": "The new reward amount",
									"oldcUSDRewardAmountPerParticipantInWei": "The previous reward amount"
								}
							},
							"RewardFundsWithdrawn(address,uint256)": {
								"params": {
									"researcher": "The address of the researcher who withdrew the funds",
									"rewardAmount": "The amount of cUSD withdrawn in wei"
								}
							},
							"SignatureUsed(bytes,address)": {
								"params": {
									"participant": "The address of the participant who used the signature",
									"signature": "The signature that was used"
								}
							},
							"TargetNumberOfParticipantsUpdated(uint256,uint256)": {
								"params": {
									"newTargetNumberOfParticipants": "The new target number",
									"oldTargetNumberOfParticipants": "The previous target number"
								}
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"checkIfParticipantIsScreened(address)": {
								"params": {
									"participant": "- Address of the participant to check"
								},
								"returns": {
									"_0": "bool True if the participant has been screened"
								}
							},
							"checkIfSignatureIsUsed(bytes)": {
								"params": {
									"signature": "Cryptographic signature generated by the contract owner"
								},
								"returns": {
									"_0": "bool True if the signature has been used"
								}
							},
							"constructor": {
								"details": "Sets up the contract with researcher address, reward amount, participant target, and cUSD token",
								"params": {
									"_rewardAmountPerParticipantInWei": "Amount in wei to reward each participant",
									"_targetNumberOfParticipants": "Maximum number of participants for the survey",
									"cUSDToken": "Address of the cUSD token contract",
									"researcher": "Address of the researcher who will own and manage the contract"
								}
							},
							"getNumberOfClaimedRewards()": {
								"returns": {
									"_0": "uint256 The number of claimed rewards"
								}
							},
							"getNumberOfRewardedParticipants()": {
								"returns": {
									"_0": "uint256 The number of participants who have been rewarded"
								}
							},
							"getNumberOfScreenedParticipants()": {
								"returns": {
									"_0": "uint256 The number of screened participants"
								}
							},
							"getNumberOfUsedSignatures()": {
								"returns": {
									"_0": "uint256 The number of used signatures"
								}
							},
							"getRewardAmountPerParticipantInWei()": {
								"returns": {
									"_0": "uint256 The reward amount in wei"
								}
							},
							"getTargetNumberOfParticipants()": {
								"returns": {
									"_0": "uint256 The maximum number of participants allowed"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pauseSurvey()": {
								"details": "Can only be called by the contract owner"
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"processRewardClaimByParticipant(address,string,uint256,bytes)": {
								"details": "Processes the reward claim if all conditions are met and signature is valid",
								"params": {
									"nonce": "Unique number to prevent relay attacks",
									"participant": "Address of the participant claiming the reward",
									"rewardId": "Unique identifier for this reward claim",
									"signature": "Cryptographic signature from the contract owner"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"screenParticipant(address)": {
								"details": "Marks a [participant] as [true] in [participantsScreenedForSurvey]."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpauseSurvey()": {
								"details": "Can only be called by the contract owner"
							},
							"updateRewardAmountPerParticipant(uint256)": {
								"details": "Can only be called by the contract owner",
								"params": {
									"_newRewardAmountPerParticipantInWei": "- New reward amount in wei"
								}
							},
							"updateTargetNumberOfParticipants(uint256)": {
								"details": "Can only be called by the contract owner",
								"params": {
									"_newTargetNumberOfParticipants": "- New target number of participants"
								}
							},
							"withdrawAllRewardFundsToResearcher()": {
								"details": "Can only be called by the contract owner when the contract is not paused"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":669:18988  contract ClosedSurveyV4 is Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7880:8628  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8056:8066  researcher */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":861:912   */\n  mstore\n    /* \"#utility.yul\":834:852   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1238  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1231:1246  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8086:8109  cUSDToken != address(0) */\n  dup2\n  and\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8078:8147  require(cUSDToken != address(0), \"Zero address given for cUSD Token\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1125:1127   */\n  0x20\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8078:8147  require(cUSDToken != address(0), \"Zero address given for cUSD Token\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1107:1128   */\n  mstore\n    /* \"#utility.yul\":1164:1166   */\n  0x21\n    /* \"#utility.yul\":1144:1162   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1137:1167   */\n  mstore\n    /* \"#utility.yul\":1203:1237   */\n  0x5a65726f206164647265737320676976656e20666f72206355534420546f6b65\n    /* \"#utility.yul\":1183:1201   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1176:1238   */\n  mstore\n  shl(0xf9, 0x37)\n    /* \"#utility.yul\":1254:1272   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1247:1278   */\n  mstore\n    /* \"#utility.yul\":1295:1314   */\n  0x84\n  add\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8078:8147  require(cUSDToken != address(0), \"Zero address given for cUSD Token\") */\n  tag_10\n    /* \"#utility.yul\":923:1320   */\n  jump\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8078:8147  require(cUSDToken != address(0), \"Zero address given for cUSD Token\") */\ntag_17:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8166:8190  researcher != address(0) */\n  dup5\n  and\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8158:8228  require(researcher != address(0), \"Zero address given for researcher\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1527:1529   */\n  0x20\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8158:8228  require(researcher != address(0), \"Zero address given for researcher\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1509:1530   */\n  mstore\n    /* \"#utility.yul\":1566:1568   */\n  0x21\n    /* \"#utility.yul\":1546:1564   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1539:1569   */\n  mstore\n    /* \"#utility.yul\":1605:1639   */\n  0x5a65726f206164647265737320676976656e20666f7220726573656172636865\n    /* \"#utility.yul\":1585:1603   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1578:1640   */\n  mstore\n  shl(0xf9, 0x39)\n    /* \"#utility.yul\":1656:1674   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1649:1680   */\n  mstore\n    /* \"#utility.yul\":1697:1716   */\n  0x84\n  add\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8158:8228  require(researcher != address(0), \"Zero address given for researcher\") */\n  tag_10\n    /* \"#utility.yul\":1325:1722   */\n  jump\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8158:8228  require(researcher != address(0), \"Zero address given for researcher\") */\ntag_20:\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8282:8283  0 */\n  0x00\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8247:8279  _rewardAmountPerParticipantInWei */\n  dup4\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8247:8283  _rewardAmountPerParticipantInWei > 0 */\n  gt\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8239:8309  require(_rewardAmountPerParticipantInWei > 0, \"Invalid reward amount\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1929:1931   */\n  0x20\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8239:8309  require(_rewardAmountPerParticipantInWei > 0, \"Invalid reward amount\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1911:1932   */\n  mstore\n    /* \"#utility.yul\":1968:1970   */\n  0x15\n    /* \"#utility.yul\":1948:1966   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1941:1971   */\n  mstore\n    /* \"#utility.yul\":2007:2030   */\n  0x496e76616c69642072657761726420616d6f756e740000000000000000000000\n    /* \"#utility.yul\":1987:2005   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1980:2031   */\n  mstore\n    /* \"#utility.yul\":2048:2066   */\n  0x64\n  add\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8239:8309  require(_rewardAmountPerParticipantInWei > 0, \"Invalid reward amount\") */\n  tag_10\n    /* \"#utility.yul\":1727:2072   */\n  jump\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8239:8309  require(_rewardAmountPerParticipantInWei > 0, \"Invalid reward amount\") */\ntag_23:\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8371:8372  0 */\n  0x00\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8341:8368  _targetNumberOfParticipants */\n  dup3\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8341:8372  _targetNumberOfParticipants > 0 */\n  gt\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8320:8435  require(... */\n  tag_26\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2279:2281   */\n  0x20\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8320:8435  require(... */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2261:2282   */\n  mstore\n    /* \"#utility.yul\":2318:2320   */\n  0x25\n    /* \"#utility.yul\":2298:2316   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2291:2321   */\n  mstore\n    /* \"#utility.yul\":2357:2391   */\n  0x496e76616c6964206e756d626572206f66207461726765742070617274696369\n    /* \"#utility.yul\":2337:2355   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2330:2392   */\n  mstore\n  shl(0xd8, 0x70616e7473)\n    /* \"#utility.yul\":2408:2426   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2401:2436   */\n  mstore\n    /* \"#utility.yul\":2453:2472   */\n  0x84\n  add\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8320:8435  require(... */\n  tag_10\n    /* \"#utility.yul\":2077:2478   */\n  jump\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8320:8435  require(... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8446:8478  cUSD = IERC20Metadata(cUSDToken) */\n  and\n  0x80\n  mstore\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8489:8520  rewardAmountPerParticipantInWei */\n  0x06\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8489:8555  rewardAmountPerParticipantInWei = _rewardAmountPerParticipantInWei */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8565:8591  targetNumberOfParticipants */\n  0x07\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8565:8621  targetNumberOfParticipants = _targetNumberOfParticipants */\n  sstore\n  pop\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":669:18988  contract ClosedSurveyV4 is Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_32)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_31:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_34:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:710   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_36:\n    /* \"#utility.yul\":410:450   */\n  tag_37\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_31\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":512:514   */\n  0x20\n    /* \"#utility.yul\":497:515   */\n  dup7\n  add\n    /* \"#utility.yul\":491:516   */\n  mload\n    /* \"#utility.yul\":606:608   */\n  0x40\n    /* \"#utility.yul\":591:609   */\n  dup8\n  add\n    /* \"#utility.yul\":585:610   */\n  mload\n    /* \"#utility.yul\":400:450   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":491:516   */\n  swap4\n  pop\n    /* \"#utility.yul\":585:610   */\n  swap2\n  pop\n    /* \"#utility.yul\":655:704   */\n  tag_38\n    /* \"#utility.yul\":700:702   */\n  0x60\n    /* \"#utility.yul\":685:703   */\n  dup7\n  add\n    /* \"#utility.yul\":655:704   */\n  tag_31\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":645:704   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:710   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2077:2478   */\ntag_32:\n    /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":669:18988  contract ClosedSurveyV4 is Ownable, ReentrancyGuard, Pausable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":669:18988  contract ClosedSurveyV4 is Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x741ae614\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xc5dac913\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xc5dac913\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe082fe2a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xea1dd101\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf22069df\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf77a953e\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x741ae614\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7a0abf08\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x825f98be\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa6a09811\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc3aa9721\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x627d3eb9\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x627d3eb9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x64bb632f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6fa1c59d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6fa55ed9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7069243c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x1fccf672\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3960fc66\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4074be40\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4fc91ba6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x528780cc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":835:871  IERC20Metadata public immutable cUSD */\n    tag_3:\n      tag_30\n      immutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":200:232   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":182:233   */\n      dup2\n      mstore\n        /* \"#utility.yul\":170:172   */\n      0x20\n        /* \"#utility.yul\":155:173   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":835:871  IERC20Metadata public immutable cUSD */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16498:16569  function unpauseSurvey() external onlyOwner {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":1973:2016  uint256 public numberOfScreenedParticipants */\n    tag_5:\n      tag_36\n      sload(0x0a)\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":390:415   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":378:380   */\n      0x20\n        /* \"#utility.yul\":363:381   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":1973:2016  uint256 public numberOfScreenedParticipants */\n      tag_32\n        /* \"#utility.yul\":244:421   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":2107:2144  uint256 public numberOfUsedSignatures */\n    tag_6:\n      tag_36\n      sload(0x0b)\n      dup2\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15546:16172  function updateTargetNumberOfParticipants(... */\n    tag_7:\n      tag_34\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":822:836   */\n      swap1\n      iszero\n        /* \"#utility.yul\":815:837   */\n      iszero\n        /* \"#utility.yul\":797:838   */\n      dup2\n      mstore\n        /* \"#utility.yul\":785:787   */\n      0x20\n        /* \"#utility.yul\":770:788   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":657:844   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18871:18986  function getNumberOfClaimedRewards() external view returns (uint256) {... */\n    tag_9:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18957:18979  numberOfClaimedRewards */\n      sload(0x09)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18871:18986  function getNumberOfClaimedRewards() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14673:15318  function updateRewardAmountPerParticipant(... */\n    tag_10:\n      tag_34\n      tag_55\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18075:18198  function getTargetNumberOfParticipants() external view returns (uint256) {... */\n    tag_11:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18165:18191  targetNumberOfParticipants */\n      sload(0x07)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18075:18198  function getTargetNumberOfParticipants() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11352:12188  function processRewardClaimByParticipant(... */\n    tag_12:\n      tag_34\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17486:17647  function getRewardAmountPerParticipantInWei()... */\n    tag_13:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17609:17640  rewardAmountPerParticipantInWei */\n      sload(0x06)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17486:17647  function getRewardAmountPerParticipantInWei()... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_34\n      tag_68\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17806:17933  function getNumberOfRewardedParticipants() external view returns (uint256) {... */\n    tag_15:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17898:17926  numberOfRewardedParticipants */\n      sload(0x08)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17806:17933  function getNumberOfRewardedParticipants() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":1430:1476  uint256 public rewardAmountPerParticipantInWei */\n    tag_16:\n      tag_36\n      sload(0x06)\n      dup2\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16780:16962  function checkIfParticipantIsScreened(address participant)... */\n    tag_17:\n      tag_47\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16913:16955  participantsScreenedForSurvey[participant] */\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16886:16890  bool */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16913:16955  participantsScreenedForSurvey[participant] */\n      swap1\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16913:16942  participantsScreenedForSurvey */\n      0x04\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16913:16955  participantsScreenedForSurvey[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16780:16962  function checkIfParticipantIsScreened(address participant)... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_30)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":1567:1608  uint256 public targetNumberOfParticipants */\n    tag_19:\n      tag_36\n      sload(0x07)\n      dup2\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18616:18731  function getNumberOfUsedSignatures() external view returns (uint256) {... */\n    tag_20:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18702:18724  numberOfUsedSignatures */\n      sload(0x0b)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18616:18731  function getNumberOfUsedSignatures() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17177:17350  function checkIfSignatureIsUsed(bytes memory signature)... */\n    tag_21:\n      tag_47\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16303:16370  function pauseSurvey() external onlyOwner {... */\n    tag_22:\n      tag_34\n      tag_96\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8730:9153  function screenParticipant(address participant)... */\n    tag_23:\n      tag_34\n      tag_98\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14087:14464  function withdrawAllRewardFundsToResearcher()... */\n    tag_24:\n      tag_34\n      tag_101\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_34\n      tag_103\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18349:18476  function getNumberOfScreenedParticipants() external view returns (uint256) {... */\n    tag_26:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18441:18469  numberOfScreenedParticipants */\n      sload(0x0a)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":18349:18476  function getNumberOfScreenedParticipants() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16498:16569  function unpauseSurvey() external onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16552:16562  _unpause() */\n      tag_112\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16552:16560  _unpause */\n      tag_113\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16552:16562  _unpause() */\n      jump\t// in\n    tag_112:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16498:16569  function unpauseSurvey() external onlyOwner {... */\n      jump\t// out\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15546:16172  function updateTargetNumberOfParticipants(... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_115:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15692:15722  _newTargetNumberOfParticipants */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15726:15727  0 */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15692:15727  _newTargetNumberOfParticipants != 0 */\n      sub\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15671:15793  require(... */\n      tag_117\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3891:3893   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15671:15793  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3873:3894   */\n      mstore\n        /* \"#utility.yul\":3930:3932   */\n      0x28\n        /* \"#utility.yul\":3910:3928   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3903:3933   */\n      mstore\n        /* \"#utility.yul\":3969:4003   */\n      0x5a65726f206e756d626572206f6620746172676574207061727469636970616e\n        /* \"#utility.yul\":3949:3967   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3942:4004   */\n      mstore\n      shl(0xc1, 0x3a399033b4bb32b7)\n        /* \"#utility.yul\":4020:4038   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4013:4051   */\n      mstore\n        /* \"#utility.yul\":4068:4087   */\n      0x84\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15671:15793  require(... */\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15844:15870  targetNumberOfParticipants */\n      0x07\n      dup1\n      sload\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15962:16020  targetNumberOfParticipants = newTargetNumberOfParticipants */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16036:16165  TargetNumberOfParticipantsUpdated(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4272:4297   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4328:4330   */\n      0x20\n        /* \"#utility.yul\":4313:4331   */\n      dup2\n      add\n        /* \"#utility.yul\":4306:4340   */\n      dup5\n      swap1\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15962:16020  targetNumberOfParticipants = newTargetNumberOfParticipants */\n      dup4\n      swap2\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16036:16165  TargetNumberOfParticipantsUpdated(... */\n      0xb90f11d36a1f2ec1f3b89ac87ccd1ffab1a49f3e3ca83cfdac21fd99a537cbc1\n      swap2\n        /* \"#utility.yul\":4245:4263   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16036:16165  TargetNumberOfParticipantsUpdated(... */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15661:16172  {... */\n      pop\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15546:16172  function updateTargetNumberOfParticipants(... */\n      pop\n      jump\t// out\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14673:15318  function updateRewardAmountPerParticipant(... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14824:14859  _newRewardAmountPerParticipantInWei */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14863:14864  0 */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14824:14864  _newRewardAmountPerParticipantInWei != 0 */\n      sub\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14803:14914  require(... */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4553:4555   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14803:14914  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4535:4556   */\n      mstore\n        /* \"#utility.yul\":4592:4594   */\n      0x18\n        /* \"#utility.yul\":4572:4590   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4565:4595   */\n      mstore\n        /* \"#utility.yul\":4631:4657   */\n      0x5a65726f2072657761726420616d6f756e7420676976656e0000000000000000\n        /* \"#utility.yul\":4611:4629   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4604:4658   */\n      mstore\n        /* \"#utility.yul\":4675:4693   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14803:14914  require(... */\n      tag_118\n        /* \"#utility.yul\":4351:4699   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14803:14914  require(... */\n    tag_127:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14970:15001  rewardAmountPerParticipantInWei */\n      0x06\n      dup1\n      sload\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15102:15170  rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei */\n      swap1\n      dup3\n      swap1\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15186:15311  RewardAmountUpdated(... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4272:4297   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4328:4330   */\n      0x20\n        /* \"#utility.yul\":4313:4331   */\n      dup2\n      add\n        /* \"#utility.yul\":4306:4340   */\n      dup5\n      swap1\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15102:15170  rewardAmountPerParticipantInWei = newRewardAmountPerParticipantInWei */\n      dup4\n      swap2\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15186:15311  RewardAmountUpdated(... */\n      0xf0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c94\n      swap2\n        /* \"#utility.yul\":4245:4263   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":15186:15311  RewardAmountUpdated(... */\n      tag_120\n        /* \"#utility.yul\":4098:4346   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11352:12188  function processRewardClaimByParticipant(... */\n    tag_63:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_136\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_137\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_136:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11611:11622  participant */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11624:11632  rewardId */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11634:11639  nonce */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11641:11650  signature */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4849:4905  verifySignature(participant, rewardId, nonce, signature) */\n      tag_139\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4865:4876  participant */\n      dup5\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4878:4886  rewardId */\n      dup5\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4888:4893  nonce */\n      dup5\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4895:4904  signature */\n      dup5\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4849:4864  verifySignature */\n      tag_140\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4849:4905  verifySignature(participant, rewardId, nonce, signature) */\n      jump\t// in\n    tag_139:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4828:4948  require(... */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4906:4908   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4828:4948  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4888:4909   */\n      mstore\n        /* \"#utility.yul\":4945:4947   */\n      0x11\n        /* \"#utility.yul\":4925:4943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4918:4948   */\n      mstore\n      shl(0x78, 0x496e76616c6964207369676e6174757265)\n        /* \"#utility.yul\":4964:4982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4957:5004   */\n      mstore\n        /* \"#utility.yul\":5021:5039   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4828:4948  require(... */\n      tag_118\n        /* \"#utility.yul\":4704:5045   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4828:4948  require(... */\n    tag_141:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11689:11698  signature */\n      dup5\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5227:5252  signaturesUsedForClaiming */\n      0x05\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5253:5262  signature */\n      dup2\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5227:5263  signaturesUsedForClaiming[signature] */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5226:5263  !signaturesUsedForClaiming[signature] */\n      iszero\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5205:5311  require(... */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5799:5801   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5205:5311  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5781:5802   */\n      mstore\n        /* \"#utility.yul\":5838:5840   */\n      0x16\n        /* \"#utility.yul\":5818:5836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5811:5841   */\n      mstore\n      shl(0x52, 0x14da59db985d1d5c9948185b1c9958591e481d5cd959)\n        /* \"#utility.yul\":5857:5875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5850:5902   */\n      mstore\n        /* \"#utility.yul\":5919:5937   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5205:5311  require(... */\n      tag_118\n        /* \"#utility.yul\":5597:5943   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5205:5311  require(... */\n    tag_147:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6661:6692  rewardAmountPerParticipantInWei */\n      sload(0x06)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6628:6657  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6651:6655  this */\n      address\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6628:6657  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":182:233   */\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6628:6632  cUSD */\n      immutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6628:6642  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":155:173   */\n      0x24\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6628:6657  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6628:6692  cUSD.balanceOf(address(this)) >= rewardAmountPerParticipantInWei */\n      lt\n      iszero\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6607:6752  require(... */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6339:6341   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6607:6752  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6321:6342   */\n      mstore\n        /* \"#utility.yul\":6378:6380   */\n      0x22\n        /* \"#utility.yul\":6358:6376   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6351:6381   */\n      mstore\n        /* \"#utility.yul\":6417:6451   */\n      0x436f6e747261637420646f6573206e6f74206861766520656e6f756768206355\n        /* \"#utility.yul\":6397:6415   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6390:6452   */\n      mstore\n      shl(0xf2, 0x14d1)\n        /* \"#utility.yul\":6468:6486   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6461:6493   */\n      mstore\n        /* \"#utility.yul\":6510:6529   */\n      0x84\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6607:6752  require(... */\n      tag_118\n        /* \"#utility.yul\":6137:6535   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6607:6752  require(... */\n    tag_156:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7251:7277  targetNumberOfParticipants */\n      sload(0x07)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7220:7248  numberOfRewardedParticipants */\n      sload(0x08)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7220:7277  numberOfRewardedParticipants < targetNumberOfParticipants */\n      lt\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7199:7338  require(... */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6742:6744   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7199:7338  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6724:6745   */\n      mstore\n        /* \"#utility.yul\":6781:6783   */\n      0x23\n        /* \"#utility.yul\":6761:6779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6754:6784   */\n      mstore\n        /* \"#utility.yul\":6820:6854   */\n      0x416c6c207061727469636970616e74732068617665206265656e207265776172\n        /* \"#utility.yul\":6800:6818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6793:6855   */\n      mstore\n      shl(0xea, 0x191959)\n        /* \"#utility.yul\":6871:6889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6864:6897   */\n      mstore\n        /* \"#utility.yul\":6914:6933   */\n      0x84\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7199:7338  require(... */\n      tag_118\n        /* \"#utility.yul\":6540:6939   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7199:7338  require(... */\n    tag_160:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11826:11837  participant */\n      dup9\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6366:6376  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6366:6391  msg.sender == participant */\n      dup3\n      and\n      eq\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7146:7148   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7128:7149   */\n      mstore\n        /* \"#utility.yul\":7185:7187   */\n      0x11\n        /* \"#utility.yul\":7165:7183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7158:7188   */\n      mstore\n      shl(0x79, 0x27b7363c903b30b634b21039b2b73232b9)\n        /* \"#utility.yul\":7204:7222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7197:7244   */\n      mstore\n        /* \"#utility.yul\":7261:7279   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n      tag_118\n        /* \"#utility.yul\":6944:7285   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6081:6114  rewardedParticipants[participant] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6081:6101  rewardedParticipants */\n      0x03\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6081:6114  rewardedParticipants[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11873:11884  participant */\n      dup11\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6081:6114  rewardedParticipants[participant] */\n      0xff\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6080:6114  !rewardedParticipants[participant] */\n      iszero\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6059:6168  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7492:7494   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6059:6168  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7474:7495   */\n      mstore\n        /* \"#utility.yul\":7531:7533   */\n      0x1c\n        /* \"#utility.yul\":7511:7529   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7504:7534   */\n      mstore\n        /* \"#utility.yul\":7570:7600   */\n      0x5061727469636970616e7420616c726561647920726577617264656400000000\n        /* \"#utility.yul\":7550:7568   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7543:7601   */\n      mstore\n        /* \"#utility.yul\":7618:7636   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6059:6168  require(... */\n      tag_118\n        /* \"#utility.yul\":7290:7642   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6059:6168  require(... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5823:5865  participantsScreenedForSurvey[participant] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5823:5852  participantsScreenedForSurvey */\n      0x04\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5823:5865  participantsScreenedForSurvey[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11909:11920  participant */\n      dup12\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5823:5865  participantsScreenedForSurvey[participant] */\n      0xff\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5815:5886  require(participantsScreenedForSurvey[participant], \"Must be screened\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7849:7851   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5815:5886  require(participantsScreenedForSurvey[participant], \"Must be screened\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7831:7852   */\n      mstore\n        /* \"#utility.yul\":7888:7890   */\n      0x10\n        /* \"#utility.yul\":7868:7886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7861:7891   */\n      mstore\n      shl(0x82, 0x135d5cdd081899481cd8dc99595b9959)\n        /* \"#utility.yul\":7907:7925   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7900:7946   */\n      mstore\n        /* \"#utility.yul\":7963:7981   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5815:5886  require(participantsScreenedForSurvey[participant], \"Must be screened\") */\n      tag_118\n        /* \"#utility.yul\":7647:7987   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5815:5886  require(participantsScreenedForSurvey[participant], \"Must be screened\") */\n    tag_172:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11936:11966  bool rewardTransferIsSuccesful */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11969:11999  rewardParticipant(participant) */\n      tag_176\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11987:11998  participant */\n      dup14\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11969:11986  rewardParticipant */\n      tag_177\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11969:11999  rewardParticipant(participant) */\n      jump\t// in\n    tag_176:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11936:11999  bool rewardTransferIsSuccesful = rewardParticipant(participant) */\n      swap1\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12014:12039  rewardTransferIsSuccesful */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12010:12182  if (rewardTransferIsSuccesful) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12055:12108  markSignatureAsHavingBeenUsed(signature, participant) */\n      tag_179\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12085:12094  signature */\n      dup11\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12096:12107  participant */\n      dup15\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12055:12084  markSignatureAsHavingBeenUsed */\n      tag_180\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12055:12108  markSignatureAsHavingBeenUsed(signature, participant) */\n      jump\t// in\n    tag_179:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12122:12171  markParticipantAsHavingClaimedReward(participant) */\n      tag_181\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12159:12170  participant */\n      dup14\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12122:12158  markParticipantAsHavingClaimedReward */\n      tag_182\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12122:12171  markParticipantAsHavingClaimedReward(participant) */\n      jump\t// in\n    tag_181:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11926:12188  {... */\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6178:6179  _ */\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6423:6424  _ */\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":7348:7349  _ */\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":4958:4959  _ */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2531:2532  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n    tag_183:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":11352:12188  function processRewardClaimByParticipant(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17177:17350  function checkIfSignatureIsUsed(bytes memory signature)... */\n    tag_93:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17280:17284  bool */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17307:17332  signaturesUsedForClaiming */\n      0x05\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17333:17342  signature */\n      dup3\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17307:17343  signaturesUsedForClaiming[signature] */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_196:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap3\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":17177:17350  function checkIfSignatureIsUsed(bytes memory signature)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16303:16370  function pauseSurvey() external onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16355:16363  _pause() */\n      tag_112\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16355:16361  _pause */\n      tag_201\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":16355:16363  _pause() */\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8730:9153  function screenParticipant(address participant)... */\n    tag_99:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8834:8845  participant */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6366:6376  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6366:6391  msg.sender == participant */\n      dup3\n      and\n      eq\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7146:7148   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7128:7149   */\n      mstore\n        /* \"#utility.yul\":7185:7187   */\n      0x11\n        /* \"#utility.yul\":7165:7183   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7158:7188   */\n      mstore\n      shl(0x79, 0x27b7363c903b30b634b21039b2b73232b9)\n        /* \"#utility.yul\":7204:7222   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7197:7244   */\n      mstore\n        /* \"#utility.yul\":7261:7279   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n      tag_118\n        /* \"#utility.yul\":6944:7285   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6358:6413  require(msg.sender == participant, \"Only valid sender\") */\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5560:5602  participantsScreenedForSurvey[participant] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5560:5589  participantsScreenedForSurvey */\n      0x04\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5560:5602  participantsScreenedForSurvey[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8881:8892  participant */\n      dup3\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5560:5602  participantsScreenedForSurvey[participant] */\n      0xff\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5559:5602  !participantsScreenedForSurvey[participant] */\n      iszero\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5538:5651  require(... */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8194:8196   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5538:5651  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8176:8197   */\n      mstore\n        /* \"#utility.yul\":8233:8235   */\n      0x17\n        /* \"#utility.yul\":8213:8231   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8206:8236   */\n      mstore\n        /* \"#utility.yul\":8272:8297   */\n      0x4f6e6c7920756e73637265656e65642061646472657373000000000000000000\n        /* \"#utility.yul\":8252:8270   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8245:8298   */\n      mstore\n        /* \"#utility.yul\":8315:8333   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5538:5651  require(... */\n      tag_118\n        /* \"#utility.yul\":7992:8339   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":5538:5651  require(... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8916:8941  participant != address(0) */\n      dup4\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8908:8965  require(participant != address(0), \"Zero address passed\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8546:8548   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8908:8965  require(participant != address(0), \"Zero address passed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8528:8549   */\n      mstore\n        /* \"#utility.yul\":8585:8587   */\n      0x13\n        /* \"#utility.yul\":8565:8583   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8558:8588   */\n      mstore\n      shl(0x6a, 0x16995c9bc81859191c995cdcc81c185cdcd959)\n        /* \"#utility.yul\":8604:8622   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8597:8646   */\n      mstore\n        /* \"#utility.yul\":8663:8681   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8908:8965  require(participant != address(0), \"Zero address passed\") */\n      tag_118\n        /* \"#utility.yul\":8344:8687   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8908:8965  require(participant != address(0), \"Zero address passed\") */\n    tag_210:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8976:9018  participantsScreenedForSurvey[participant] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8976:9005  participantsScreenedForSurvey */\n      0x04\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8976:9018  participantsScreenedForSurvey[participant] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8976:9025  participantsScreenedForSurvey[participant] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9021:9025  true */\n      0x01\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":8976:9025  participantsScreenedForSurvey[participant] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9061:9089  numberOfScreenedParticipants */\n      0x0a\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9059:9089  ++numberOfScreenedParticipants */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9114:9146  ParticipantScreened(participant) */\n      swap1\n      mload\n        /* \"#utility.yul\":182:233   */\n      swap2\n      dup3\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9114:9146  ParticipantScreened(participant) */\n      0xc4ec7a2dc5e72d17666a15570e438638bfc023a7a091df162b669c37198bacb2\n      swap2\n        /* \"#utility.yul\":155:173   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9114:9146  ParticipantScreened(participant) */\n      tag_120\n        /* \"#utility.yul\":14:239   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14087:14464  function withdrawAllRewardFundsToResearcher()... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_217:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6934:6963  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6957:6961  this */\n      address\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6934:6963  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":182:233   */\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6966:6967  0 */\n      0x00\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6934:6938  cUSD */\n      immutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6934:6948  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":155:173   */\n      0x24\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6934:6963  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_222:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6934:6967  cUSD.balanceOf(address(this)) > 0 */\n      gt\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6913:7024  require(... */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8894:8896   */\n      0x20\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6913:7024  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8876:8897   */\n      mstore\n        /* \"#utility.yul\":8933:8935   */\n      0x1f\n        /* \"#utility.yul\":8913:8931   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8906:8936   */\n      mstore\n        /* \"#utility.yul\":8972:9005   */\n      0x436f6e747261637420646f6573206e6f74206861766520616e79206355534400\n        /* \"#utility.yul\":8952:8970   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8945:9006   */\n      mstore\n        /* \"#utility.yul\":9023:9041   */\n      0x64\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6913:7024  require(... */\n      tag_118\n        /* \"#utility.yul\":8692:9047   */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":6913:7024  require(... */\n    tag_223:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14255:14284  cUSD.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14278:14282  this */\n      address\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14255:14284  cUSD.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":182:233   */\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14237:14252  uint256 balance */\n      0x00\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14255:14259  cUSD */\n      immutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14255:14269  cUSD.balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":155:173   */\n      0x24\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14255:14284  cUSD.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_230:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14237:14284  uint256 balance = cUSD.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14294:14319  bool transferIsSuccessful */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14322:14326  cUSD */\n      immutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14322:14335  cUSD.transfer */\n      and\n      0xa9059cbb\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14336:14343  owner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14336:14343  owner() */\n    tag_231:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14322:14353  cUSD.transfer(owner(), balance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9244:9276   */\n      swap1\n      swap2\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14322:14353  cUSD.transfer(owner(), balance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9226:9277   */\n      mstore\n        /* \"#utility.yul\":9293:9311   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9286:9320   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":9199:9217   */\n      0x44\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14322:14353  cUSD.transfer(owner(), balance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14294:14353  bool transferIsSuccessful = cUSD.transfer(owner(), balance) */\n      swap1\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14368:14388  transferIsSuccessful */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14364:14458  if (transferIsSuccessful) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14409:14447  RewardFundsWithdrawn(owner(), balance) */\n      0x2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14430:14437  owner() */\n      tag_239\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14430:14437  owner() */\n    tag_239:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14409:14447  RewardFundsWithdrawn(owner(), balance) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9244:9276   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9226:9277   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9308:9310   */\n      0x20\n        /* \"#utility.yul\":9293:9311   */\n      dup3\n      add\n        /* \"#utility.yul\":9286:9320   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":9199:9217   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14409:14447  RewardFundsWithdrawn(owner(), balance) */\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14364:14458  if (transferIsSuccessful) {... */\n    tag_238:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14227:14464  {... */\n      pop\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":14087:14464  function withdrawAllRewardFundsToResearcher()... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":182:233   */\n      mstore\n        /* \"#utility.yul\":155:173   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_118\n        /* \"#utility.yul\":14:239   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":182:233   */\n      mstore\n        /* \"#utility.yul\":155:173   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_118\n        /* \"#utility.yul\":14:239   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_256\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_257\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2775  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2768:2783  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2807:2819  _msgSender() */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":200:232   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":182:233   */\n      dup2\n      mstore\n        /* \"#utility.yul\":170:172   */\n      0x20\n        /* \"#utility.yul\":155:173   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      shl(0xe0, 0x3ee5aeb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10453:10893  function verifySignature(... */\n    tag_140:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10622:10626  bool */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10638:10657  bytes32 messageHash */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10660:10704  getMessageHash(participant, rewardId, nonce) */\n      tag_267\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10675:10686  participant */\n      dup7\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10688:10696  rewardId */\n      dup7\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10698:10703  nonce */\n      dup7\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10660:10674  getMessageHash */\n      tag_268\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10660:10704  getMessageHash(participant, rewardId, nonce) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1376:1410  \"\\x19Ethereum Signed Message:\\n32\" */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10714:10742  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1363:1411  mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1472:1476  0x1c */\n      0x1c\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1465:1490  mstore(0x1c, messageHash) */\n      dup3\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1570:1574  0x3c */\n      0x3c\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1554:1575  keccak256(0x00, 0x3c) */\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      sload\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1465:1490  mstore(0x1c, messageHash) */\n      swap2\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1554:1575  keccak256(0x00, 0x3c) */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10836:10875  ethSignedMessageHash.recover(signature) */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":1554:1575  keccak256(0x00, 0x3c) */\n      dup3\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10865:10874  signature */\n      dup7\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10836:10864  ethSignedMessageHash.recover */\n      tag_273\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10836:10875  ethSignedMessageHash.recover(signature) */\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10836:10886  ethSignedMessageHash.recover(signature) == owner() */\n      and\n      eq\n      swap8\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10453:10893  function verifySignature(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12399:12924  function rewardParticipant(address participant) private returns (bool) {... */\n    tag_177:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12565:12596  rewardAmountPerParticipantInWei */\n      sload(0x06)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12513:12606  cUSD.transfer(... */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9244:9276   */\n      dup4\n      dup2\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12513:12606  cUSD.transfer(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9226:9277   */\n      mstore\n        /* \"#utility.yul\":9293:9311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9286:9320   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12464:12468  bool */\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12513:12517  cUSD */\n      immutable(\"0x7ded941e36a81cc4d234cbb36fa87b6231d11e62e0a302c8e291ed6faa31e3d0\")\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12513:12526  cUSD.transfer */\n      swap1\n      swap2\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9199:9217   */\n      0x44\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12513:12606  cUSD.transfer(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_278:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12480:12606  bool rewardTransferIsSuccesful = cUSD.transfer(... */\n      swap1\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12621:12646  rewardTransferIsSuccesful */\n      dup1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12617:12875  if (rewardTransferIsSuccesful) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12692:12720  numberOfRewardedParticipants */\n      0x08\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12690:12720  ++numberOfRewardedParticipants */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12819:12850  rewardAmountPerParticipantInWei */\n      sload(0x06)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12753:12864  ParticipantRewarded(... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9244:9276   */\n      dup7\n      and\n        /* \"#utility.yul\":9226:9277   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9308:9310   */\n      0x20\n        /* \"#utility.yul\":9293:9311   */\n      dup2\n      add\n        /* \"#utility.yul\":9286:9320   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12753:12864  ParticipantRewarded(... */\n      0x8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e\n      swap2\n        /* \"#utility.yul\":9199:9217   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12753:12864  ParticipantRewarded(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12617:12875  if (rewardTransferIsSuccesful) {... */\n    tag_279:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12892:12917  rewardTransferIsSuccesful */\n      swap3\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":12399:12924  function rewardParticipant(address participant) private returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13599:13894  function markSignatureAsHavingBeenUsed(... */\n    tag_180:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13762:13766  true */\n      0x01\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13723:13748  signaturesUsedForClaiming */\n      0x05\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13749:13758  signature */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13723:13759  signaturesUsedForClaiming[signature] */\n      mload(0x40)\n      tag_282\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_282:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13723:13766  signaturesUsedForClaiming[signature] = true */\n      dup1\n      sload\n      swap3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13803:13825  numberOfUsedSignatures */\n      0x0b\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13801:13825  ++numberOfUsedSignatures */\n      dup1\n      sload\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13723:13766  signaturesUsedForClaiming[signature] = true */\n      0x01\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13801:13825  ++numberOfUsedSignatures */\n      add\n      swap1\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13850:13887  SignatureUsed(signature, participant) */\n      0x97fb84d3f0d20b64a0a8e52541408b0155ba98fea88e66283156f306d04b08b8\n      swap1\n      tag_240\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13864:13873  signature */\n      dup5\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13875:13886  participant */\n      dup5\n      swap1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13850:13887  SignatureUsed(signature, participant) */\n      tag_284\n      jump\t// in\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13115:13371  function markParticipantAsHavingClaimedReward(address participant) private {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13200:13233  rewardedParticipants[participant] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13200:13220  rewardedParticipants */\n      0x03\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13200:13233  rewardedParticipants[participant] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13200:13240  rewardedParticipants[participant] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13236:13240  true */\n      0x01\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13200:13240  rewardedParticipants[participant] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13277:13299  numberOfClaimedRewards */\n      0x09\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13275:13299  ++numberOfClaimedRewards */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13324:13364  ParticipantMarkedAsRewarded(participant) */\n      swap1\n      mload\n        /* \"#utility.yul\":182:233   */\n      swap2\n      dup3\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13324:13364  ParticipantMarkedAsRewarded(participant) */\n      0x654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943\n      swap2\n        /* \"#utility.yul\":155:173   */\n      add\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13324:13364  ParticipantMarkedAsRewarded(participant) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":13115:13371  function markParticipantAsHavingClaimedReward(address participant) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_290\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2529  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2522:2536  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1920:1927  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9814:10040  function getMessageHash(... */\n    tag_268:\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9950:9957  bytes32 */\n      0x00\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10003:10014  participant */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10016:10024  rewardId */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":10026:10031  nonce */\n      dup4\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9986:10032  abi.encodePacked(participant, rewardId, nonce) */\n      add(0x20, mload(0x40))\n      tag_299\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9976:10033  keccak256(abi.encodePacked(participant, rewardId, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9969:10033  return keccak256(abi.encodePacked(participant, rewardId, nonce)) */\n      swap1\n      pop\n        /* \"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":9814:10040  function getMessageHash(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3792:3799  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3812:3829  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3831:3849  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3851:3867  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3882:3886  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3888:3897  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3881  tryRecover */\n      tag_304\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3811:3898  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3936  _throwError(error, errorArg) */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3920:3925  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3927:3935  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3919  _throwError */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3936  _throwError(error, errorArg) */\n      jump\t// in\n    tag_305:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3953:3962  recovered */\n      swap1\n      swap5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2232:2249  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2251:2267  RecoverError err */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2269:2283  bytes32 errArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2308  signature */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2315  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2319:2321  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2321  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2604:2608  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2589:2609  add(signature, 0x20) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2583:2610  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2653:2657  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2638:2658  add(signature, 0x40) */\n      dup6\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2632:2659  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2710:2714  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2695:2715  add(signature, 0x60) */\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2689:2716  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2337:2346  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2717  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2762:2766  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2717  byte(0, mload(add(signature, 0x60))) */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2583:2610  mload(add(signature, 0x20)) */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2632:2659  mload(add(signature, 0x40)) */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2761  tryRecover */\n      tag_310\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2744:2776  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_311)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n    tag_308:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2872:2888  signature.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2823:2824  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2827:2862  RecoverError.InvalidSignatureLength */\n      0x02\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7375:7395  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7371  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_317\n      jumpi\n      tag_317\n      tag_315\n      jump\t// in\n    tag_317:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7471:7500  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7467  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_323\n      jumpi\n      tag_323\n      tag_315\n      jump\t// in\n    tag_323:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7572  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      tag_329\n      tag_315\n      jump\t// in\n    tag_329:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":390:415   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":363:381   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_118\n        /* \"#utility.yul\":244:421   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7710:7740  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7706  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_336\n      jumpi\n      tag_336\n      tag_315\n      jump\t// in\n    tag_336:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":390:415   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":363:381   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      tag_118\n        /* \"#utility.yul\":244:421   */\n      jump\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5329:5346  address recovered */\n      0x00\n      dup1\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6283:6349  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6349  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6381:6382  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6385:6415  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6417:6418  s */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_340)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6524:6538  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":11154:11179   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":11227:11231   */\n      0xff\n        /* \"#utility.yul\":11215:11232   */\n      dup10\n      and\n        /* \"#utility.yul\":11195:11213   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":11188:11233   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11249:11267   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":11242:11276   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":11292:11310   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":11285:11319   */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":11126:11145   */\n      0xa0\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_345:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n      tag_346\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6631:6632  0 */\n      0x00\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6635:6664  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6631:6632  0 */\n      dup3\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_340)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6706:6712  signer */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6714:6734  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_340:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":426:652   */\n    tag_45:\n        /* \"#utility.yul\":485:491   */\n      0x00\n        /* \"#utility.yul\":538:540   */\n      0x20\n        /* \"#utility.yul\":526:535   */\n      dup3\n        /* \"#utility.yul\":517:524   */\n      dup5\n        /* \"#utility.yul\":513:536   */\n      sub\n        /* \"#utility.yul\":509:541   */\n      slt\n        /* \"#utility.yul\":506:558   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":554:555   */\n      0x00\n        /* \"#utility.yul\":551:552   */\n      dup1\n        /* \"#utility.yul\":544:556   */\n      revert\n        /* \"#utility.yul\":506:558   */\n    tag_356:\n      pop\n        /* \"#utility.yul\":599:622   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":426:652   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":849:1022   */\n    tag_347:\n        /* \"#utility.yul\":917:937   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":966:997   */\n      dup2\n      and\n        /* \"#utility.yul\":956:998   */\n      dup2\n      eq\n        /* \"#utility.yul\":946:1016   */\n      tag_359\n      jumpi\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1009:1010   */\n      dup1\n        /* \"#utility.yul\":1002:1014   */\n      revert\n        /* \"#utility.yul\":946:1016   */\n    tag_359:\n        /* \"#utility.yul\":849:1022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1027:1154   */\n    tag_348:\n        /* \"#utility.yul\":1088:1098   */\n      0x4e487b71\n        /* \"#utility.yul\":1083:1086   */\n      0xe0\n        /* \"#utility.yul\":1079:1099   */\n      shl\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1069:1100   */\n      mstore\n        /* \"#utility.yul\":1119:1123   */\n      0x41\n        /* \"#utility.yul\":1116:1117   */\n      0x04\n        /* \"#utility.yul\":1109:1124   */\n      mstore\n        /* \"#utility.yul\":1143:1147   */\n      0x24\n        /* \"#utility.yul\":1140:1141   */\n      0x00\n        /* \"#utility.yul\":1133:1148   */\n      revert\n        /* \"#utility.yul\":1159:1875   */\n    tag_349:\n        /* \"#utility.yul\":1224:1229   */\n      0x00\n        /* \"#utility.yul\":1256:1257   */\n      dup1\n        /* \"#utility.yul\":1280:1298   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1272:1278   */\n      dup5\n        /* \"#utility.yul\":1269:1299   */\n      gt\n        /* \"#utility.yul\":1266:1322   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":1302:1320   */\n      tag_363\n      tag_348\n      jump\t// in\n    tag_363:\n      pop\n        /* \"#utility.yul\":1457:1459   */\n      0x40\n        /* \"#utility.yul\":1451:1460   */\n      mload\n      not(0x1f)\n        /* \"#utility.yul\":1370:1372   */\n      0x1f\n        /* \"#utility.yul\":1349:1364   */\n      dup6\n      add\n        /* \"#utility.yul\":1345:1374   */\n      dup2\n      and\n        /* \"#utility.yul\":1515:1517   */\n      0x3f\n        /* \"#utility.yul\":1503:1518   */\n      add\n        /* \"#utility.yul\":1499:1528   */\n      and\n        /* \"#utility.yul\":1487:1529   */\n      dup2\n      add\n        /* \"#utility.yul\":1580:1602   */\n      dup2\n      dup2\n      lt\n        /* \"#utility.yul\":1559:1577   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1544:1578   */\n      dup3\n      gt\n        /* \"#utility.yul\":1541:1603   */\n      or\n        /* \"#utility.yul\":1538:1626   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1606:1624   */\n      tag_365\n      tag_348\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1642:1644   */\n      0x40\n        /* \"#utility.yul\":1635:1657   */\n      mstore\n        /* \"#utility.yul\":1690:1712   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":1675:1681   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":1727:1743   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":1724:1749   */\n      dup6\n      lt\n        /* \"#utility.yul\":1721:1766   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":1762:1763   */\n      0x00\n        /* \"#utility.yul\":1759:1760   */\n      dup1\n        /* \"#utility.yul\":1752:1764   */\n      revert\n        /* \"#utility.yul\":1721:1766   */\n    tag_366:\n        /* \"#utility.yul\":1812:1818   */\n      dup4\n        /* \"#utility.yul\":1807:1810   */\n      dup4\n        /* \"#utility.yul\":1800:1804   */\n      0x20\n        /* \"#utility.yul\":1792:1798   */\n      dup4\n        /* \"#utility.yul\":1788:1805   */\n      add\n        /* \"#utility.yul\":1775:1819   */\n      calldatacopy\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1860:1864   */\n      0x20\n        /* \"#utility.yul\":1851:1857   */\n      dup6\n        /* \"#utility.yul\":1843:1849   */\n      dup4\n        /* \"#utility.yul\":1839:1858   */\n      add\n        /* \"#utility.yul\":1835:1865   */\n      add\n        /* \"#utility.yul\":1828:1869   */\n      mstore\n      pop\n        /* \"#utility.yul\":1159:1875   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2101   */\n    tag_350:\n        /* \"#utility.yul\":1922:1927   */\n      0x00\n        /* \"#utility.yul\":1975:1978   */\n      dup3\n        /* \"#utility.yul\":1968:1972   */\n      0x1f\n        /* \"#utility.yul\":1960:1966   */\n      dup4\n        /* \"#utility.yul\":1956:1973   */\n      add\n        /* \"#utility.yul\":1952:1979   */\n      slt\n        /* \"#utility.yul\":1942:1997   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1993:1994   */\n      0x00\n        /* \"#utility.yul\":1990:1991   */\n      dup1\n        /* \"#utility.yul\":1983:1995   */\n      revert\n        /* \"#utility.yul\":1942:1997   */\n    tag_368:\n        /* \"#utility.yul\":2015:2095   */\n      tag_369\n        /* \"#utility.yul\":2091:2094   */\n      dup4\n        /* \"#utility.yul\":2082:2088   */\n      dup4\n        /* \"#utility.yul\":2069:2089   */\n      calldataload\n        /* \"#utility.yul\":2062:2066   */\n      0x20\n        /* \"#utility.yul\":2054:2060   */\n      dup6\n        /* \"#utility.yul\":2050:2067   */\n      add\n        /* \"#utility.yul\":2015:2095   */\n      tag_349\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2006:2095   */\n      swap4\n        /* \"#utility.yul\":1880:2101   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2106:2960   */\n    tag_62:\n        /* \"#utility.yul\":2211:2217   */\n      0x00\n        /* \"#utility.yul\":2219:2225   */\n      dup1\n        /* \"#utility.yul\":2227:2233   */\n      0x00\n        /* \"#utility.yul\":2235:2241   */\n      dup1\n        /* \"#utility.yul\":2288:2291   */\n      0x80\n        /* \"#utility.yul\":2276:2285   */\n      dup6\n        /* \"#utility.yul\":2267:2274   */\n      dup8\n        /* \"#utility.yul\":2263:2286   */\n      sub\n        /* \"#utility.yul\":2259:2292   */\n      slt\n        /* \"#utility.yul\":2256:2309   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2305:2306   */\n      0x00\n        /* \"#utility.yul\":2302:2303   */\n      dup1\n        /* \"#utility.yul\":2295:2307   */\n      revert\n        /* \"#utility.yul\":2256:2309   */\n    tag_371:\n        /* \"#utility.yul\":2328:2357   */\n      tag_372\n        /* \"#utility.yul\":2347:2356   */\n      dup6\n        /* \"#utility.yul\":2328:2357   */\n      tag_347\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2318:2357   */\n      swap4\n      pop\n        /* \"#utility.yul\":2408:2410   */\n      0x20\n        /* \"#utility.yul\":2397:2406   */\n      dup6\n        /* \"#utility.yul\":2393:2411   */\n      add\n        /* \"#utility.yul\":2380:2412   */\n      calldataload\n        /* \"#utility.yul\":2435:2453   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2427:2433   */\n      dup2\n        /* \"#utility.yul\":2424:2454   */\n      gt\n        /* \"#utility.yul\":2421:2471   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":2467:2468   */\n      0x00\n        /* \"#utility.yul\":2464:2465   */\n      dup1\n        /* \"#utility.yul\":2457:2469   */\n      revert\n        /* \"#utility.yul\":2421:2471   */\n    tag_373:\n        /* \"#utility.yul\":2490:2512   */\n      dup6\n      add\n        /* \"#utility.yul\":2543:2547   */\n      0x1f\n        /* \"#utility.yul\":2535:2548   */\n      dup2\n      add\n        /* \"#utility.yul\":2531:2558   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2521:2576   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2569:2570   */\n      dup1\n        /* \"#utility.yul\":2562:2574   */\n      revert\n        /* \"#utility.yul\":2521:2576   */\n    tag_374:\n        /* \"#utility.yul\":2595:2669   */\n      tag_375\n        /* \"#utility.yul\":2661:2668   */\n      dup8\n        /* \"#utility.yul\":2656:2658   */\n      dup3\n        /* \"#utility.yul\":2643:2659   */\n      calldataload\n        /* \"#utility.yul\":2638:2640   */\n      0x20\n        /* \"#utility.yul\":2634:2636   */\n      dup5\n        /* \"#utility.yul\":2630:2641   */\n      add\n        /* \"#utility.yul\":2595:2669   */\n      tag_349\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2585:2669   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":2738:2740   */\n      0x40\n        /* \"#utility.yul\":2723:2741   */\n      dup6\n      add\n        /* \"#utility.yul\":2710:2742   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2819:2821   */\n      0x60\n        /* \"#utility.yul\":2804:2822   */\n      dup6\n      add\n        /* \"#utility.yul\":2791:2823   */\n      calldataload\n        /* \"#utility.yul\":2848:2866   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2835:2867   */\n      dup2\n      gt\n        /* \"#utility.yul\":2832:2884   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":2880:2881   */\n      0x00\n        /* \"#utility.yul\":2877:2878   */\n      dup1\n        /* \"#utility.yul\":2870:2882   */\n      revert\n        /* \"#utility.yul\":2832:2884   */\n    tag_376:\n        /* \"#utility.yul\":2903:2954   */\n      tag_377\n        /* \"#utility.yul\":2946:2953   */\n      dup8\n        /* \"#utility.yul\":2935:2943   */\n      dup3\n        /* \"#utility.yul\":2924:2933   */\n      dup9\n        /* \"#utility.yul\":2920:2944   */\n      add\n        /* \"#utility.yul\":2903:2954   */\n      tag_350\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2893:2954   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2106:2960   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2965:3151   */\n    tag_77:\n        /* \"#utility.yul\":3024:3030   */\n      0x00\n        /* \"#utility.yul\":3077:3079   */\n      0x20\n        /* \"#utility.yul\":3065:3074   */\n      dup3\n        /* \"#utility.yul\":3056:3063   */\n      dup5\n        /* \"#utility.yul\":3052:3075   */\n      sub\n        /* \"#utility.yul\":3048:3080   */\n      slt\n        /* \"#utility.yul\":3045:3097   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":3093:3094   */\n      0x00\n        /* \"#utility.yul\":3090:3091   */\n      dup1\n        /* \"#utility.yul\":3083:3095   */\n      revert\n        /* \"#utility.yul\":3045:3097   */\n    tag_379:\n        /* \"#utility.yul\":3116:3145   */\n      tag_369\n        /* \"#utility.yul\":3135:3144   */\n      dup3\n        /* \"#utility.yul\":3116:3145   */\n      tag_347\n      jump\t// in\n        /* \"#utility.yul\":3364:3684   */\n    tag_92:\n        /* \"#utility.yul\":3432:3438   */\n      0x00\n        /* \"#utility.yul\":3485:3487   */\n      0x20\n        /* \"#utility.yul\":3473:3482   */\n      dup3\n        /* \"#utility.yul\":3464:3471   */\n      dup5\n        /* \"#utility.yul\":3460:3483   */\n      sub\n        /* \"#utility.yul\":3456:3488   */\n      slt\n        /* \"#utility.yul\":3453:3505   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3501:3502   */\n      0x00\n        /* \"#utility.yul\":3498:3499   */\n      dup1\n        /* \"#utility.yul\":3491:3503   */\n      revert\n        /* \"#utility.yul\":3453:3505   */\n    tag_383:\n        /* \"#utility.yul\":3541:3550   */\n      dup2\n        /* \"#utility.yul\":3528:3551   */\n      calldataload\n        /* \"#utility.yul\":3574:3592   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3566:3572   */\n      dup2\n        /* \"#utility.yul\":3563:3593   */\n      gt\n        /* \"#utility.yul\":3560:3610   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":3606:3607   */\n      0x00\n        /* \"#utility.yul\":3603:3604   */\n      dup1\n        /* \"#utility.yul\":3596:3608   */\n      revert\n        /* \"#utility.yul\":3560:3610   */\n    tag_384:\n        /* \"#utility.yul\":3629:3678   */\n      tag_385\n        /* \"#utility.yul\":3670:3677   */\n      dup5\n        /* \"#utility.yul\":3661:3667   */\n      dup3\n        /* \"#utility.yul\":3650:3659   */\n      dup6\n        /* \"#utility.yul\":3646:3668   */\n      add\n        /* \"#utility.yul\":3629:3678   */\n      tag_350\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3619:3678   */\n      swap5\n        /* \"#utility.yul\":3364:3684   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5050:5300   */\n    tag_351:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5145:5258   */\n    tag_391:\n        /* \"#utility.yul\":5159:5165   */\n      dup4\n        /* \"#utility.yul\":5156:5157   */\n      dup2\n        /* \"#utility.yul\":5153:5166   */\n      lt\n        /* \"#utility.yul\":5145:5258   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":5235:5246   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5229:5247   */\n      mload\n        /* \"#utility.yul\":5216:5227   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5209:5248   */\n      mstore\n        /* \"#utility.yul\":5181:5183   */\n      0x20\n        /* \"#utility.yul\":5174:5184   */\n      add\n        /* \"#utility.yul\":5145:5258   */\n      jump(tag_391)\n    tag_393:\n      pop\n      pop\n        /* \"#utility.yul\":5292:5293   */\n      0x00\n        /* \"#utility.yul\":5274:5290   */\n      swap2\n      add\n        /* \"#utility.yul\":5267:5294   */\n      mstore\n        /* \"#utility.yul\":5050:5300   */\n      jump\t// out\n        /* \"#utility.yul\":5305:5592   */\n    tag_146:\n        /* \"#utility.yul\":5434:5437   */\n      0x00\n        /* \"#utility.yul\":5472:5478   */\n      dup3\n        /* \"#utility.yul\":5466:5479   */\n      mload\n        /* \"#utility.yul\":5488:5554   */\n      tag_395\n        /* \"#utility.yul\":5547:5553   */\n      dup2\n        /* \"#utility.yul\":5542:5545   */\n      dup5\n        /* \"#utility.yul\":5535:5539   */\n      0x20\n        /* \"#utility.yul\":5527:5533   */\n      dup8\n        /* \"#utility.yul\":5523:5540   */\n      add\n        /* \"#utility.yul\":5488:5554   */\n      tag_351\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5570:5586   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5305:5592   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5948:6132   */\n    tag_155:\n        /* \"#utility.yul\":6018:6024   */\n      0x00\n        /* \"#utility.yul\":6071:6073   */\n      0x20\n        /* \"#utility.yul\":6059:6068   */\n      dup3\n        /* \"#utility.yul\":6050:6057   */\n      dup5\n        /* \"#utility.yul\":6046:6069   */\n      sub\n        /* \"#utility.yul\":6042:6074   */\n      slt\n        /* \"#utility.yul\":6039:6091   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":6087:6088   */\n      0x00\n        /* \"#utility.yul\":6084:6085   */\n      dup1\n        /* \"#utility.yul\":6077:6089   */\n      revert\n        /* \"#utility.yul\":6039:6091   */\n    tag_398:\n      pop\n        /* \"#utility.yul\":6110:6126   */\n      mload\n      swap2\n        /* \"#utility.yul\":5948:6132   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9331:9608   */\n    tag_237:\n        /* \"#utility.yul\":9398:9404   */\n      0x00\n        /* \"#utility.yul\":9451:9453   */\n      0x20\n        /* \"#utility.yul\":9439:9448   */\n      dup3\n        /* \"#utility.yul\":9430:9437   */\n      dup5\n        /* \"#utility.yul\":9426:9449   */\n      sub\n        /* \"#utility.yul\":9422:9454   */\n      slt\n        /* \"#utility.yul\":9419:9471   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":9467:9468   */\n      0x00\n        /* \"#utility.yul\":9464:9465   */\n      dup1\n        /* \"#utility.yul\":9457:9469   */\n      revert\n        /* \"#utility.yul\":9419:9471   */\n    tag_409:\n        /* \"#utility.yul\":9499:9508   */\n      dup2\n        /* \"#utility.yul\":9493:9509   */\n      mload\n        /* \"#utility.yul\":9552:9557   */\n      dup1\n        /* \"#utility.yul\":9545:9558   */\n      iszero\n        /* \"#utility.yul\":9538:9559   */\n      iszero\n        /* \"#utility.yul\":9531:9536   */\n      dup2\n        /* \"#utility.yul\":9528:9560   */\n      eq\n        /* \"#utility.yul\":9518:9578   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":9574:9575   */\n      0x00\n        /* \"#utility.yul\":9571:9572   */\n      dup1\n        /* \"#utility.yul\":9564:9576   */\n      revert\n        /* \"#utility.yul\":9613:10108   */\n    tag_284:\n        /* \"#utility.yul\":9788:9790   */\n      0x40\n        /* \"#utility.yul\":9777:9786   */\n      dup2\n        /* \"#utility.yul\":9770:9791   */\n      mstore\n        /* \"#utility.yul\":9751:9755   */\n      0x00\n        /* \"#utility.yul\":9820:9826   */\n      dup4\n        /* \"#utility.yul\":9814:9827   */\n      mload\n        /* \"#utility.yul\":9863:9869   */\n      dup1\n        /* \"#utility.yul\":9858:9860   */\n      0x40\n        /* \"#utility.yul\":9847:9856   */\n      dup5\n        /* \"#utility.yul\":9843:9861   */\n      add\n        /* \"#utility.yul\":9836:9870   */\n      mstore\n        /* \"#utility.yul\":9879:9960   */\n      tag_412\n        /* \"#utility.yul\":9953:9959   */\n      dup2\n        /* \"#utility.yul\":9948:9950   */\n      0x60\n        /* \"#utility.yul\":9937:9946   */\n      dup6\n        /* \"#utility.yul\":9933:9951   */\n      add\n        /* \"#utility.yul\":9926:9930   */\n      0x20\n        /* \"#utility.yul\":9918:9924   */\n      dup9\n        /* \"#utility.yul\":9914:9931   */\n      add\n        /* \"#utility.yul\":9879:9960   */\n      tag_351\n      jump\t// in\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10069:10101   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":10062:10066   */\n      0x20\n        /* \"#utility.yul\":10047:10067   */\n      dup4\n      add\n        /* \"#utility.yul\":10040:10102   */\n      mstore\n      pop\n        /* \"#utility.yul\":10021:10023   */\n      0x1f\n        /* \"#utility.yul\":10000:10015   */\n      swap2\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":9996:10025   */\n      and\n        /* \"#utility.yul\":9981:10026   */\n      add\n        /* \"#utility.yul\":10028:10030   */\n      0x60\n        /* \"#utility.yul\":9977:10031   */\n      add\n      swap2\n        /* \"#utility.yul\":9613:10108   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10113:10608   */\n    tag_300:\n        /* \"#utility.yul\":10355:10381   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":10351:10382   */\n      not\n        /* \"#utility.yul\":10342:10348   */\n      dup5\n        /* \"#utility.yul\":10338:10340   */\n      0x60\n        /* \"#utility.yul\":10334:10349   */\n      shl\n        /* \"#utility.yul\":10330:10383   */\n      and\n        /* \"#utility.yul\":10325:10328   */\n      dup2\n        /* \"#utility.yul\":10318:10384   */\n      mstore\n        /* \"#utility.yul\":10300:10303   */\n      0x00\n        /* \"#utility.yul\":10413:10419   */\n      dup4\n        /* \"#utility.yul\":10407:10420   */\n      mload\n        /* \"#utility.yul\":10429:10504   */\n      tag_414\n        /* \"#utility.yul\":10497:10503   */\n      dup2\n        /* \"#utility.yul\":10492:10494   */\n      0x14\n        /* \"#utility.yul\":10487:10490   */\n      dup6\n        /* \"#utility.yul\":10483:10495   */\n      add\n        /* \"#utility.yul\":10476:10480   */\n      0x20\n        /* \"#utility.yul\":10468:10474   */\n      dup9\n        /* \"#utility.yul\":10464:10481   */\n      add\n        /* \"#utility.yul\":10429:10504   */\n      tag_351\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10563:10565   */\n      0x14\n        /* \"#utility.yul\":10523:10539   */\n      swap3\n      add\n        /* \"#utility.yul\":10555:10566   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":10548:10575   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10599:10601   */\n      0x34\n        /* \"#utility.yul\":10591:10602   */\n      add\n      swap4\n        /* \"#utility.yul\":10113:10608   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10613:10740   */\n    tag_315:\n        /* \"#utility.yul\":10674:10684   */\n      0x4e487b71\n        /* \"#utility.yul\":10669:10672   */\n      0xe0\n        /* \"#utility.yul\":10665:10685   */\n      shl\n        /* \"#utility.yul\":10662:10663   */\n      0x00\n        /* \"#utility.yul\":10655:10686   */\n      mstore\n        /* \"#utility.yul\":10705:10709   */\n      0x21\n        /* \"#utility.yul\":10702:10703   */\n      0x04\n        /* \"#utility.yul\":10695:10710   */\n      mstore\n        /* \"#utility.yul\":10729:10733   */\n      0x24\n        /* \"#utility.yul\":10726:10727   */\n      0x00\n        /* \"#utility.yul\":10719:10734   */\n      revert\n\n    auxdata: 0xa2646970667358221220aa0177b810eba01cd0904d6151cad5a4346956b7127d19491da2bbbcd4e60d3064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_5085": {
									"entryPoint": null,
									"id": 5085,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 512,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_026964306945d4bb6a65f3bbdd451c4d0a1384d87be81058cde982d69ca52e4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_103bbfc7ecdffe3c52e69956548acb8fb5089ef3e04fc9fa26455cd7c0109d66__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6a72d387a390c16f84e7f8d259ef0611622c87b42fb783dcfc88b7e0013c2636__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2480:14",
										"nodeType": "YulBlock",
										"src": "0:2480:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:14",
													"nodeType": "YulBlock",
													"src": "74:117:14",
													"statements": [
														{
															"nativeSrc": "84:22:14",
															"nodeType": "YulAssignment",
															"src": "84:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:14"
																},
																"nativeSrc": "93:13:14",
																"nodeType": "YulFunctionCall",
																"src": "93:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:14",
																"nodeType": "YulBlock",
																"src": "169:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:14",
																					"nodeType": "YulLiteral",
																					"src": "178:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:14",
																					"nodeType": "YulLiteral",
																					"src": "181:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:14"
																			},
																			"nativeSrc": "171:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:14"
																		},
																		"nativeSrc": "171:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:14",
																										"nodeType": "YulLiteral",
																										"src": "154:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:14",
																										"nodeType": "YulLiteral",
																										"src": "159:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:14"
																								},
																								"nativeSrc": "150:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:14",
																								"nodeType": "YulLiteral",
																								"src": "163:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:14"
																						},
																						"nativeSrc": "146:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:14"
																				},
																				"nativeSrc": "135:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:14"
																		},
																		"nativeSrc": "125:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:14"
																},
																"nativeSrc": "118:50:14",
																"nodeType": "YulFunctionCall",
																"src": "118:50:14"
															},
															"nativeSrc": "115:70:14",
															"nodeType": "YulIf",
															"src": "115:70:14"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:14",
														"nodeType": "YulTypedName",
														"src": "53:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:14",
														"nodeType": "YulTypedName",
														"src": "64:5:14",
														"type": ""
													}
												],
												"src": "14:177:14"
											},
											{
												"body": {
													"nativeSrc": "328:382:14",
													"nodeType": "YulBlock",
													"src": "328:382:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:14",
																"nodeType": "YulBlock",
																"src": "375:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:14",
																					"nodeType": "YulLiteral",
																					"src": "384:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:14",
																					"nodeType": "YulLiteral",
																					"src": "387:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:14"
																			},
																			"nativeSrc": "377:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:14"
																		},
																		"nativeSrc": "377:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:14"
																		},
																		"nativeSrc": "345:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:14",
																		"nodeType": "YulLiteral",
																		"src": "370:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:14"
																},
																"nativeSrc": "341:33:14",
																"nodeType": "YulFunctionCall",
																"src": "341:33:14"
															},
															"nativeSrc": "338:53:14",
															"nodeType": "YulIf",
															"src": "338:53:14"
														},
														{
															"nativeSrc": "400:50:14",
															"nodeType": "YulAssignment",
															"src": "400:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:14",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:14"
																},
																"nativeSrc": "410:40:14",
																"nodeType": "YulFunctionCall",
																"src": "410:40:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:14"
																}
															]
														},
														{
															"nativeSrc": "459:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "459:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "472:1:14",
																"nodeType": "YulLiteral",
																"src": "472:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "463:5:14",
																	"nodeType": "YulTypedName",
																	"src": "463:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "482:34:14",
															"nodeType": "YulAssignment",
															"src": "482:34:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "501:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "512:2:14",
																				"nodeType": "YulLiteral",
																				"src": "512:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "497:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:14"
																		},
																		"nativeSrc": "497:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "491:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "491:5:14"
																},
																"nativeSrc": "491:25:14",
																"nodeType": "YulFunctionCall",
																"src": "491:25:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "482:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "482:5:14"
																}
															]
														},
														{
															"nativeSrc": "525:15:14",
															"nodeType": "YulAssignment",
															"src": "525:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "535:5:14",
																"nodeType": "YulIdentifier",
																"src": "535:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "525:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:14"
																}
															]
														},
														{
															"nativeSrc": "549:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "549:16:14",
															"value": {
																"kind": "number",
																"nativeSrc": "564:1:14",
																"nodeType": "YulLiteral",
																"src": "564:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "553:7:14",
																	"nodeType": "YulTypedName",
																	"src": "553:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "574:36:14",
															"nodeType": "YulAssignment",
															"src": "574:36:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "595:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "595:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "606:2:14",
																				"nodeType": "YulLiteral",
																				"src": "606:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "591:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "591:3:14"
																		},
																		"nativeSrc": "591:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "591:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "585:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "585:5:14"
																},
																"nativeSrc": "585:25:14",
																"nodeType": "YulFunctionCall",
																"src": "585:25:14"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "574:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "574:7:14"
																}
															]
														},
														{
															"nativeSrc": "619:17:14",
															"nodeType": "YulAssignment",
															"src": "619:17:14",
															"value": {
																"name": "value_1",
																"nativeSrc": "629:7:14",
																"nodeType": "YulIdentifier",
																"src": "629:7:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "619:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:14"
																}
															]
														},
														{
															"nativeSrc": "645:59:14",
															"nodeType": "YulAssignment",
															"src": "645:59:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "689:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "689:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "700:2:14",
																				"nodeType": "YulLiteral",
																				"src": "700:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "685:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:14"
																		},
																		"nativeSrc": "685:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "685:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "655:29:14",
																	"nodeType": "YulIdentifier",
																	"src": "655:29:14"
																},
																"nativeSrc": "655:49:14",
																"nodeType": "YulFunctionCall",
																"src": "655:49:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "645:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "196:514:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:14",
														"nodeType": "YulTypedName",
														"src": "270:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:14",
														"nodeType": "YulTypedName",
														"src": "281:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:14",
														"nodeType": "YulTypedName",
														"src": "293:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:14",
														"nodeType": "YulTypedName",
														"src": "301:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:14",
														"nodeType": "YulTypedName",
														"src": "309:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:14",
														"nodeType": "YulTypedName",
														"src": "317:6:14",
														"type": ""
													}
												],
												"src": "196:514:14"
											},
											{
												"body": {
													"nativeSrc": "816:102:14",
													"nodeType": "YulBlock",
													"src": "816:102:14",
													"statements": [
														{
															"nativeSrc": "826:26:14",
															"nodeType": "YulAssignment",
															"src": "826:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "838:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "849:2:14",
																		"nodeType": "YulLiteral",
																		"src": "849:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "834:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:14"
																},
																"nativeSrc": "834:18:14",
																"nodeType": "YulFunctionCall",
																"src": "834:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "826:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "868:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "883:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "899:3:14",
																								"nodeType": "YulLiteral",
																								"src": "899:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "904:1:14",
																								"nodeType": "YulLiteral",
																								"src": "904:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "895:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:14"
																						},
																						"nativeSrc": "895:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "908:1:14",
																						"nodeType": "YulLiteral",
																						"src": "908:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "891:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:14"
																				},
																				"nativeSrc": "891:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "879:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:14"
																		},
																		"nativeSrc": "879:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "861:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:14"
																},
																"nativeSrc": "861:51:14",
																"nodeType": "YulFunctionCall",
																"src": "861:51:14"
															},
															"nativeSrc": "861:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "861:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "715:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "785:9:14",
														"nodeType": "YulTypedName",
														"src": "785:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "796:6:14",
														"nodeType": "YulTypedName",
														"src": "796:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "807:4:14",
														"nodeType": "YulTypedName",
														"src": "807:4:14",
														"type": ""
													}
												],
												"src": "715:203:14"
											},
											{
												"body": {
													"nativeSrc": "1097:223:14",
													"nodeType": "YulBlock",
													"src": "1097:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1114:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1114:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1125:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1125:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1107:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:14"
																},
																"nativeSrc": "1107:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1107:21:14"
															},
															"nativeSrc": "1107:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1107:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1148:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1148:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1159:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1159:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:14"
																		},
																		"nativeSrc": "1144:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1144:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1164:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1164:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1137:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:14"
																},
																"nativeSrc": "1137:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1137:30:14"
															},
															"nativeSrc": "1137:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "1137:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1187:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1187:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1198:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1198:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1183:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1183:3:14"
																		},
																		"nativeSrc": "1183:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1183:18:14"
																	},
																	{
																		"hexValue": "5a65726f206164647265737320676976656e20666f72206355534420546f6b65",
																		"kind": "string",
																		"nativeSrc": "1203:34:14",
																		"nodeType": "YulLiteral",
																		"src": "1203:34:14",
																		"type": "",
																		"value": "Zero address given for cUSD Toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1176:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:14"
																},
																"nativeSrc": "1176:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1176:62:14"
															},
															"nativeSrc": "1176:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "1176:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1258:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1258:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1269:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1269:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1254:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1254:3:14"
																		},
																		"nativeSrc": "1254:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1254:18:14"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "1274:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1274:3:14",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1247:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1247:6:14"
																},
																"nativeSrc": "1247:31:14",
																"nodeType": "YulFunctionCall",
																"src": "1247:31:14"
															},
															"nativeSrc": "1247:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "1247:31:14"
														},
														{
															"nativeSrc": "1287:27:14",
															"nodeType": "YulAssignment",
															"src": "1287:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1299:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1299:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1310:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1310:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1295:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1295:3:14"
																},
																"nativeSrc": "1295:19:14",
																"nodeType": "YulFunctionCall",
																"src": "1295:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1287:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1287:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6a72d387a390c16f84e7f8d259ef0611622c87b42fb783dcfc88b7e0013c2636__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:397:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1074:9:14",
														"nodeType": "YulTypedName",
														"src": "1074:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1088:4:14",
														"nodeType": "YulTypedName",
														"src": "1088:4:14",
														"type": ""
													}
												],
												"src": "923:397:14"
											},
											{
												"body": {
													"nativeSrc": "1499:223:14",
													"nodeType": "YulBlock",
													"src": "1499:223:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1516:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1516:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1527:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1527:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1509:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:14"
																},
																"nativeSrc": "1509:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1509:21:14"
															},
															"nativeSrc": "1509:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1509:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:14"
																		},
																		"nativeSrc": "1546:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1566:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1566:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1539:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:14"
																},
																"nativeSrc": "1539:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1539:30:14"
															},
															"nativeSrc": "1539:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "1539:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1589:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1589:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1600:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1600:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1585:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1585:3:14"
																		},
																		"nativeSrc": "1585:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1585:18:14"
																	},
																	{
																		"hexValue": "5a65726f206164647265737320676976656e20666f7220726573656172636865",
																		"kind": "string",
																		"nativeSrc": "1605:34:14",
																		"nodeType": "YulLiteral",
																		"src": "1605:34:14",
																		"type": "",
																		"value": "Zero address given for researche"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1578:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:14"
																},
																"nativeSrc": "1578:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1578:62:14"
															},
															"nativeSrc": "1578:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "1578:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1660:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1660:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1671:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1671:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1656:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1656:3:14"
																		},
																		"nativeSrc": "1656:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1656:18:14"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nativeSrc": "1676:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1676:3:14",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1649:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1649:6:14"
																},
																"nativeSrc": "1649:31:14",
																"nodeType": "YulFunctionCall",
																"src": "1649:31:14"
															},
															"nativeSrc": "1649:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "1649:31:14"
														},
														{
															"nativeSrc": "1689:27:14",
															"nodeType": "YulAssignment",
															"src": "1689:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1701:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1701:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1712:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1712:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1697:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1697:3:14"
																},
																"nativeSrc": "1697:19:14",
																"nodeType": "YulFunctionCall",
																"src": "1697:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1689:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1689:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_103bbfc7ecdffe3c52e69956548acb8fb5089ef3e04fc9fa26455cd7c0109d66__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1325:397:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1476:9:14",
														"nodeType": "YulTypedName",
														"src": "1476:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1490:4:14",
														"nodeType": "YulTypedName",
														"src": "1490:4:14",
														"type": ""
													}
												],
												"src": "1325:397:14"
											},
											{
												"body": {
													"nativeSrc": "1901:171:14",
													"nodeType": "YulBlock",
													"src": "1901:171:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1918:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1918:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1929:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1911:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1911:6:14"
																},
																"nativeSrc": "1911:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1911:21:14"
															},
															"nativeSrc": "1911:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1911:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1952:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1963:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1963:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:14"
																		},
																		"nativeSrc": "1948:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1948:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1968:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1941:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:14"
																},
																"nativeSrc": "1941:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1941:30:14"
															},
															"nativeSrc": "1941:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "1941:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1991:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1991:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2002:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2002:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1987:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:14"
																		},
																		"nativeSrc": "1987:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:18:14"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "2007:23:14",
																		"nodeType": "YulLiteral",
																		"src": "2007:23:14",
																		"type": "",
																		"value": "Invalid reward amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:14"
																},
																"nativeSrc": "1980:51:14",
																"nodeType": "YulFunctionCall",
																"src": "1980:51:14"
															},
															"nativeSrc": "1980:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "1980:51:14"
														},
														{
															"nativeSrc": "2040:26:14",
															"nodeType": "YulAssignment",
															"src": "2040:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2052:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2052:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2063:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2063:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2048:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2048:3:14"
																},
																"nativeSrc": "2048:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2048:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2040:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2040:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1727:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1878:9:14",
														"nodeType": "YulTypedName",
														"src": "1878:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1892:4:14",
														"nodeType": "YulTypedName",
														"src": "1892:4:14",
														"type": ""
													}
												],
												"src": "1727:345:14"
											},
											{
												"body": {
													"nativeSrc": "2251:227:14",
													"nodeType": "YulBlock",
													"src": "2251:227:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2268:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2268:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2279:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2261:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2261:6:14"
																},
																"nativeSrc": "2261:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2261:21:14"
															},
															"nativeSrc": "2261:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "2261:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2302:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2302:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2313:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2313:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2298:3:14"
																		},
																		"nativeSrc": "2298:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2298:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2318:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:14",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2291:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:14"
																},
																"nativeSrc": "2291:30:14",
																"nodeType": "YulFunctionCall",
																"src": "2291:30:14"
															},
															"nativeSrc": "2291:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "2291:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2341:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2341:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2352:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2352:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:14"
																		},
																		"nativeSrc": "2337:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:18:14"
																	},
																	{
																		"hexValue": "496e76616c6964206e756d626572206f66207461726765742070617274696369",
																		"kind": "string",
																		"nativeSrc": "2357:34:14",
																		"nodeType": "YulLiteral",
																		"src": "2357:34:14",
																		"type": "",
																		"value": "Invalid number of target partici"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:14"
																},
																"nativeSrc": "2330:62:14",
																"nodeType": "YulFunctionCall",
																"src": "2330:62:14"
															},
															"nativeSrc": "2330:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "2330:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2412:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2412:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2423:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2423:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2408:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:14"
																		},
																		"nativeSrc": "2408:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:18:14"
																	},
																	{
																		"hexValue": "70616e7473",
																		"kind": "string",
																		"nativeSrc": "2428:7:14",
																		"nodeType": "YulLiteral",
																		"src": "2428:7:14",
																		"type": "",
																		"value": "pants"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2401:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:14"
																},
																"nativeSrc": "2401:35:14",
																"nodeType": "YulFunctionCall",
																"src": "2401:35:14"
															},
															"nativeSrc": "2401:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "2401:35:14"
														},
														{
															"nativeSrc": "2445:27:14",
															"nodeType": "YulAssignment",
															"src": "2445:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2457:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2457:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2468:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2468:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2453:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2453:3:14"
																},
																"nativeSrc": "2453:19:14",
																"nodeType": "YulFunctionCall",
																"src": "2453:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2445:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2445:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_026964306945d4bb6a65f3bbdd451c4d0a1384d87be81058cde982d69ca52e4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2077:401:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2228:9:14",
														"nodeType": "YulTypedName",
														"src": "2228:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2242:4:14",
														"nodeType": "YulTypedName",
														"src": "2242:4:14",
														"type": ""
													}
												],
												"src": "2077:401:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let value := 0\n        value := mload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 64))\n        value2 := value_1\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6a72d387a390c16f84e7f8d259ef0611622c87b42fb783dcfc88b7e0013c2636__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Zero address given for cUSD Toke\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_103bbfc7ecdffe3c52e69956548acb8fb5089ef3e04fc9fa26455cd7c0109d66__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Zero address given for researche\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid reward amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_026964306945d4bb6a65f3bbdd451c4d0a1384d87be81058cde982d69ca52e4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Invalid number of target partici\")\n        mstore(add(headStart, 96), \"pants\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161182638038061182683398101604081905261002f9161026c565b836001600160a01b03811661005f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006881610200565b50600180556002805460ff191690556001600160a01b0381166100d75760405162461bcd60e51b815260206004820152602160248201527f5a65726f206164647265737320676976656e20666f72206355534420546f6b656044820152603760f91b6064820152608401610056565b6001600160a01b0384166101375760405162461bcd60e51b815260206004820152602160248201527f5a65726f206164647265737320676976656e20666f72207265736561726368656044820152603960f91b6064820152608401610056565b600083116101875760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642072657761726420616d6f756e7400000000000000000000006044820152606401610056565b600082116101e55760405162461bcd60e51b815260206004820152602560248201527f496e76616c6964206e756d626572206f6620746172676574207061727469636960448201526470616e747360d81b6064820152608401610056565b6001600160a01b0316608052600691909155600755506102b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461026757600080fd5b919050565b6000806000806080858703121561028257600080fd5b61028b85610250565b60208601516040870151919550935091506102a860608601610250565b905092959194509250565b6080516115356102f1600039600081816101620152818161052e0152818161098501528181610a5d01528181610ad60152610d8d01526115356000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063741ae614116100c3578063c5dac9131161007c578063c5dac9131461029a578063e082fe2a146102ad578063ea1dd101146102b5578063f22069df146102c8578063f2fde38b146102d0578063f77a953e146102e357600080fd5b8063741ae6141461023b5780637a0abf0814610243578063825f98be1461024c5780638da5cb5b14610278578063a6a0981114610289578063c3aa97211461029257600080fd5b8063627d3eb911610115578063627d3eb9146101f557806364bb632f146101fd5780636fa1c59d146102105780636fa55ed9146102185780637069243c1461022b578063715018a61461023357600080fd5b80631fccf6721461015d5780633960fc66146101a15780634074be40146101ab5780634fc91ba6146101c2578063528780cc146101cb5780635c975abb146101de575b600080fd5b6101847f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a96102eb565b005b6101b4600a5481565b604051908152602001610198565b6101b4600b5481565b6101a96101d9366004611210565b6102fd565b60025460ff165b6040519015158152602001610198565b6009546101b4565b6101a961020b366004611210565b6103b4565b6007546101b4565b6101a96102263660046112fc565b61044c565b6006546101b4565b6101a96107ac565b6008546101b4565b6101b460065481565b6101e561025a366004611393565b6001600160a01b031660009081526004602052604090205460ff1690565b6000546001600160a01b0316610184565b6101b460075481565b600b546101b4565b6101e56102a83660046113ae565b6107be565b6101a96107e9565b6101a96102c3366004611393565b6107f9565b6101a961095d565b6101a96102de366004611393565b610be8565b600a546101b4565b6102f3610c26565b6102fb610c53565b565b610305610c26565b8060000361036b5760405162461bcd60e51b815260206004820152602860248201527f5a65726f206e756d626572206f6620746172676574207061727469636970616e6044820152673a399033b4bb32b760c11b60648201526084015b60405180910390fd5b6007805490829055604080518281526020810184905283917fb90f11d36a1f2ec1f3b89ac87ccd1ffab1a49f3e3ca83cfdac21fd99a537cbc191015b60405180910390a1505050565b6103bc610c26565b8060000361040c5760405162461bcd60e51b815260206004820152601860248201527f5a65726f2072657761726420616d6f756e7420676976656e00000000000000006044820152606401610362565b6006805490829055604080518281526020810184905283917ff0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c9491016103a7565b610454610ca5565b61045c610cc9565b8383838361046c84848484610cf3565b6104ac5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610362565b846005816040516104bd919061140f565b9081526040519081900360200190205460ff16156105165760405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c9948185b1c9958591e481d5cd95960521b6044820152606401610362565b6006546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a1919061142b565b10156105fa5760405162461bcd60e51b815260206004820152602260248201527f436f6e747261637420646f6573206e6f74206861766520656e6f75676820635560448201526114d160f21b6064820152608401610362565b600754600854106106595760405162461bcd60e51b815260206004820152602360248201527f416c6c207061727469636970616e74732068617665206265656e20726577617260448201526219195960ea1b6064820152608401610362565b88336001600160a01b038216146106a65760405162461bcd60e51b815260206004820152601160248201527027b7363c903b30b634b21039b2b73232b960791b6044820152606401610362565b6001600160a01b038a166000908152600360205260409020548a9060ff16156107115760405162461bcd60e51b815260206004820152601c60248201527f5061727469636970616e7420616c7265616479207265776172646564000000006044820152606401610362565b6001600160a01b038b166000908152600460205260409020548b9060ff1661076e5760405162461bcd60e51b815260206004820152601060248201526f135d5cdd081899481cd8dc99595b995960821b6044820152606401610362565b60006107798d610d5e565b905080156107945761078b8a8e610e5a565b6107948d610ec5565b5050505050505050506107a660018055565b50505050565b6107b4610c26565b6102fb6000610f2b565b60006005826040516107d0919061140f565b9081526040519081900360200190205460ff1692915050565b6107f1610c26565b6102fb610f7b565b80336001600160a01b038216146108465760405162461bcd60e51b815260206004820152601160248201527027b7363c903b30b634b21039b2b73232b960791b6044820152606401610362565b6001600160a01b038216600090815260046020526040902054829060ff16156108b15760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920756e73637265656e656420616464726573730000000000000000006044820152606401610362565b6001600160a01b0383166108fd5760405162461bcd60e51b815260206004820152601360248201527216995c9bc81859191c995cdcc81c185cdcd959606a1b6044820152606401610362565b6001600160a01b038316600081815260046020908152604091829020805460ff19166001908117909155600a8054909101905590519182527fc4ec7a2dc5e72d17666a15570e438638bfc023a7a091df162b669c37198bacb291016103a7565b610965610c26565b61096d610ca5565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f8919061142b565b11610a455760405162461bcd60e51b815260206004820152601f60248201527f436f6e747261637420646f6573206e6f74206861766520616e792063555344006044820152606401610362565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad0919061142b565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610b156000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b869190611444565b90508015610be4577f2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097610bc16000546001600160a01b031690565b604080516001600160a01b03909216825260208201859052015b60405180910390a15b5050565b610bf0610c26565b6001600160a01b038116610c1a57604051631e4fbdf760e01b815260006004820152602401610362565b610c2381610f2b565b50565b6000546001600160a01b031633146102fb5760405163118cdaa760e01b8152336004820152602401610362565b610c5b610fb8565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60025460ff16156102fb5760405163d93c066560e01b815260040160405180910390fd5b600260015403610cec57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080610d01868686610fdb565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81209054919250906001600160a01b0316610d498286611011565b6001600160a01b031614979650505050505050565b60065460405163a9059cbb60e01b81526001600160a01b038381166004830152602482019290925260009182917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611444565b90508015610e5457600880546001019055600654604080516001600160a01b038616815260208101929092527f8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e910160405180910390a15b92915050565b6001600583604051610e6c919061140f565b908152604051908190036020018120805492151560ff1990931692909217909155600b805460010190557f97fb84d3f0d20b64a0a8e52541408b0155ba98fea88e66283156f306d04b08b890610bdb9084908490611466565b6001600160a01b038116600081815260036020908152604091829020805460ff1916600190811790915560098054909101905590519182527f654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943910160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f83610ca5565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c883390565b60025460ff166102fb57604051638dfc202b60e01b815260040160405180910390fd5b6000838383604051602001610ff2939291906114aa565b6040516020818303038152906040528051906020012090509392505050565b600080600080611021868661103b565b9250925092506110318282611088565b5090949350505050565b600080600083516041036110755760208401516040850151606086015160001a61106788828585611141565b955095509550505050611081565b50508151600091506002905b9250925092565b600082600381111561109c5761109c6114e9565b036110a5575050565b60018260038111156110b9576110b96114e9565b036110d75760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156110eb576110eb6114e9565b0361110c5760405163fce698f760e01b815260048101829052602401610362565b6003826003811115611120576111206114e9565b03610be4576040516335e2f38360e21b815260048101829052602401610362565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561117c5750600091506003905082611206565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156111d0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111fc57506000925060019150829050611206565b9250600091508190505b9450945094915050565b60006020828403121561122257600080fd5b5035919050565b80356001600160a01b038116811461124057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561127657611276611245565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156112a5576112a5611245565b6040528381529050808284018510156112bd57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112e657600080fd5b6112f58383356020850161125b565b9392505050565b6000806000806080858703121561131257600080fd5b61131b85611229565b9350602085013567ffffffffffffffff81111561133757600080fd5b8501601f8101871361134857600080fd5b6113578782356020840161125b565b93505060408501359150606085013567ffffffffffffffff81111561137b57600080fd5b611387878288016112d5565b91505092959194509250565b6000602082840312156113a557600080fd5b6112f582611229565b6000602082840312156113c057600080fd5b813567ffffffffffffffff8111156113d757600080fd5b6113e3848285016112d5565b949350505050565b60005b838110156114065781810151838201526020016113ee565b50506000910152565b600082516114218184602087016113eb565b9190910192915050565b60006020828403121561143d57600080fd5b5051919050565b60006020828403121561145657600080fd5b815180151581146112f557600080fd5b60408152600083518060408401526114858160608501602088016113eb565b6001600160a01b0393909316602083015250601f91909101601f191601606001919050565b6bffffffffffffffffffffffff198460601b168152600083516114d48160148501602088016113eb565b60149201918201929092526034019392505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220aa0177b810eba01cd0904d6151cad5a4346956b7127d19491da2bbbcd4e60d3064736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1826 CODESIZE SUB DUP1 PUSH2 0x1826 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x26C JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0x200 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320676976656E20666F72206355534420546F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320676976656E20666F7220726573656172636865 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072657761726420616D6F756E740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206E756D626572206F66207461726765742070617274696369 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x70616E7473 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 SSTORE POP PUSH2 0x2B3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28B DUP6 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP8 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x2A8 PUSH1 0x60 DUP7 ADD PUSH2 0x250 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1535 PUSH2 0x2F1 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x162 ADD MSTORE DUP2 DUP2 PUSH2 0x52E ADD MSTORE DUP2 DUP2 PUSH2 0x985 ADD MSTORE DUP2 DUP2 PUSH2 0xA5D ADD MSTORE DUP2 DUP2 PUSH2 0xAD6 ADD MSTORE PUSH2 0xD8D ADD MSTORE PUSH2 0x1535 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741AE614 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC5DAC913 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC5DAC913 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xE082FE2A EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xEA1DD101 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF22069DF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xF77A953E EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x741AE614 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x7A0ABF08 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x825F98BE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA6A09811 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xC3AA9721 EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x627D3EB9 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x627D3EB9 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x64BB632F EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x6FA1C59D EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x6FA55ED9 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x7069243C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FCCF672 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x3960FC66 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4074BE40 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x4FC91BA6 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x528780CC EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x2EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FC JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0xC53 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x305 PUSH2 0xC26 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206E756D626572206F6620746172676574207061727469636970616E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A399033B4BB32B7 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xB90F11D36A1F2EC1F3B89AC87CCD1FFAB1A49F3E3CA83CFDAC21FD99A537CBC1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xC26 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F2072657761726420616D6F756E7420676976656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xF0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94 SWAP2 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x454 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0x45C PUSH2 0xCC9 JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 PUSH2 0x46C DUP5 DUP5 DUP5 DUP5 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST DUP5 PUSH1 0x5 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768206355 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x14D1 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C207061727469636970616E74732068617665206265656E207265776172 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x191959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST DUP9 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x27B7363C903B30B634B21039B2B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP11 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E7420616C726561647920726577617264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP12 SWAP1 PUSH1 0xFF AND PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x135D5CDD081899481CD8DC99595B9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x779 DUP14 PUSH2 0xD5E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x794 JUMPI PUSH2 0x78B DUP11 DUP15 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x794 DUP14 PUSH2 0xEC5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x7A6 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x2FB PUSH1 0x0 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0xF7B JUMP JUMPDEST DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x27B7363C903B30B634B21039B2B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920756E73637265656E65642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x16995C9BC81859191C995CDCC81C185CDCD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xC4EC7A2DC5E72D17666A15570E438638BFC023A7A091DF162B669C37198BACB2 SWAP2 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x965 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x96D PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST GT PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F6573206E6F74206861766520616E79206355534400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xB15 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xBE4 JUMPI PUSH32 0x2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097 PUSH2 0xBC1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBF0 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0xF2B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0xC5B PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD01 DUP7 DUP7 DUP7 PUSH2 0xFDB JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD49 DUP3 DUP7 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE54 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE6C SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH32 0x97FB84D3F0D20B64A0A8E52541408B0155BA98FEA88E66283156F306D04B08B8 SWAP1 PUSH2 0xBDB SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF83 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC88 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1021 DUP7 DUP7 PUSH2 0x103B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1031 DUP3 DUP3 PUSH2 0x1088 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x1075 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1067 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1141 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1081 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109C PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0x10A5 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B9 PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0x10D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10EB JUMPI PUSH2 0x10EB PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x117C JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11FC JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1276 JUMPI PUSH2 0x1276 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A5 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F5 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x125B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131B DUP6 PUSH2 0x1229 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x125B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1387 DUP8 DUP3 DUP9 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F5 DUP3 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E3 DUP5 DUP3 DUP6 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1406 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13EE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1421 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1485 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x60 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP5 PUSH1 0x60 SHL AND DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x14D4 DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x14 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x34 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA ADD PUSH24 0xB810EBA01CD0904D6151CAD5A4346956B7127D19491DA2BB 0xBC 0xD4 0xE6 0xD ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "669:18319:13:-:0;;;7880:748;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8056:10;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;861:51:14;834:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:6;2061:21;;1231:7:5;:15;;-1:-1:-1;;1231:15:5;;;-1:-1:-1;;;;;8086:23:13;::::1;8078:69;;;::::0;-1:-1:-1;;;8078:69:13;;1125:2:14;8078:69:13::1;::::0;::::1;1107:21:14::0;1164:2;1144:18;;;1137:30;1203:34;1183:18;;;1176:62;-1:-1:-1;;;1254:18:14;;;1247:31;1295:19;;8078:69:13::1;923:397:14::0;8078:69:13::1;-1:-1:-1::0;;;;;8166:24:13;::::1;8158:70;;;::::0;-1:-1:-1;;;8158:70:13;;1527:2:14;8158:70:13::1;::::0;::::1;1509:21:14::0;1566:2;1546:18;;;1539:30;1605:34;1585:18;;;1578:62;-1:-1:-1;;;1656:18:14;;;1649:31;1697:19;;8158:70:13::1;1325:397:14::0;8158:70:13::1;8282:1;8247:32;:36;8239:70;;;::::0;-1:-1:-1;;;8239:70:13;;1929:2:14;8239:70:13::1;::::0;::::1;1911:21:14::0;1968:2;1948:18;;;1941:30;2007:23;1987:18;;;1980:51;2048:18;;8239:70:13::1;1727:345:14::0;8239:70:13::1;8371:1;8341:27;:31;8320:115;;;::::0;-1:-1:-1;;;8320:115:13;;2279:2:14;8320:115:13::1;::::0;::::1;2261:21:14::0;2318:2;2298:18;;;2291:30;2357:34;2337:18;;;2330:62;-1:-1:-1;;;2408:18:14;;;2401:35;2453:19;;8320:115:13::1;2077:401:14::0;8320:115:13::1;-1:-1:-1::0;;;;;8446:32:13::1;;::::0;8489:31:::1;:66:::0;;;;8565:26:::1;:56:::0;-1:-1:-1;669:18319:13;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:14:-;93:13;;-1:-1:-1;;;;;135:31:14;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:514::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;512:2;497:18;;491:25;606:2;591:18;;585:25;400:50;;-1:-1:-1;491:25:14;-1:-1:-1;585:25:14;-1:-1:-1;655:49:14;700:2;685:18;;655:49;:::i;:::-;645:59;;196:514;;;;;;;:::o;2077:401::-;669:18319:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 3110,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_263": {
									"entryPoint": null,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_507": {
									"entryPoint": null,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_499": {
									"entryPoint": 3273,
									"id": 499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_433": {
									"entryPoint": 3963,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_404": {
									"entryPoint": 3237,
									"id": 404,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_417": {
									"entryPoint": 4024,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_throwError_1186": {
									"entryPoint": 4232,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3883,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_449": {
									"entryPoint": 3155,
									"id": 449,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cUSD_4798": {
									"entryPoint": null,
									"id": 4798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkIfParticipantIsScreened_5453": {
									"entryPoint": null,
									"id": 5453,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkIfSignatureIsUsed_5466": {
									"entryPoint": 1982,
									"id": 5466,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_5144": {
									"entryPoint": 4059,
									"id": 5144,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNumberOfClaimedRewards_5520": {
									"entryPoint": null,
									"id": 5520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumberOfRewardedParticipants_5484": {
									"entryPoint": null,
									"id": 5484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumberOfScreenedParticipants_5502": {
									"entryPoint": null,
									"id": 5502,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumberOfUsedSignatures_5511": {
									"entryPoint": null,
									"id": 5511,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRewardAmountPerParticipantInWei_5475": {
									"entryPoint": null,
									"id": 5475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTargetNumberOfParticipants_5493": {
									"entryPoint": null,
									"id": 5493,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@markParticipantAsHavingClaimedReward_5291": {
									"entryPoint": 3781,
									"id": 5291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@markSignatureAsHavingBeenUsed_5315": {
									"entryPoint": 3674,
									"id": 5315,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@numberOfScreenedParticipants_4828": {
									"entryPoint": null,
									"id": 4828,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numberOfUsedSignatures_4831": {
									"entryPoint": null,
									"id": 4831,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pauseSurvey_5430": {
									"entryPoint": 2025,
									"id": 5430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_392": {
									"entryPoint": null,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@processRewardClaimByParticipant_5239": {
									"entryPoint": 1100,
									"id": 5239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@recover_943": {
									"entryPoint": 4113,
									"id": 943,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1964,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardAmountPerParticipantInWei_4816": {
									"entryPoint": null,
									"id": 4816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardParticipant_5270": {
									"entryPoint": 3422,
									"id": 5270,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@screenParticipant_5122": {
									"entryPoint": 2041,
									"id": 5122,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@targetNumberOfParticipants_4819": {
									"entryPoint": null,
									"id": 4819,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toEthSignedMessageHash_1202": {
									"entryPoint": null,
									"id": 1202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3048,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryRecover_1101": {
									"entryPoint": 4417,
									"id": 1101,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@tryRecover_913": {
									"entryPoint": 4155,
									"id": 913,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@unpauseSurvey_5440": {
									"entryPoint": 747,
									"id": 5440,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateRewardAmountPerParticipant_5387": {
									"entryPoint": 948,
									"id": 5387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTargetNumberOfParticipants_5420": {
									"entryPoint": 765,
									"id": 5420,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifySignature_5182": {
									"entryPoint": 3315,
									"id": 5182,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdrawAllRewardFundsToResearcher_5354": {
									"entryPoint": 2397,
									"id": 5354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 4699,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_bytes_memory_ptr": {
									"entryPoint": 4860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 5222,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0375f97ab5e8fa7e98e1a2649faf74aac348ea84fe30ae879b7455ac3cab3a1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46ae283ffec203fd37f672d1095b665b5786f54d125a160afc05124123212061__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65231543b70fec099ac2aa38f6223e4d6c8e1116a7ca9f31245a55884124fd17__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_826d2dd8a9564762fd3468dbe3280b1593a291c391520dd1a6399d1ae4ab85ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93e85f37f73cf8e1b855512ab7e00aab2b791117712ecb476daeb6c2c0a27a67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e1c7c18f0d2dc4858f8c47ddee92da3f67b15c69b268077538bb56715c5b443__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf43b20efd5aa3917da2a7fb2b1042c8d997ae65e047b330e66dc1292e43869a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8ca4b6d1328e36f577811b28f06a3362d1b121141fff96d1ec2415d973f2a3e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db126172be1e699e37f6c2f9d4fb7f5f5f2ed87fc020503321ead645fa2bf474__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f9c0d44ee40817c148b7e54c820d93205f217f292cbbe17b933fe457c858abf5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11327:14",
										"nodeType": "YulBlock",
										"src": "0:11327:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "137:102:14",
													"nodeType": "YulBlock",
													"src": "137:102:14",
													"statements": [
														{
															"nativeSrc": "147:26:14",
															"nodeType": "YulAssignment",
															"src": "147:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "159:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "159:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "170:2:14",
																		"nodeType": "YulLiteral",
																		"src": "170:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "155:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "155:3:14"
																},
																"nativeSrc": "155:18:14",
																"nodeType": "YulFunctionCall",
																"src": "155:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "147:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "147:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "189:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "189:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "204:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "204:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "220:3:14",
																								"nodeType": "YulLiteral",
																								"src": "220:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "225:1:14",
																								"nodeType": "YulLiteral",
																								"src": "225:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "216:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "216:3:14"
																						},
																						"nativeSrc": "216:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "216:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "229:1:14",
																						"nodeType": "YulLiteral",
																						"src": "229:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "212:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "212:3:14"
																				},
																				"nativeSrc": "212:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "212:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "200:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "200:3:14"
																		},
																		"nativeSrc": "200:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "200:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "182:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "182:6:14"
																},
																"nativeSrc": "182:51:14",
																"nodeType": "YulFunctionCall",
																"src": "182:51:14"
															},
															"nativeSrc": "182:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "182:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed",
												"nativeSrc": "14:225:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "106:9:14",
														"nodeType": "YulTypedName",
														"src": "106:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "117:6:14",
														"nodeType": "YulTypedName",
														"src": "117:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "128:4:14",
														"nodeType": "YulTypedName",
														"src": "128:4:14",
														"type": ""
													}
												],
												"src": "14:225:14"
											},
											{
												"body": {
													"nativeSrc": "345:76:14",
													"nodeType": "YulBlock",
													"src": "345:76:14",
													"statements": [
														{
															"nativeSrc": "355:26:14",
															"nodeType": "YulAssignment",
															"src": "355:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "367:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "367:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "378:2:14",
																		"nodeType": "YulLiteral",
																		"src": "378:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "363:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "363:3:14"
																},
																"nativeSrc": "363:18:14",
																"nodeType": "YulFunctionCall",
																"src": "363:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "355:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "355:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "397:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "397:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "408:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "408:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "390:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "390:6:14"
																},
																"nativeSrc": "390:25:14",
																"nodeType": "YulFunctionCall",
																"src": "390:25:14"
															},
															"nativeSrc": "390:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "390:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "244:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "314:9:14",
														"nodeType": "YulTypedName",
														"src": "314:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "325:6:14",
														"nodeType": "YulTypedName",
														"src": "325:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "336:4:14",
														"nodeType": "YulTypedName",
														"src": "336:4:14",
														"type": ""
													}
												],
												"src": "244:177:14"
											},
											{
												"body": {
													"nativeSrc": "496:156:14",
													"nodeType": "YulBlock",
													"src": "496:156:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "542:16:14",
																"nodeType": "YulBlock",
																"src": "542:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "551:1:14",
																					"nodeType": "YulLiteral",
																					"src": "551:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "554:1:14",
																					"nodeType": "YulLiteral",
																					"src": "554:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "544:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "544:6:14"
																			},
																			"nativeSrc": "544:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "544:12:14"
																		},
																		"nativeSrc": "544:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "544:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "517:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "517:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "526:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "526:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "513:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "513:3:14"
																		},
																		"nativeSrc": "513:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "513:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "538:2:14",
																		"nodeType": "YulLiteral",
																		"src": "538:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "509:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "509:3:14"
																},
																"nativeSrc": "509:32:14",
																"nodeType": "YulFunctionCall",
																"src": "509:32:14"
															},
															"nativeSrc": "506:52:14",
															"nodeType": "YulIf",
															"src": "506:52:14"
														},
														{
															"nativeSrc": "567:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "567:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "580:1:14",
																"nodeType": "YulLiteral",
																"src": "580:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "571:5:14",
																	"nodeType": "YulTypedName",
																	"src": "571:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "590:32:14",
															"nodeType": "YulAssignment",
															"src": "590:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "612:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "612:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "599:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:14"
																},
																"nativeSrc": "599:23:14",
																"nodeType": "YulFunctionCall",
																"src": "599:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "590:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "590:5:14"
																}
															]
														},
														{
															"nativeSrc": "631:15:14",
															"nodeType": "YulAssignment",
															"src": "631:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "641:5:14",
																"nodeType": "YulIdentifier",
																"src": "641:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "631:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "426:226:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "462:9:14",
														"nodeType": "YulTypedName",
														"src": "462:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "473:7:14",
														"nodeType": "YulTypedName",
														"src": "473:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "485:6:14",
														"nodeType": "YulTypedName",
														"src": "485:6:14",
														"type": ""
													}
												],
												"src": "426:226:14"
											},
											{
												"body": {
													"nativeSrc": "752:92:14",
													"nodeType": "YulBlock",
													"src": "752:92:14",
													"statements": [
														{
															"nativeSrc": "762:26:14",
															"nodeType": "YulAssignment",
															"src": "762:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "774:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "774:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "785:2:14",
																		"nodeType": "YulLiteral",
																		"src": "785:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "770:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:14"
																},
																"nativeSrc": "770:18:14",
																"nodeType": "YulFunctionCall",
																"src": "770:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "762:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "762:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "804:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "804:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "829:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "822:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "822:6:14"
																				},
																				"nativeSrc": "822:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "822:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "815:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "815:6:14"
																		},
																		"nativeSrc": "815:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "815:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "797:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "797:6:14"
																},
																"nativeSrc": "797:41:14",
																"nodeType": "YulFunctionCall",
																"src": "797:41:14"
															},
															"nativeSrc": "797:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "797:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "657:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "721:9:14",
														"nodeType": "YulTypedName",
														"src": "721:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "732:6:14",
														"nodeType": "YulTypedName",
														"src": "732:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "743:4:14",
														"nodeType": "YulTypedName",
														"src": "743:4:14",
														"type": ""
													}
												],
												"src": "657:187:14"
											},
											{
												"body": {
													"nativeSrc": "898:124:14",
													"nodeType": "YulBlock",
													"src": "898:124:14",
													"statements": [
														{
															"nativeSrc": "908:29:14",
															"nodeType": "YulAssignment",
															"src": "908:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "930:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "930:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "917:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "917:12:14"
																},
																"nativeSrc": "917:20:14",
																"nodeType": "YulFunctionCall",
																"src": "917:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "908:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "908:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1000:16:14",
																"nodeType": "YulBlock",
																"src": "1000:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1009:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1009:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1012:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1012:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1002:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1002:6:14"
																			},
																			"nativeSrc": "1002:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1002:12:14"
																		},
																		"nativeSrc": "1002:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1002:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "959:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "959:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "970:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "970:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "985:3:14",
																										"nodeType": "YulLiteral",
																										"src": "985:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "990:1:14",
																										"nodeType": "YulLiteral",
																										"src": "990:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "981:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "981:3:14"
																								},
																								"nativeSrc": "981:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "981:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "994:1:14",
																								"nodeType": "YulLiteral",
																								"src": "994:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "977:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "977:3:14"
																						},
																						"nativeSrc": "977:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "977:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "966:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "966:3:14"
																				},
																				"nativeSrc": "966:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "966:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "956:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "956:2:14"
																		},
																		"nativeSrc": "956:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "956:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "949:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:14"
																},
																"nativeSrc": "949:50:14",
																"nodeType": "YulFunctionCall",
																"src": "949:50:14"
															},
															"nativeSrc": "946:70:14",
															"nodeType": "YulIf",
															"src": "946:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "849:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "877:6:14",
														"nodeType": "YulTypedName",
														"src": "877:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "888:5:14",
														"nodeType": "YulTypedName",
														"src": "888:5:14",
														"type": ""
													}
												],
												"src": "849:173:14"
											},
											{
												"body": {
													"nativeSrc": "1059:95:14",
													"nodeType": "YulBlock",
													"src": "1059:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1076:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1076:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1083:3:14",
																				"nodeType": "YulLiteral",
																				"src": "1083:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1088:10:14",
																				"nodeType": "YulLiteral",
																				"src": "1088:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1079:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1079:3:14"
																		},
																		"nativeSrc": "1079:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1079:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1069:6:14"
																},
																"nativeSrc": "1069:31:14",
																"nodeType": "YulFunctionCall",
																"src": "1069:31:14"
															},
															"nativeSrc": "1069:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "1069:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1116:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1116:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1119:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1119:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1109:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:14"
																},
																"nativeSrc": "1109:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1109:15:14"
															},
															"nativeSrc": "1109:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1109:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1140:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1140:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1143:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1143:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1133:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1133:6:14"
																},
																"nativeSrc": "1133:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1133:15:14"
															},
															"nativeSrc": "1133:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1133:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1027:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1027:127:14"
											},
											{
												"body": {
													"nativeSrc": "1234:641:14",
													"nodeType": "YulBlock",
													"src": "1234:641:14",
													"statements": [
														{
															"nativeSrc": "1244:13:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1244:13:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1256:1:14",
																"nodeType": "YulLiteral",
																"src": "1256:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "1248:4:14",
																	"nodeType": "YulTypedName",
																	"src": "1248:4:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1300:22:14",
																"nodeType": "YulBlock",
																"src": "1300:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1302:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1302:16:14"
																			},
																			"nativeSrc": "1302:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1302:18:14"
																		},
																		"nativeSrc": "1302:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1272:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1280:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1269:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1269:2:14"
																},
																"nativeSrc": "1269:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1269:30:14"
															},
															"nativeSrc": "1266:56:14",
															"nodeType": "YulIf",
															"src": "1266:56:14"
														},
														{
															"nativeSrc": "1331:43:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1331:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1353:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1361:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1349:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1349:3:14"
																		},
																		"nativeSrc": "1349:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1349:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1370:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1370:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1366:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:14"
																		},
																		"nativeSrc": "1366:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1366:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1345:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1345:3:14"
																},
																"nativeSrc": "1345:29:14",
																"nodeType": "YulFunctionCall",
																"src": "1345:29:14"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1335:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1335:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1383:25:14",
															"nodeType": "YulAssignment",
															"src": "1383:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "1395:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1395:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1403:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1403:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1391:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1391:3:14"
																},
																"nativeSrc": "1391:17:14",
																"nodeType": "YulFunctionCall",
																"src": "1391:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1383:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1383:4:14"
																}
															]
														},
														{
															"nativeSrc": "1417:15:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1417:15:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1431:1:14",
																"nodeType": "YulLiteral",
																"src": "1431:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1421:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1421:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1441:19:14",
															"nodeType": "YulAssignment",
															"src": "1441:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1451:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1451:5:14"
																},
																"nativeSrc": "1451:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1451:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1441:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:14"
																}
															]
														},
														{
															"nativeSrc": "1469:60:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1469:60:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1491:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1491:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "result",
																						"nativeSrc": "1507:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1507:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1515:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1515:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1503:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1503:3:14"
																				},
																				"nativeSrc": "1503:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1503:15:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1524:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1524:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1520:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1520:3:14"
																				},
																				"nativeSrc": "1520:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1520:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1499:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:14"
																		},
																		"nativeSrc": "1499:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1487:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1487:3:14"
																},
																"nativeSrc": "1487:42:14",
																"nodeType": "YulFunctionCall",
																"src": "1487:42:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1473:10:14",
																	"nodeType": "YulTypedName",
																	"src": "1473:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1604:22:14",
																"nodeType": "YulBlock",
																"src": "1604:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1606:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1606:16:14"
																			},
																			"nativeSrc": "1606:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1606:18:14"
																		},
																		"nativeSrc": "1606:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1606:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1547:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1547:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1559:18:14",
																				"nodeType": "YulLiteral",
																				"src": "1559:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1544:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1544:2:14"
																		},
																		"nativeSrc": "1544:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1583:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1583:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1595:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1595:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1580:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1580:2:14"
																		},
																		"nativeSrc": "1580:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1541:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1541:2:14"
																},
																"nativeSrc": "1541:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1541:62:14"
															},
															"nativeSrc": "1538:88:14",
															"nodeType": "YulIf",
															"src": "1538:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1642:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1642:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1646:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1646:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1635:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:14"
																},
																"nativeSrc": "1635:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1635:22:14"
															},
															"nativeSrc": "1635:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1635:22:14"
														},
														{
															"nativeSrc": "1666:15:14",
															"nodeType": "YulAssignment",
															"src": "1666:15:14",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1675:6:14",
																"nodeType": "YulIdentifier",
																"src": "1675:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1666:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1666:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1697:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1697:6:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1705:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1705:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1690:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:14"
																},
																"nativeSrc": "1690:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1690:22:14"
															},
															"nativeSrc": "1690:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1690:22:14"
														},
														{
															"body": {
																"nativeSrc": "1750:16:14",
																"nodeType": "YulBlock",
																"src": "1750:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1759:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1759:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1762:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1752:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:14"
																			},
																			"nativeSrc": "1752:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1752:12:14"
																		},
																		"nativeSrc": "1752:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "1731:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1731:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1736:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1736:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1727:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1727:3:14"
																		},
																		"nativeSrc": "1727:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1727:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1745:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1745:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1724:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1724:2:14"
																},
																"nativeSrc": "1724:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1724:25:14"
															},
															"nativeSrc": "1721:45:14",
															"nodeType": "YulIf",
															"src": "1721:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1792:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1800:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1800:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1788:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:14"
																		},
																		"nativeSrc": "1788:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:17:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1807:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1807:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1812:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1775:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1775:12:14"
																},
																"nativeSrc": "1775:44:14",
																"nodeType": "YulFunctionCall",
																"src": "1775:44:14"
															},
															"nativeSrc": "1775:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "1775:44:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1843:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1843:6:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1851:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1851:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1839:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:14"
																				},
																				"nativeSrc": "1839:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1839:19:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1860:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:14"
																		},
																		"nativeSrc": "1835:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:30:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1828:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:14"
																},
																"nativeSrc": "1828:41:14",
																"nodeType": "YulFunctionCall",
																"src": "1828:41:14"
															},
															"nativeSrc": "1828:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "1828:41:14"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "1159:716:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1203:3:14",
														"nodeType": "YulTypedName",
														"src": "1203:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1208:6:14",
														"nodeType": "YulTypedName",
														"src": "1208:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1216:3:14",
														"nodeType": "YulTypedName",
														"src": "1216:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1224:5:14",
														"nodeType": "YulTypedName",
														"src": "1224:5:14",
														"type": ""
													}
												],
												"src": "1159:716:14"
											},
											{
												"body": {
													"nativeSrc": "1932:169:14",
													"nodeType": "YulBlock",
													"src": "1932:169:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1981:16:14",
																"nodeType": "YulBlock",
																"src": "1981:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1993:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1993:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1983:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1983:6:14"
																			},
																			"nativeSrc": "1983:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1983:12:14"
																		},
																		"nativeSrc": "1983:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1983:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1960:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1960:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1968:4:14",
																						"nodeType": "YulLiteral",
																						"src": "1968:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1956:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1956:3:14"
																				},
																				"nativeSrc": "1956:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1956:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1975:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1975:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1952:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1952:3:14"
																		},
																		"nativeSrc": "1952:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1952:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1945:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1945:6:14"
																},
																"nativeSrc": "1945:35:14",
																"nodeType": "YulFunctionCall",
																"src": "1945:35:14"
															},
															"nativeSrc": "1942:55:14",
															"nodeType": "YulIf",
															"src": "1942:55:14"
														},
														{
															"nativeSrc": "2006:89:14",
															"nodeType": "YulAssignment",
															"src": "2006:89:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2054:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2062:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2062:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2050:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:14"
																		},
																		"nativeSrc": "2050:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2050:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2082:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2082:6:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2069:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "2069:12:14"
																		},
																		"nativeSrc": "2069:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:20:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2091:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2091:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "2015:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2015:34:14"
																},
																"nativeSrc": "2015:80:14",
																"nodeType": "YulFunctionCall",
																"src": "2015:80:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2006:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2006:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "1880:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1906:6:14",
														"nodeType": "YulTypedName",
														"src": "1906:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1914:3:14",
														"nodeType": "YulTypedName",
														"src": "1914:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1922:5:14",
														"nodeType": "YulTypedName",
														"src": "1922:5:14",
														"type": ""
													}
												],
												"src": "1880:221:14"
											},
											{
												"body": {
													"nativeSrc": "2246:714:14",
													"nodeType": "YulBlock",
													"src": "2246:714:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2293:16:14",
																"nodeType": "YulBlock",
																"src": "2293:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2302:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2302:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2305:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2305:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2295:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2295:6:14"
																			},
																			"nativeSrc": "2295:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2295:12:14"
																		},
																		"nativeSrc": "2295:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2295:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2267:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2267:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2276:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2276:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2263:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:14"
																		},
																		"nativeSrc": "2263:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2263:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2288:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2288:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2259:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:14"
																},
																"nativeSrc": "2259:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2259:33:14"
															},
															"nativeSrc": "2256:53:14",
															"nodeType": "YulIf",
															"src": "2256:53:14"
														},
														{
															"nativeSrc": "2318:39:14",
															"nodeType": "YulAssignment",
															"src": "2318:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2347:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2347:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2328:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2328:18:14"
																},
																"nativeSrc": "2328:29:14",
																"nodeType": "YulFunctionCall",
																"src": "2328:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2318:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:14"
																}
															]
														},
														{
															"nativeSrc": "2366:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2366:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2397:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2397:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2408:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2408:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2393:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2393:3:14"
																		},
																		"nativeSrc": "2393:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2393:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:14"
																},
																"nativeSrc": "2380:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2380:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2370:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2370:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2455:16:14",
																"nodeType": "YulBlock",
																"src": "2455:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2464:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2464:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2467:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2467:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2457:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2457:6:14"
																			},
																			"nativeSrc": "2457:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2457:12:14"
																		},
																		"nativeSrc": "2457:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2457:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2427:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2435:18:14",
																		"nodeType": "YulLiteral",
																		"src": "2435:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2424:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2424:2:14"
																},
																"nativeSrc": "2424:30:14",
																"nodeType": "YulFunctionCall",
																"src": "2424:30:14"
															},
															"nativeSrc": "2421:50:14",
															"nodeType": "YulIf",
															"src": "2421:50:14"
														},
														{
															"nativeSrc": "2480:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2480:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2494:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2505:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2505:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:14"
																},
																"nativeSrc": "2490:22:14",
																"nodeType": "YulFunctionCall",
																"src": "2490:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2484:2:14",
																	"nodeType": "YulTypedName",
																	"src": "2484:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2560:16:14",
																"nodeType": "YulBlock",
																"src": "2560:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2569:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2569:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2572:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2562:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2562:6:14"
																			},
																			"nativeSrc": "2562:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2562:12:14"
																		},
																		"nativeSrc": "2562:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2562:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2539:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "2539:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2543:4:14",
																						"nodeType": "YulLiteral",
																						"src": "2543:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2535:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2535:3:14"
																				},
																				"nativeSrc": "2535:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2535:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2550:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2550:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2531:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2531:3:14"
																		},
																		"nativeSrc": "2531:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2531:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2524:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2524:6:14"
																},
																"nativeSrc": "2524:35:14",
																"nodeType": "YulFunctionCall",
																"src": "2524:35:14"
															},
															"nativeSrc": "2521:55:14",
															"nodeType": "YulIf",
															"src": "2521:55:14"
														},
														{
															"nativeSrc": "2585:84:14",
															"nodeType": "YulAssignment",
															"src": "2585:84:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2634:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2634:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2638:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2638:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2630:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2630:3:14"
																		},
																		"nativeSrc": "2630:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2630:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2656:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2656:2:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2643:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "2643:12:14"
																		},
																		"nativeSrc": "2643:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2643:16:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2661:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "2661:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "2595:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2595:34:14"
																},
																"nativeSrc": "2595:74:14",
																"nodeType": "YulFunctionCall",
																"src": "2595:74:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2585:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:14"
																}
															]
														},
														{
															"nativeSrc": "2678:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2678:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2691:1:14",
																"nodeType": "YulLiteral",
																"src": "2691:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2682:5:14",
																	"nodeType": "YulTypedName",
																	"src": "2682:5:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2701:41:14",
															"nodeType": "YulAssignment",
															"src": "2701:41:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2727:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2738:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2738:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2723:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:14"
																		},
																		"nativeSrc": "2723:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:14"
																},
																"nativeSrc": "2710:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2710:32:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:14"
																}
															]
														},
														{
															"nativeSrc": "2751:15:14",
															"nodeType": "YulAssignment",
															"src": "2751:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "2761:5:14",
																"nodeType": "YulIdentifier",
																"src": "2761:5:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2751:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:14"
																}
															]
														},
														{
															"nativeSrc": "2775:48:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2775:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2808:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2808:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2819:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2819:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2804:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2804:3:14"
																		},
																		"nativeSrc": "2804:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2804:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2791:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2791:12:14"
																},
																"nativeSrc": "2791:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2791:32:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "2779:8:14",
																	"nodeType": "YulTypedName",
																	"src": "2779:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2868:16:14",
																"nodeType": "YulBlock",
																"src": "2868:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2877:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2877:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2880:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2880:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2870:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2870:6:14"
																			},
																			"nativeSrc": "2870:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2870:12:14"
																		},
																		"nativeSrc": "2870:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2870:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "2838:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "2838:8:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2848:18:14",
																		"nodeType": "YulLiteral",
																		"src": "2848:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2835:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2835:2:14"
																},
																"nativeSrc": "2835:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2835:32:14"
															},
															"nativeSrc": "2832:52:14",
															"nodeType": "YulIf",
															"src": "2832:52:14"
														},
														{
															"nativeSrc": "2893:61:14",
															"nodeType": "YulAssignment",
															"src": "2893:61:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2924:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2924:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "2935:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "2935:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2920:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:14"
																		},
																		"nativeSrc": "2920:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2946:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "2946:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "2903:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "2903:16:14"
																},
																"nativeSrc": "2903:51:14",
																"nodeType": "YulFunctionCall",
																"src": "2903:51:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2893:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2893:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_bytes_memory_ptr",
												"nativeSrc": "2106:854:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:14",
														"nodeType": "YulTypedName",
														"src": "2188:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2199:7:14",
														"nodeType": "YulTypedName",
														"src": "2199:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2211:6:14",
														"nodeType": "YulTypedName",
														"src": "2211:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2219:6:14",
														"nodeType": "YulTypedName",
														"src": "2219:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2227:6:14",
														"nodeType": "YulTypedName",
														"src": "2227:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2235:6:14",
														"nodeType": "YulTypedName",
														"src": "2235:6:14",
														"type": ""
													}
												],
												"src": "2106:854:14"
											},
											{
												"body": {
													"nativeSrc": "3035:116:14",
													"nodeType": "YulBlock",
													"src": "3035:116:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3081:16:14",
																"nodeType": "YulBlock",
																"src": "3081:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3090:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3090:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3093:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3093:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3083:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:14"
																			},
																			"nativeSrc": "3083:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3083:12:14"
																		},
																		"nativeSrc": "3083:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3056:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3056:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3065:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3065:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3052:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:14"
																		},
																		"nativeSrc": "3052:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3052:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3077:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3077:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3048:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3048:3:14"
																},
																"nativeSrc": "3048:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3048:32:14"
															},
															"nativeSrc": "3045:52:14",
															"nodeType": "YulIf",
															"src": "3045:52:14"
														},
														{
															"nativeSrc": "3106:39:14",
															"nodeType": "YulAssignment",
															"src": "3106:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3135:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3135:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3116:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3116:18:14"
																},
																"nativeSrc": "3116:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3116:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3106:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2965:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3001:9:14",
														"nodeType": "YulTypedName",
														"src": "3001:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3012:7:14",
														"nodeType": "YulTypedName",
														"src": "3012:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3024:6:14",
														"nodeType": "YulTypedName",
														"src": "3024:6:14",
														"type": ""
													}
												],
												"src": "2965:186:14"
											},
											{
												"body": {
													"nativeSrc": "3257:102:14",
													"nodeType": "YulBlock",
													"src": "3257:102:14",
													"statements": [
														{
															"nativeSrc": "3267:26:14",
															"nodeType": "YulAssignment",
															"src": "3267:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3279:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3279:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3290:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3290:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3275:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3275:3:14"
																},
																"nativeSrc": "3275:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3275:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3267:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3267:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3309:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3309:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3324:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3324:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3340:3:14",
																								"nodeType": "YulLiteral",
																								"src": "3340:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3345:1:14",
																								"nodeType": "YulLiteral",
																								"src": "3345:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3336:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "3336:3:14"
																						},
																						"nativeSrc": "3336:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "3336:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3349:1:14",
																						"nodeType": "YulLiteral",
																						"src": "3349:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3332:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3332:3:14"
																				},
																				"nativeSrc": "3332:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3332:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3320:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:14"
																		},
																		"nativeSrc": "3320:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3302:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:14"
																},
																"nativeSrc": "3302:51:14",
																"nodeType": "YulFunctionCall",
																"src": "3302:51:14"
															},
															"nativeSrc": "3302:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "3302:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3156:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3226:9:14",
														"nodeType": "YulTypedName",
														"src": "3226:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3237:6:14",
														"nodeType": "YulTypedName",
														"src": "3237:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3248:4:14",
														"nodeType": "YulTypedName",
														"src": "3248:4:14",
														"type": ""
													}
												],
												"src": "3156:203:14"
											},
											{
												"body": {
													"nativeSrc": "3443:241:14",
													"nodeType": "YulBlock",
													"src": "3443:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3489:16:14",
																"nodeType": "YulBlock",
																"src": "3489:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3498:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3498:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3501:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3501:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3491:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3491:6:14"
																			},
																			"nativeSrc": "3491:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3491:12:14"
																		},
																		"nativeSrc": "3491:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3491:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3464:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3464:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3473:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3460:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3460:3:14"
																		},
																		"nativeSrc": "3460:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3460:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3485:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3485:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3456:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3456:3:14"
																},
																"nativeSrc": "3456:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3456:32:14"
															},
															"nativeSrc": "3453:52:14",
															"nodeType": "YulIf",
															"src": "3453:52:14"
														},
														{
															"nativeSrc": "3514:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3514:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3541:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3541:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3528:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3528:12:14"
																},
																"nativeSrc": "3528:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3528:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3518:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3518:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3594:16:14",
																"nodeType": "YulBlock",
																"src": "3594:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3603:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3603:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3606:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3606:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3596:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3596:6:14"
																			},
																			"nativeSrc": "3596:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3596:12:14"
																		},
																		"nativeSrc": "3596:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3596:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3566:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3574:18:14",
																		"nodeType": "YulLiteral",
																		"src": "3574:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3563:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3563:2:14"
																},
																"nativeSrc": "3563:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3563:30:14"
															},
															"nativeSrc": "3560:50:14",
															"nodeType": "YulIf",
															"src": "3560:50:14"
														},
														{
															"nativeSrc": "3619:59:14",
															"nodeType": "YulAssignment",
															"src": "3619:59:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3650:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3650:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3661:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3661:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3646:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3646:3:14"
																		},
																		"nativeSrc": "3646:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3646:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3670:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "3670:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "3629:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "3629:16:14"
																},
																"nativeSrc": "3629:49:14",
																"nodeType": "YulFunctionCall",
																"src": "3629:49:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3619:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nativeSrc": "3364:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3409:9:14",
														"nodeType": "YulTypedName",
														"src": "3409:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3420:7:14",
														"nodeType": "YulTypedName",
														"src": "3420:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3432:6:14",
														"nodeType": "YulTypedName",
														"src": "3432:6:14",
														"type": ""
													}
												],
												"src": "3364:320:14"
											},
											{
												"body": {
													"nativeSrc": "3863:230:14",
													"nodeType": "YulBlock",
													"src": "3863:230:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3880:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3880:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3891:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3891:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3873:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:14"
																},
																"nativeSrc": "3873:21:14",
																"nodeType": "YulFunctionCall",
																"src": "3873:21:14"
															},
															"nativeSrc": "3873:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "3873:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3914:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3925:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3925:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3910:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3910:3:14"
																		},
																		"nativeSrc": "3910:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3910:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3930:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3930:2:14",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3903:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3903:6:14"
																},
																"nativeSrc": "3903:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3903:30:14"
															},
															"nativeSrc": "3903:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "3903:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3953:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3964:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3964:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3949:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:14"
																		},
																		"nativeSrc": "3949:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3949:18:14"
																	},
																	{
																		"hexValue": "5a65726f206e756d626572206f6620746172676574207061727469636970616e",
																		"kind": "string",
																		"nativeSrc": "3969:34:14",
																		"nodeType": "YulLiteral",
																		"src": "3969:34:14",
																		"type": "",
																		"value": "Zero number of target participan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3942:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3942:6:14"
																},
																"nativeSrc": "3942:62:14",
																"nodeType": "YulFunctionCall",
																"src": "3942:62:14"
															},
															"nativeSrc": "3942:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "3942:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4024:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4024:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4035:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4035:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4020:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:14"
																		},
																		"nativeSrc": "4020:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:18:14"
																	},
																	{
																		"hexValue": "747320676976656e",
																		"kind": "string",
																		"nativeSrc": "4040:10:14",
																		"nodeType": "YulLiteral",
																		"src": "4040:10:14",
																		"type": "",
																		"value": "ts given"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4013:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4013:6:14"
																},
																"nativeSrc": "4013:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4013:38:14"
															},
															"nativeSrc": "4013:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "4013:38:14"
														},
														{
															"nativeSrc": "4060:27:14",
															"nodeType": "YulAssignment",
															"src": "4060:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4072:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4072:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4083:3:14",
																		"nodeType": "YulLiteral",
																		"src": "4083:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4068:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4068:3:14"
																},
																"nativeSrc": "4068:19:14",
																"nodeType": "YulFunctionCall",
																"src": "4068:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4060:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4060:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46ae283ffec203fd37f672d1095b665b5786f54d125a160afc05124123212061__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3689:404:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3840:9:14",
														"nodeType": "YulTypedName",
														"src": "3840:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3854:4:14",
														"nodeType": "YulTypedName",
														"src": "3854:4:14",
														"type": ""
													}
												],
												"src": "3689:404:14"
											},
											{
												"body": {
													"nativeSrc": "4227:119:14",
													"nodeType": "YulBlock",
													"src": "4227:119:14",
													"statements": [
														{
															"nativeSrc": "4237:26:14",
															"nodeType": "YulAssignment",
															"src": "4237:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4249:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4249:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4260:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4245:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:14"
																},
																"nativeSrc": "4245:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4245:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4237:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4237:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4279:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4279:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4290:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4290:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4272:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4272:6:14"
																},
																"nativeSrc": "4272:25:14",
																"nodeType": "YulFunctionCall",
																"src": "4272:25:14"
															},
															"nativeSrc": "4272:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "4272:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4317:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4328:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4313:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:14"
																		},
																		"nativeSrc": "4313:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4333:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4333:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4306:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:14"
																},
																"nativeSrc": "4306:34:14",
																"nodeType": "YulFunctionCall",
																"src": "4306:34:14"
															},
															"nativeSrc": "4306:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "4306:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4098:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4188:9:14",
														"nodeType": "YulTypedName",
														"src": "4188:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4199:6:14",
														"nodeType": "YulTypedName",
														"src": "4199:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4207:6:14",
														"nodeType": "YulTypedName",
														"src": "4207:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4218:4:14",
														"nodeType": "YulTypedName",
														"src": "4218:4:14",
														"type": ""
													}
												],
												"src": "4098:248:14"
											},
											{
												"body": {
													"nativeSrc": "4525:174:14",
													"nodeType": "YulBlock",
													"src": "4525:174:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4542:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4542:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4553:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4553:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4535:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:14"
																},
																"nativeSrc": "4535:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4535:21:14"
															},
															"nativeSrc": "4535:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "4535:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4576:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4576:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4587:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4587:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4572:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:14"
																		},
																		"nativeSrc": "4572:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4572:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4592:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4592:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4565:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4565:6:14"
																},
																"nativeSrc": "4565:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4565:30:14"
															},
															"nativeSrc": "4565:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "4565:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4615:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4626:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4626:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4611:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:14"
																		},
																		"nativeSrc": "4611:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:18:14"
																	},
																	{
																		"hexValue": "5a65726f2072657761726420616d6f756e7420676976656e",
																		"kind": "string",
																		"nativeSrc": "4631:26:14",
																		"nodeType": "YulLiteral",
																		"src": "4631:26:14",
																		"type": "",
																		"value": "Zero reward amount given"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4604:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:14"
																},
																"nativeSrc": "4604:54:14",
																"nodeType": "YulFunctionCall",
																"src": "4604:54:14"
															},
															"nativeSrc": "4604:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "4604:54:14"
														},
														{
															"nativeSrc": "4667:26:14",
															"nodeType": "YulAssignment",
															"src": "4667:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4679:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4679:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4690:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4675:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:14"
																},
																"nativeSrc": "4675:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4675:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4667:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4667:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65231543b70fec099ac2aa38f6223e4d6c8e1116a7ca9f31245a55884124fd17__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4351:348:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:14",
														"nodeType": "YulTypedName",
														"src": "4502:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4516:4:14",
														"nodeType": "YulTypedName",
														"src": "4516:4:14",
														"type": ""
													}
												],
												"src": "4351:348:14"
											},
											{
												"body": {
													"nativeSrc": "4878:167:14",
													"nodeType": "YulBlock",
													"src": "4878:167:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4895:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4895:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4906:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4906:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4888:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4888:6:14"
																},
																"nativeSrc": "4888:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4888:21:14"
															},
															"nativeSrc": "4888:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "4888:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4929:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4929:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4940:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4940:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4925:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:14"
																		},
																		"nativeSrc": "4925:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4925:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4945:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4945:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4918:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:14"
																},
																"nativeSrc": "4918:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4918:30:14"
															},
															"nativeSrc": "4918:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "4918:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4968:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4968:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4979:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4979:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4964:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:14"
																		},
																		"nativeSrc": "4964:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4964:18:14"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "4984:19:14",
																		"nodeType": "YulLiteral",
																		"src": "4984:19:14",
																		"type": "",
																		"value": "Invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4957:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4957:6:14"
																},
																"nativeSrc": "4957:47:14",
																"nodeType": "YulFunctionCall",
																"src": "4957:47:14"
															},
															"nativeSrc": "4957:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "4957:47:14"
														},
														{
															"nativeSrc": "5013:26:14",
															"nodeType": "YulAssignment",
															"src": "5013:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5025:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5025:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5036:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5036:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5021:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5021:3:14"
																},
																"nativeSrc": "5021:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5021:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5013:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5013:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4704:341:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4855:9:14",
														"nodeType": "YulTypedName",
														"src": "4855:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4869:4:14",
														"nodeType": "YulTypedName",
														"src": "4869:4:14",
														"type": ""
													}
												],
												"src": "4704:341:14"
											},
											{
												"body": {
													"nativeSrc": "5116:184:14",
													"nodeType": "YulBlock",
													"src": "5116:184:14",
													"statements": [
														{
															"nativeSrc": "5126:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5126:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "5135:1:14",
																"nodeType": "YulLiteral",
																"src": "5135:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5130:1:14",
																	"nodeType": "YulTypedName",
																	"src": "5130:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5195:63:14",
																"nodeType": "YulBlock",
																"src": "5195:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "5220:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "5220:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "5225:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "5225:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5216:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5216:3:14"
																					},
																					"nativeSrc": "5216:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5216:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "5239:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "5239:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5244:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "5244:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5235:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "5235:3:14"
																							},
																							"nativeSrc": "5235:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "5235:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5229:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5229:5:14"
																					},
																					"nativeSrc": "5229:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5229:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5209:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5209:6:14"
																			},
																			"nativeSrc": "5209:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5209:39:14"
																		},
																		"nativeSrc": "5209:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5209:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5156:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5159:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5159:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5153:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5153:2:14"
																},
																"nativeSrc": "5153:13:14",
																"nodeType": "YulFunctionCall",
																"src": "5153:13:14"
															},
															"nativeSrc": "5145:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5167:19:14",
																"nodeType": "YulBlock",
																"src": "5167:19:14",
																"statements": [
																	{
																		"nativeSrc": "5169:15:14",
																		"nodeType": "YulAssignment",
																		"src": "5169:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5178:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "5178:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5181:2:14",
																					"nodeType": "YulLiteral",
																					"src": "5181:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5174:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5174:3:14"
																			},
																			"nativeSrc": "5174:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5174:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5169:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5169:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5149:3:14",
																"nodeType": "YulBlock",
																"src": "5149:3:14",
																"statements": []
															},
															"src": "5145:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5278:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5278:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5283:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5283:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5274:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5274:3:14"
																		},
																		"nativeSrc": "5274:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5274:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5292:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5292:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5267:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:14"
																},
																"nativeSrc": "5267:27:14",
																"nodeType": "YulFunctionCall",
																"src": "5267:27:14"
															},
															"nativeSrc": "5267:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "5267:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5050:250:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5094:3:14",
														"nodeType": "YulTypedName",
														"src": "5094:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5099:3:14",
														"nodeType": "YulTypedName",
														"src": "5099:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5104:6:14",
														"nodeType": "YulTypedName",
														"src": "5104:6:14",
														"type": ""
													}
												],
												"src": "5050:250:14"
											},
											{
												"body": {
													"nativeSrc": "5442:150:14",
													"nodeType": "YulBlock",
													"src": "5442:150:14",
													"statements": [
														{
															"nativeSrc": "5452:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5452:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5472:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5472:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5466:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5466:5:14"
																},
																"nativeSrc": "5466:13:14",
																"nodeType": "YulFunctionCall",
																"src": "5466:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5456:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5456:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5527:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5527:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5535:4:14",
																				"nodeType": "YulLiteral",
																				"src": "5535:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5523:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:14"
																		},
																		"nativeSrc": "5523:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5523:17:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5542:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5542:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5547:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5547:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5488:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "5488:34:14"
																},
																"nativeSrc": "5488:66:14",
																"nodeType": "YulFunctionCall",
																"src": "5488:66:14"
															},
															"nativeSrc": "5488:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "5488:66:14"
														},
														{
															"nativeSrc": "5563:23:14",
															"nodeType": "YulAssignment",
															"src": "5563:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5574:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5574:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5579:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5579:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5570:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5570:3:14"
																},
																"nativeSrc": "5570:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5570:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5563:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5563:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5305:287:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5418:3:14",
														"nodeType": "YulTypedName",
														"src": "5418:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5423:6:14",
														"nodeType": "YulTypedName",
														"src": "5423:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5434:3:14",
														"nodeType": "YulTypedName",
														"src": "5434:3:14",
														"type": ""
													}
												],
												"src": "5305:287:14"
											},
											{
												"body": {
													"nativeSrc": "5771:172:14",
													"nodeType": "YulBlock",
													"src": "5771:172:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5788:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5788:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5799:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5799:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5781:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5781:6:14"
																},
																"nativeSrc": "5781:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5781:21:14"
															},
															"nativeSrc": "5781:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "5781:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5822:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5822:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5833:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5833:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5818:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5818:3:14"
																		},
																		"nativeSrc": "5818:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5818:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5838:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5838:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5811:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5811:6:14"
																},
																"nativeSrc": "5811:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5811:30:14"
															},
															"nativeSrc": "5811:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "5811:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5861:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5861:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5872:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5872:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5857:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5857:3:14"
																		},
																		"nativeSrc": "5857:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5857:18:14"
																	},
																	{
																		"hexValue": "5369676e617475726520616c72656164792075736564",
																		"kind": "string",
																		"nativeSrc": "5877:24:14",
																		"nodeType": "YulLiteral",
																		"src": "5877:24:14",
																		"type": "",
																		"value": "Signature already used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5850:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5850:6:14"
																},
																"nativeSrc": "5850:52:14",
																"nodeType": "YulFunctionCall",
																"src": "5850:52:14"
															},
															"nativeSrc": "5850:52:14",
															"nodeType": "YulExpressionStatement",
															"src": "5850:52:14"
														},
														{
															"nativeSrc": "5911:26:14",
															"nodeType": "YulAssignment",
															"src": "5911:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5923:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5923:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5934:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5934:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5919:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5919:3:14"
																},
																"nativeSrc": "5919:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5919:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5911:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5911:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5597:346:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5748:9:14",
														"nodeType": "YulTypedName",
														"src": "5748:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5762:4:14",
														"nodeType": "YulTypedName",
														"src": "5762:4:14",
														"type": ""
													}
												],
												"src": "5597:346:14"
											},
											{
												"body": {
													"nativeSrc": "6029:103:14",
													"nodeType": "YulBlock",
													"src": "6029:103:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6075:16:14",
																"nodeType": "YulBlock",
																"src": "6075:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6084:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6084:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6087:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6087:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6077:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6077:6:14"
																			},
																			"nativeSrc": "6077:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6077:12:14"
																		},
																		"nativeSrc": "6077:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6077:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6050:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6050:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6059:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6059:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6046:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6046:3:14"
																		},
																		"nativeSrc": "6046:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6046:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6071:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6071:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6042:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6042:3:14"
																},
																"nativeSrc": "6042:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6042:32:14"
															},
															"nativeSrc": "6039:52:14",
															"nodeType": "YulIf",
															"src": "6039:52:14"
														},
														{
															"nativeSrc": "6100:26:14",
															"nodeType": "YulAssignment",
															"src": "6100:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6116:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6116:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6110:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6110:5:14"
																},
																"nativeSrc": "6110:16:14",
																"nodeType": "YulFunctionCall",
																"src": "6110:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6100:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5948:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5995:9:14",
														"nodeType": "YulTypedName",
														"src": "5995:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6006:7:14",
														"nodeType": "YulTypedName",
														"src": "6006:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6018:6:14",
														"nodeType": "YulTypedName",
														"src": "6018:6:14",
														"type": ""
													}
												],
												"src": "5948:184:14"
											},
											{
												"body": {
													"nativeSrc": "6311:224:14",
													"nodeType": "YulBlock",
													"src": "6311:224:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6328:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6328:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6339:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6339:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6321:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6321:6:14"
																},
																"nativeSrc": "6321:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6321:21:14"
															},
															"nativeSrc": "6321:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6321:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6362:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6362:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6373:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6373:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6358:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6358:3:14"
																		},
																		"nativeSrc": "6358:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6358:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6378:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6351:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6351:6:14"
																},
																"nativeSrc": "6351:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6351:30:14"
															},
															"nativeSrc": "6351:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6351:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6401:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6401:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6412:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6412:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6397:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6397:3:14"
																		},
																		"nativeSrc": "6397:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6397:18:14"
																	},
																	{
																		"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f756768206355",
																		"kind": "string",
																		"nativeSrc": "6417:34:14",
																		"nodeType": "YulLiteral",
																		"src": "6417:34:14",
																		"type": "",
																		"value": "Contract does not have enough cU"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6390:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6390:6:14"
																},
																"nativeSrc": "6390:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6390:62:14"
															},
															"nativeSrc": "6390:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "6390:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6472:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6472:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6483:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6483:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6468:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6468:3:14"
																		},
																		"nativeSrc": "6468:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6468:18:14"
																	},
																	{
																		"hexValue": "5344",
																		"kind": "string",
																		"nativeSrc": "6488:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6488:4:14",
																		"type": "",
																		"value": "SD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6461:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6461:6:14"
																},
																"nativeSrc": "6461:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6461:32:14"
															},
															"nativeSrc": "6461:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "6461:32:14"
														},
														{
															"nativeSrc": "6502:27:14",
															"nodeType": "YulAssignment",
															"src": "6502:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6514:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6514:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6525:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6525:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6510:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6510:3:14"
																},
																"nativeSrc": "6510:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6510:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6502:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6502:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db126172be1e699e37f6c2f9d4fb7f5f5f2ed87fc020503321ead645fa2bf474__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6137:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6288:9:14",
														"nodeType": "YulTypedName",
														"src": "6288:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6302:4:14",
														"nodeType": "YulTypedName",
														"src": "6302:4:14",
														"type": ""
													}
												],
												"src": "6137:398:14"
											},
											{
												"body": {
													"nativeSrc": "6714:225:14",
													"nodeType": "YulBlock",
													"src": "6714:225:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6731:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6731:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6742:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6742:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6724:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:14"
																},
																"nativeSrc": "6724:21:14",
																"nodeType": "YulFunctionCall",
																"src": "6724:21:14"
															},
															"nativeSrc": "6724:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "6724:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6765:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6765:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6776:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6776:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6761:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6761:3:14"
																		},
																		"nativeSrc": "6761:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6761:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6781:2:14",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6754:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6754:6:14"
																},
																"nativeSrc": "6754:30:14",
																"nodeType": "YulFunctionCall",
																"src": "6754:30:14"
															},
															"nativeSrc": "6754:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "6754:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6804:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6804:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6815:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6815:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6800:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6800:3:14"
																		},
																		"nativeSrc": "6800:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6800:18:14"
																	},
																	{
																		"hexValue": "416c6c207061727469636970616e74732068617665206265656e207265776172",
																		"kind": "string",
																		"nativeSrc": "6820:34:14",
																		"nodeType": "YulLiteral",
																		"src": "6820:34:14",
																		"type": "",
																		"value": "All participants have been rewar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6793:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6793:6:14"
																},
																"nativeSrc": "6793:62:14",
																"nodeType": "YulFunctionCall",
																"src": "6793:62:14"
															},
															"nativeSrc": "6793:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "6793:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6875:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6875:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6886:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6886:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6871:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:14"
																		},
																		"nativeSrc": "6871:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6871:18:14"
																	},
																	{
																		"hexValue": "646564",
																		"kind": "string",
																		"nativeSrc": "6891:5:14",
																		"nodeType": "YulLiteral",
																		"src": "6891:5:14",
																		"type": "",
																		"value": "ded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6864:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6864:6:14"
																},
																"nativeSrc": "6864:33:14",
																"nodeType": "YulFunctionCall",
																"src": "6864:33:14"
															},
															"nativeSrc": "6864:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "6864:33:14"
														},
														{
															"nativeSrc": "6906:27:14",
															"nodeType": "YulAssignment",
															"src": "6906:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6918:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6918:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6929:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6929:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6914:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6914:3:14"
																},
																"nativeSrc": "6914:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6914:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6906:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6906:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf43b20efd5aa3917da2a7fb2b1042c8d997ae65e047b330e66dc1292e43869a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6540:399:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6691:9:14",
														"nodeType": "YulTypedName",
														"src": "6691:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6705:4:14",
														"nodeType": "YulTypedName",
														"src": "6705:4:14",
														"type": ""
													}
												],
												"src": "6540:399:14"
											},
											{
												"body": {
													"nativeSrc": "7118:167:14",
													"nodeType": "YulBlock",
													"src": "7118:167:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7135:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7135:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7146:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7146:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7128:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7128:6:14"
																},
																"nativeSrc": "7128:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7128:21:14"
															},
															"nativeSrc": "7128:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7128:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7169:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7169:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7180:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7180:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7165:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7165:3:14"
																		},
																		"nativeSrc": "7165:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7165:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7185:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7185:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7158:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7158:6:14"
																},
																"nativeSrc": "7158:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7158:30:14"
															},
															"nativeSrc": "7158:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7158:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7208:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7208:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7219:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7219:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7204:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:14"
																		},
																		"nativeSrc": "7204:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7204:18:14"
																	},
																	{
																		"hexValue": "4f6e6c792076616c69642073656e646572",
																		"kind": "string",
																		"nativeSrc": "7224:19:14",
																		"nodeType": "YulLiteral",
																		"src": "7224:19:14",
																		"type": "",
																		"value": "Only valid sender"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7197:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7197:6:14"
																},
																"nativeSrc": "7197:47:14",
																"nodeType": "YulFunctionCall",
																"src": "7197:47:14"
															},
															"nativeSrc": "7197:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "7197:47:14"
														},
														{
															"nativeSrc": "7253:26:14",
															"nodeType": "YulAssignment",
															"src": "7253:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7265:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7265:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7276:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7276:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7261:3:14"
																},
																"nativeSrc": "7261:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7261:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7253:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7253:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e1c7c18f0d2dc4858f8c47ddee92da3f67b15c69b268077538bb56715c5b443__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6944:341:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7095:9:14",
														"nodeType": "YulTypedName",
														"src": "7095:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7109:4:14",
														"nodeType": "YulTypedName",
														"src": "7109:4:14",
														"type": ""
													}
												],
												"src": "6944:341:14"
											},
											{
												"body": {
													"nativeSrc": "7464:178:14",
													"nodeType": "YulBlock",
													"src": "7464:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7481:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7492:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7474:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:14"
																},
																"nativeSrc": "7474:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7474:21:14"
															},
															"nativeSrc": "7474:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7474:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7515:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7515:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7526:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7526:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7511:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7511:3:14"
																		},
																		"nativeSrc": "7511:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7511:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7531:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7531:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7504:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:14"
																},
																"nativeSrc": "7504:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7504:30:14"
															},
															"nativeSrc": "7504:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7504:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7554:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7554:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7565:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7565:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7550:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7550:3:14"
																		},
																		"nativeSrc": "7550:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7550:18:14"
																	},
																	{
																		"hexValue": "5061727469636970616e7420616c7265616479207265776172646564",
																		"kind": "string",
																		"nativeSrc": "7570:30:14",
																		"nodeType": "YulLiteral",
																		"src": "7570:30:14",
																		"type": "",
																		"value": "Participant already rewarded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7543:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:14"
																},
																"nativeSrc": "7543:58:14",
																"nodeType": "YulFunctionCall",
																"src": "7543:58:14"
															},
															"nativeSrc": "7543:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "7543:58:14"
														},
														{
															"nativeSrc": "7610:26:14",
															"nodeType": "YulAssignment",
															"src": "7610:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7622:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7633:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7618:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7618:3:14"
																},
																"nativeSrc": "7618:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7618:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7610:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7610:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_826d2dd8a9564762fd3468dbe3280b1593a291c391520dd1a6399d1ae4ab85ae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7290:352:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7441:9:14",
														"nodeType": "YulTypedName",
														"src": "7441:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7455:4:14",
														"nodeType": "YulTypedName",
														"src": "7455:4:14",
														"type": ""
													}
												],
												"src": "7290:352:14"
											},
											{
												"body": {
													"nativeSrc": "7821:166:14",
													"nodeType": "YulBlock",
													"src": "7821:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7838:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7838:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7849:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7849:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7831:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7831:6:14"
																},
																"nativeSrc": "7831:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7831:21:14"
															},
															"nativeSrc": "7831:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7831:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7872:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7872:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7883:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7883:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7868:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7868:3:14"
																		},
																		"nativeSrc": "7868:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7868:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7888:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7888:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7861:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7861:6:14"
																},
																"nativeSrc": "7861:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7861:30:14"
															},
															"nativeSrc": "7861:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7861:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7911:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7911:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7922:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7922:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7907:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7907:3:14"
																		},
																		"nativeSrc": "7907:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7907:18:14"
																	},
																	{
																		"hexValue": "4d7573742062652073637265656e6564",
																		"kind": "string",
																		"nativeSrc": "7927:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7927:18:14",
																		"type": "",
																		"value": "Must be screened"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7900:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7900:6:14"
																},
																"nativeSrc": "7900:46:14",
																"nodeType": "YulFunctionCall",
																"src": "7900:46:14"
															},
															"nativeSrc": "7900:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "7900:46:14"
														},
														{
															"nativeSrc": "7955:26:14",
															"nodeType": "YulAssignment",
															"src": "7955:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7967:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7967:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7978:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7978:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7963:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7963:3:14"
																},
																"nativeSrc": "7963:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7963:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7955:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7955:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8ca4b6d1328e36f577811b28f06a3362d1b121141fff96d1ec2415d973f2a3e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7647:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7798:9:14",
														"nodeType": "YulTypedName",
														"src": "7798:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7812:4:14",
														"nodeType": "YulTypedName",
														"src": "7812:4:14",
														"type": ""
													}
												],
												"src": "7647:340:14"
											},
											{
												"body": {
													"nativeSrc": "8166:173:14",
													"nodeType": "YulBlock",
													"src": "8166:173:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8183:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8183:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8194:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8194:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8176:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:14"
																},
																"nativeSrc": "8176:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8176:21:14"
															},
															"nativeSrc": "8176:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8176:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8217:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8217:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8228:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8228:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8213:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8213:3:14"
																		},
																		"nativeSrc": "8213:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8213:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8233:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8206:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:14"
																},
																"nativeSrc": "8206:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8206:30:14"
															},
															"nativeSrc": "8206:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8206:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8256:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8256:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8267:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8267:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8252:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8252:3:14"
																		},
																		"nativeSrc": "8252:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8252:18:14"
																	},
																	{
																		"hexValue": "4f6e6c7920756e73637265656e65642061646472657373",
																		"kind": "string",
																		"nativeSrc": "8272:25:14",
																		"nodeType": "YulLiteral",
																		"src": "8272:25:14",
																		"type": "",
																		"value": "Only unscreened address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8245:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8245:6:14"
																},
																"nativeSrc": "8245:53:14",
																"nodeType": "YulFunctionCall",
																"src": "8245:53:14"
															},
															"nativeSrc": "8245:53:14",
															"nodeType": "YulExpressionStatement",
															"src": "8245:53:14"
														},
														{
															"nativeSrc": "8307:26:14",
															"nodeType": "YulAssignment",
															"src": "8307:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8319:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8319:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8330:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8330:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8315:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8315:3:14"
																},
																"nativeSrc": "8315:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8315:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8307:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8307:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0375f97ab5e8fa7e98e1a2649faf74aac348ea84fe30ae879b7455ac3cab3a1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7992:347:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8143:9:14",
														"nodeType": "YulTypedName",
														"src": "8143:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8157:4:14",
														"nodeType": "YulTypedName",
														"src": "8157:4:14",
														"type": ""
													}
												],
												"src": "7992:347:14"
											},
											{
												"body": {
													"nativeSrc": "8518:169:14",
													"nodeType": "YulBlock",
													"src": "8518:169:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8535:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8535:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8546:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8546:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8528:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:14"
																},
																"nativeSrc": "8528:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8528:21:14"
															},
															"nativeSrc": "8528:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8528:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8569:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8569:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8580:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8580:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8565:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8565:3:14"
																		},
																		"nativeSrc": "8565:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8565:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8585:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8585:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8558:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8558:6:14"
																},
																"nativeSrc": "8558:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8558:30:14"
															},
															"nativeSrc": "8558:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8558:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8608:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8608:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8619:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8619:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8604:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8604:3:14"
																		},
																		"nativeSrc": "8604:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8604:18:14"
																	},
																	{
																		"hexValue": "5a65726f206164647265737320706173736564",
																		"kind": "string",
																		"nativeSrc": "8624:21:14",
																		"nodeType": "YulLiteral",
																		"src": "8624:21:14",
																		"type": "",
																		"value": "Zero address passed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8597:6:14"
																},
																"nativeSrc": "8597:49:14",
																"nodeType": "YulFunctionCall",
																"src": "8597:49:14"
															},
															"nativeSrc": "8597:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "8597:49:14"
														},
														{
															"nativeSrc": "8655:26:14",
															"nodeType": "YulAssignment",
															"src": "8655:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8667:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8667:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8678:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8678:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8663:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:14"
																},
																"nativeSrc": "8663:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8663:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8655:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8655:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93e85f37f73cf8e1b855512ab7e00aab2b791117712ecb476daeb6c2c0a27a67__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8344:343:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8495:9:14",
														"nodeType": "YulTypedName",
														"src": "8495:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8509:4:14",
														"nodeType": "YulTypedName",
														"src": "8509:4:14",
														"type": ""
													}
												],
												"src": "8344:343:14"
											},
											{
												"body": {
													"nativeSrc": "8866:181:14",
													"nodeType": "YulBlock",
													"src": "8866:181:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8883:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8883:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8894:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8894:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8876:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8876:6:14"
																},
																"nativeSrc": "8876:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8876:21:14"
															},
															"nativeSrc": "8876:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8876:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8917:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8917:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8928:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8928:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8913:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8913:3:14"
																		},
																		"nativeSrc": "8913:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8933:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8933:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8906:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8906:6:14"
																},
																"nativeSrc": "8906:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8906:30:14"
															},
															"nativeSrc": "8906:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8906:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8956:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8956:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8967:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8967:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8952:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8952:3:14"
																		},
																		"nativeSrc": "8952:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8952:18:14"
																	},
																	{
																		"hexValue": "436f6e747261637420646f6573206e6f74206861766520616e792063555344",
																		"kind": "string",
																		"nativeSrc": "8972:33:14",
																		"nodeType": "YulLiteral",
																		"src": "8972:33:14",
																		"type": "",
																		"value": "Contract does not have any cUSD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8945:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8945:6:14"
																},
																"nativeSrc": "8945:61:14",
																"nodeType": "YulFunctionCall",
																"src": "8945:61:14"
															},
															"nativeSrc": "8945:61:14",
															"nodeType": "YulExpressionStatement",
															"src": "8945:61:14"
														},
														{
															"nativeSrc": "9015:26:14",
															"nodeType": "YulAssignment",
															"src": "9015:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9027:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9027:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9038:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9038:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9023:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9023:3:14"
																},
																"nativeSrc": "9023:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9023:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9015:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9015:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f9c0d44ee40817c148b7e54c820d93205f217f292cbbe17b933fe457c858abf5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8692:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8843:9:14",
														"nodeType": "YulTypedName",
														"src": "8843:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8857:4:14",
														"nodeType": "YulTypedName",
														"src": "8857:4:14",
														"type": ""
													}
												],
												"src": "8692:355:14"
											},
											{
												"body": {
													"nativeSrc": "9181:145:14",
													"nodeType": "YulBlock",
													"src": "9181:145:14",
													"statements": [
														{
															"nativeSrc": "9191:26:14",
															"nodeType": "YulAssignment",
															"src": "9191:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9203:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9203:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9214:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9214:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9199:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9199:3:14"
																},
																"nativeSrc": "9199:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9199:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9191:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9191:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9233:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9233:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9248:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9248:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9264:3:14",
																								"nodeType": "YulLiteral",
																								"src": "9264:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9269:1:14",
																								"nodeType": "YulLiteral",
																								"src": "9269:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9260:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "9260:3:14"
																						},
																						"nativeSrc": "9260:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "9260:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9273:1:14",
																						"nodeType": "YulLiteral",
																						"src": "9273:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9256:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9256:3:14"
																				},
																				"nativeSrc": "9256:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9256:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9244:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9244:3:14"
																		},
																		"nativeSrc": "9244:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9244:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9226:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9226:6:14"
																},
																"nativeSrc": "9226:51:14",
																"nodeType": "YulFunctionCall",
																"src": "9226:51:14"
															},
															"nativeSrc": "9226:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "9226:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9297:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9297:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9308:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9308:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9293:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9293:3:14"
																		},
																		"nativeSrc": "9293:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9293:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9313:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9313:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9286:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9286:6:14"
																},
																"nativeSrc": "9286:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9286:34:14"
															},
															"nativeSrc": "9286:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9286:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9052:274:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9142:9:14",
														"nodeType": "YulTypedName",
														"src": "9142:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9153:6:14",
														"nodeType": "YulTypedName",
														"src": "9153:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9161:6:14",
														"nodeType": "YulTypedName",
														"src": "9161:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9172:4:14",
														"nodeType": "YulTypedName",
														"src": "9172:4:14",
														"type": ""
													}
												],
												"src": "9052:274:14"
											},
											{
												"body": {
													"nativeSrc": "9409:199:14",
													"nodeType": "YulBlock",
													"src": "9409:199:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9455:16:14",
																"nodeType": "YulBlock",
																"src": "9455:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9464:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9464:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9467:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9467:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9457:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9457:6:14"
																			},
																			"nativeSrc": "9457:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9457:12:14"
																		},
																		"nativeSrc": "9457:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9457:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9439:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9439:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9426:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9426:3:14"
																		},
																		"nativeSrc": "9426:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9426:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9451:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9451:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9422:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9422:3:14"
																},
																"nativeSrc": "9422:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9422:32:14"
															},
															"nativeSrc": "9419:52:14",
															"nodeType": "YulIf",
															"src": "9419:52:14"
														},
														{
															"nativeSrc": "9480:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9480:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9499:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9499:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9493:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9493:5:14"
																},
																"nativeSrc": "9493:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9493:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9484:5:14",
																	"nodeType": "YulTypedName",
																	"src": "9484:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9562:16:14",
																"nodeType": "YulBlock",
																"src": "9562:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9571:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9571:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9574:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9574:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9564:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9564:6:14"
																			},
																			"nativeSrc": "9564:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9564:12:14"
																		},
																		"nativeSrc": "9564:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9564:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9531:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9531:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "9552:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "9552:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "9545:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "9545:6:14"
																						},
																						"nativeSrc": "9545:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "9545:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9538:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "9538:6:14"
																				},
																				"nativeSrc": "9538:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9538:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9528:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9528:2:14"
																		},
																		"nativeSrc": "9528:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9528:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9521:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9521:6:14"
																},
																"nativeSrc": "9521:40:14",
																"nodeType": "YulFunctionCall",
																"src": "9521:40:14"
															},
															"nativeSrc": "9518:60:14",
															"nodeType": "YulIf",
															"src": "9518:60:14"
														},
														{
															"nativeSrc": "9587:15:14",
															"nodeType": "YulAssignment",
															"src": "9587:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "9597:5:14",
																"nodeType": "YulIdentifier",
																"src": "9597:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9587:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9587:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9331:277:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9375:9:14",
														"nodeType": "YulTypedName",
														"src": "9375:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9386:7:14",
														"nodeType": "YulTypedName",
														"src": "9386:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9398:6:14",
														"nodeType": "YulTypedName",
														"src": "9398:6:14",
														"type": ""
													}
												],
												"src": "9331:277:14"
											},
											{
												"body": {
													"nativeSrc": "9760:348:14",
													"nodeType": "YulBlock",
													"src": "9760:348:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9777:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9777:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9788:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9788:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9770:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9770:6:14"
																},
																"nativeSrc": "9770:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9770:21:14"
															},
															"nativeSrc": "9770:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9770:21:14"
														},
														{
															"nativeSrc": "9800:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9800:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9820:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9820:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9814:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9814:5:14"
																},
																"nativeSrc": "9814:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9814:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9804:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9804:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9847:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9847:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9858:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9858:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9843:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9843:3:14"
																		},
																		"nativeSrc": "9843:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9843:18:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9863:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9863:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9836:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9836:6:14"
																},
																"nativeSrc": "9836:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9836:34:14"
															},
															"nativeSrc": "9836:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9836:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9918:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9918:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9926:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9926:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9914:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9914:3:14"
																		},
																		"nativeSrc": "9914:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9914:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9937:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9937:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9948:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9948:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9933:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9933:3:14"
																		},
																		"nativeSrc": "9933:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9933:18:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9953:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9953:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9879:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "9879:34:14"
																},
																"nativeSrc": "9879:81:14",
																"nodeType": "YulFunctionCall",
																"src": "9879:81:14"
															},
															"nativeSrc": "9879:81:14",
															"nodeType": "YulExpressionStatement",
															"src": "9879:81:14"
														},
														{
															"nativeSrc": "9969:62:14",
															"nodeType": "YulAssignment",
															"src": "9969:62:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9985:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9985:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "10004:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "10004:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10012:2:14",
																								"nodeType": "YulLiteral",
																								"src": "10012:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10000:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10000:3:14"
																						},
																						"nativeSrc": "10000:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10000:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10021:2:14",
																								"nodeType": "YulLiteral",
																								"src": "10021:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10017:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10017:3:14"
																						},
																						"nativeSrc": "10017:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10017:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9996:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9996:3:14"
																				},
																				"nativeSrc": "9996:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9996:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9981:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9981:3:14"
																		},
																		"nativeSrc": "9981:45:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9981:45:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10028:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10028:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9977:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9977:3:14"
																},
																"nativeSrc": "9977:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9977:54:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9969:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9969:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10051:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10051:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10062:4:14",
																				"nodeType": "YulLiteral",
																				"src": "10062:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10047:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10047:3:14"
																		},
																		"nativeSrc": "10047:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10047:20:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10073:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10073:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10089:3:14",
																								"nodeType": "YulLiteral",
																								"src": "10089:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10094:1:14",
																								"nodeType": "YulLiteral",
																								"src": "10094:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10085:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10085:3:14"
																						},
																						"nativeSrc": "10085:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10085:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10098:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10098:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10081:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10081:3:14"
																				},
																				"nativeSrc": "10081:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10081:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10069:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10069:3:14"
																		},
																		"nativeSrc": "10069:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10069:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10040:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10040:6:14"
																},
																"nativeSrc": "10040:62:14",
																"nodeType": "YulFunctionCall",
																"src": "10040:62:14"
															},
															"nativeSrc": "10040:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "10040:62:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "9613:495:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9721:9:14",
														"nodeType": "YulTypedName",
														"src": "9721:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9732:6:14",
														"nodeType": "YulTypedName",
														"src": "9732:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9740:6:14",
														"nodeType": "YulTypedName",
														"src": "9740:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9751:4:14",
														"nodeType": "YulTypedName",
														"src": "9751:4:14",
														"type": ""
													}
												],
												"src": "9613:495:14"
											},
											{
												"body": {
													"nativeSrc": "10308:300:14",
													"nodeType": "YulBlock",
													"src": "10308:300:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10325:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10325:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10338:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10338:2:14",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "10342:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10342:6:14"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "10334:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10334:3:14"
																				},
																				"nativeSrc": "10334:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10334:15:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "10355:26:14",
																						"nodeType": "YulLiteral",
																						"src": "10355:26:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10351:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10351:3:14"
																				},
																				"nativeSrc": "10351:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10351:31:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10330:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10330:3:14"
																		},
																		"nativeSrc": "10330:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10330:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10318:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10318:6:14"
																},
																"nativeSrc": "10318:66:14",
																"nodeType": "YulFunctionCall",
																"src": "10318:66:14"
															},
															"nativeSrc": "10318:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "10318:66:14"
														},
														{
															"nativeSrc": "10393:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10393:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10413:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10413:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10407:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10407:5:14"
																},
																"nativeSrc": "10407:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10407:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10397:6:14",
																	"nodeType": "YulTypedName",
																	"src": "10397:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10468:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10468:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10476:4:14",
																				"nodeType": "YulLiteral",
																				"src": "10476:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10464:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10464:3:14"
																		},
																		"nativeSrc": "10464:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10464:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "10487:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10487:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10492:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10492:2:14",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10483:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10483:3:14"
																		},
																		"nativeSrc": "10483:12:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10483:12:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10497:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10429:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "10429:34:14"
																},
																"nativeSrc": "10429:75:14",
																"nodeType": "YulFunctionCall",
																"src": "10429:75:14"
															},
															"nativeSrc": "10429:75:14",
															"nodeType": "YulExpressionStatement",
															"src": "10429:75:14"
														},
														{
															"nativeSrc": "10513:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10513:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10527:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10527:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10532:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10532:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:14"
																},
																"nativeSrc": "10523:16:14",
																"nodeType": "YulFunctionCall",
																"src": "10523:16:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10517:2:14",
																	"nodeType": "YulTypedName",
																	"src": "10517:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "10559:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "10559:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10563:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10563:2:14",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10555:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:14"
																		},
																		"nativeSrc": "10555:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:11:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10568:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10568:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10548:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:14"
																},
																"nativeSrc": "10548:27:14",
																"nodeType": "YulFunctionCall",
																"src": "10548:27:14"
															},
															"nativeSrc": "10548:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "10548:27:14"
														},
														{
															"nativeSrc": "10584:18:14",
															"nodeType": "YulAssignment",
															"src": "10584:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10595:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "10595:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10599:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10599:2:14",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10591:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10591:3:14"
																},
																"nativeSrc": "10591:11:14",
																"nodeType": "YulFunctionCall",
																"src": "10591:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10584:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10584:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10113:495:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10268:3:14",
														"nodeType": "YulTypedName",
														"src": "10268:3:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10273:6:14",
														"nodeType": "YulTypedName",
														"src": "10273:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10281:6:14",
														"nodeType": "YulTypedName",
														"src": "10281:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10289:6:14",
														"nodeType": "YulTypedName",
														"src": "10289:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10300:3:14",
														"nodeType": "YulTypedName",
														"src": "10300:3:14",
														"type": ""
													}
												],
												"src": "10113:495:14"
											},
											{
												"body": {
													"nativeSrc": "10645:95:14",
													"nodeType": "YulBlock",
													"src": "10645:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10662:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10662:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10669:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10669:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10674:10:14",
																				"nodeType": "YulLiteral",
																				"src": "10674:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10665:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10665:3:14"
																		},
																		"nativeSrc": "10665:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10665:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10655:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:14"
																},
																"nativeSrc": "10655:31:14",
																"nodeType": "YulFunctionCall",
																"src": "10655:31:14"
															},
															"nativeSrc": "10655:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "10655:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10702:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10702:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10705:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10705:4:14",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10695:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10695:6:14"
																},
																"nativeSrc": "10695:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10695:15:14"
															},
															"nativeSrc": "10695:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "10695:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10726:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10726:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10729:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10729:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10719:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10719:6:14"
																},
																"nativeSrc": "10719:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10719:15:14"
															},
															"nativeSrc": "10719:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "10719:15:14"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "10613:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "10613:127:14"
											},
											{
												"body": {
													"nativeSrc": "10846:76:14",
													"nodeType": "YulBlock",
													"src": "10846:76:14",
													"statements": [
														{
															"nativeSrc": "10856:26:14",
															"nodeType": "YulAssignment",
															"src": "10856:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10868:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10868:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10879:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10879:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10864:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10864:3:14"
																},
																"nativeSrc": "10864:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10864:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10856:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10856:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10898:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10898:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10909:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10909:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10891:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10891:6:14"
																},
																"nativeSrc": "10891:25:14",
																"nodeType": "YulFunctionCall",
																"src": "10891:25:14"
															},
															"nativeSrc": "10891:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "10891:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "10745:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10815:9:14",
														"nodeType": "YulTypedName",
														"src": "10815:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10826:6:14",
														"nodeType": "YulTypedName",
														"src": "10826:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10837:4:14",
														"nodeType": "YulTypedName",
														"src": "10837:4:14",
														"type": ""
													}
												],
												"src": "10745:177:14"
											},
											{
												"body": {
													"nativeSrc": "11108:217:14",
													"nodeType": "YulBlock",
													"src": "11108:217:14",
													"statements": [
														{
															"nativeSrc": "11118:27:14",
															"nodeType": "YulAssignment",
															"src": "11118:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11130:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11130:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11141:3:14",
																		"nodeType": "YulLiteral",
																		"src": "11141:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11126:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11126:3:14"
																},
																"nativeSrc": "11126:19:14",
																"nodeType": "YulFunctionCall",
																"src": "11126:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11118:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11118:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11161:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11161:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11172:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11172:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11154:6:14"
																},
																"nativeSrc": "11154:25:14",
																"nodeType": "YulFunctionCall",
																"src": "11154:25:14"
															},
															"nativeSrc": "11154:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "11154:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11199:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11199:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11210:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11210:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11195:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11195:3:14"
																		},
																		"nativeSrc": "11195:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11195:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11219:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11219:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11227:4:14",
																				"nodeType": "YulLiteral",
																				"src": "11227:4:14",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11215:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11215:3:14"
																		},
																		"nativeSrc": "11215:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11215:17:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11188:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11188:6:14"
																},
																"nativeSrc": "11188:45:14",
																"nodeType": "YulFunctionCall",
																"src": "11188:45:14"
															},
															"nativeSrc": "11188:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "11188:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11253:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11264:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11264:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11249:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:14"
																		},
																		"nativeSrc": "11249:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11269:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11269:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11242:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:14"
																},
																"nativeSrc": "11242:34:14",
																"nodeType": "YulFunctionCall",
																"src": "11242:34:14"
															},
															"nativeSrc": "11242:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "11242:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11296:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11296:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11307:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11307:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11292:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11292:3:14"
																		},
																		"nativeSrc": "11292:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11292:18:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11312:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11312:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11285:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11285:6:14"
																},
																"nativeSrc": "11285:34:14",
																"nodeType": "YulFunctionCall",
																"src": "11285:34:14"
															},
															"nativeSrc": "11285:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "11285:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "10927:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11053:9:14",
														"nodeType": "YulTypedName",
														"src": "11053:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11064:6:14",
														"nodeType": "YulTypedName",
														"src": "11064:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11072:6:14",
														"nodeType": "YulTypedName",
														"src": "11072:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11080:6:14",
														"nodeType": "YulTypedName",
														"src": "11080:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11088:6:14",
														"nodeType": "YulTypedName",
														"src": "11088:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11099:4:14",
														"nodeType": "YulTypedName",
														"src": "11099:4:14",
														"type": ""
													}
												],
												"src": "10927:398:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20Metadata_$251__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let size := 0\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let result := and(add(length, 31), not(31))\n        size := add(result, 0x20)\n        let memPtr := 0\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(result, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_46ae283ffec203fd37f672d1095b665b5786f54d125a160afc05124123212061__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Zero number of target participan\")\n        mstore(add(headStart, 96), \"ts given\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_65231543b70fec099ac2aa38f6223e4d6c8e1116a7ca9f31245a55884124fd17__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Zero reward amount given\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Signature already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_db126172be1e699e37f6c2f9d4fb7f5f5f2ed87fc020503321ead645fa2bf474__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Contract does not have enough cU\")\n        mstore(add(headStart, 96), \"SD\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cf43b20efd5aa3917da2a7fb2b1042c8d997ae65e047b330e66dc1292e43869a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"All participants have been rewar\")\n        mstore(add(headStart, 96), \"ded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9e1c7c18f0d2dc4858f8c47ddee92da3f67b15c69b268077538bb56715c5b443__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Only valid sender\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_826d2dd8a9564762fd3468dbe3280b1593a291c391520dd1a6399d1ae4ab85ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Participant already rewarded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d8ca4b6d1328e36f577811b28f06a3362d1b121141fff96d1ec2415d973f2a3e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Must be screened\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0375f97ab5e8fa7e98e1a2649faf74aac348ea84fe30ae879b7455ac3cab3a1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Only unscreened address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93e85f37f73cf8e1b855512ab7e00aab2b791117712ecb476daeb6c2c0a27a67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Zero address passed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f9c0d44ee40817c148b7e54c820d93205f217f292cbbe17b933fe457c858abf5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Contract does not have any cUSD\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(headStart, 96), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_address_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 20), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 20), value2)\n        end := add(_1, 52)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"4798": [
									{
										"length": 32,
										"start": 354
									},
									{
										"length": 32,
										"start": 1326
									},
									{
										"length": 32,
										"start": 2437
									},
									{
										"length": 32,
										"start": 2653
									},
									{
										"length": 32,
										"start": 2774
									},
									{
										"length": 32,
										"start": 3469
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c8063741ae614116100c3578063c5dac9131161007c578063c5dac9131461029a578063e082fe2a146102ad578063ea1dd101146102b5578063f22069df146102c8578063f2fde38b146102d0578063f77a953e146102e357600080fd5b8063741ae6141461023b5780637a0abf0814610243578063825f98be1461024c5780638da5cb5b14610278578063a6a0981114610289578063c3aa97211461029257600080fd5b8063627d3eb911610115578063627d3eb9146101f557806364bb632f146101fd5780636fa1c59d146102105780636fa55ed9146102185780637069243c1461022b578063715018a61461023357600080fd5b80631fccf6721461015d5780633960fc66146101a15780634074be40146101ab5780634fc91ba6146101c2578063528780cc146101cb5780635c975abb146101de575b600080fd5b6101847f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a96102eb565b005b6101b4600a5481565b604051908152602001610198565b6101b4600b5481565b6101a96101d9366004611210565b6102fd565b60025460ff165b6040519015158152602001610198565b6009546101b4565b6101a961020b366004611210565b6103b4565b6007546101b4565b6101a96102263660046112fc565b61044c565b6006546101b4565b6101a96107ac565b6008546101b4565b6101b460065481565b6101e561025a366004611393565b6001600160a01b031660009081526004602052604090205460ff1690565b6000546001600160a01b0316610184565b6101b460075481565b600b546101b4565b6101e56102a83660046113ae565b6107be565b6101a96107e9565b6101a96102c3366004611393565b6107f9565b6101a961095d565b6101a96102de366004611393565b610be8565b600a546101b4565b6102f3610c26565b6102fb610c53565b565b610305610c26565b8060000361036b5760405162461bcd60e51b815260206004820152602860248201527f5a65726f206e756d626572206f6620746172676574207061727469636970616e6044820152673a399033b4bb32b760c11b60648201526084015b60405180910390fd5b6007805490829055604080518281526020810184905283917fb90f11d36a1f2ec1f3b89ac87ccd1ffab1a49f3e3ca83cfdac21fd99a537cbc191015b60405180910390a1505050565b6103bc610c26565b8060000361040c5760405162461bcd60e51b815260206004820152601860248201527f5a65726f2072657761726420616d6f756e7420676976656e00000000000000006044820152606401610362565b6006805490829055604080518281526020810184905283917ff0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c9491016103a7565b610454610ca5565b61045c610cc9565b8383838361046c84848484610cf3565b6104ac5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610362565b846005816040516104bd919061140f565b9081526040519081900360200190205460ff16156105165760405162461bcd60e51b815260206004820152601660248201527514da59db985d1d5c9948185b1c9958591e481d5cd95960521b6044820152606401610362565b6006546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a1919061142b565b10156105fa5760405162461bcd60e51b815260206004820152602260248201527f436f6e747261637420646f6573206e6f74206861766520656e6f75676820635560448201526114d160f21b6064820152608401610362565b600754600854106106595760405162461bcd60e51b815260206004820152602360248201527f416c6c207061727469636970616e74732068617665206265656e20726577617260448201526219195960ea1b6064820152608401610362565b88336001600160a01b038216146106a65760405162461bcd60e51b815260206004820152601160248201527027b7363c903b30b634b21039b2b73232b960791b6044820152606401610362565b6001600160a01b038a166000908152600360205260409020548a9060ff16156107115760405162461bcd60e51b815260206004820152601c60248201527f5061727469636970616e7420616c7265616479207265776172646564000000006044820152606401610362565b6001600160a01b038b166000908152600460205260409020548b9060ff1661076e5760405162461bcd60e51b815260206004820152601060248201526f135d5cdd081899481cd8dc99595b995960821b6044820152606401610362565b60006107798d610d5e565b905080156107945761078b8a8e610e5a565b6107948d610ec5565b5050505050505050506107a660018055565b50505050565b6107b4610c26565b6102fb6000610f2b565b60006005826040516107d0919061140f565b9081526040519081900360200190205460ff1692915050565b6107f1610c26565b6102fb610f7b565b80336001600160a01b038216146108465760405162461bcd60e51b815260206004820152601160248201527027b7363c903b30b634b21039b2b73232b960791b6044820152606401610362565b6001600160a01b038216600090815260046020526040902054829060ff16156108b15760405162461bcd60e51b815260206004820152601760248201527f4f6e6c7920756e73637265656e656420616464726573730000000000000000006044820152606401610362565b6001600160a01b0383166108fd5760405162461bcd60e51b815260206004820152601360248201527216995c9bc81859191c995cdcc81c185cdcd959606a1b6044820152606401610362565b6001600160a01b038316600081815260046020908152604091829020805460ff19166001908117909155600a8054909101905590519182527fc4ec7a2dc5e72d17666a15570e438638bfc023a7a091df162b669c37198bacb291016103a7565b610965610c26565b61096d610ca5565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f8919061142b565b11610a455760405162461bcd60e51b815260206004820152601f60248201527f436f6e747261637420646f6573206e6f74206861766520616e792063555344006044820152606401610362565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610aac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad0919061142b565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb610b156000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b869190611444565b90508015610be4577f2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097610bc16000546001600160a01b031690565b604080516001600160a01b03909216825260208201859052015b60405180910390a15b5050565b610bf0610c26565b6001600160a01b038116610c1a57604051631e4fbdf760e01b815260006004820152602401610362565b610c2381610f2b565b50565b6000546001600160a01b031633146102fb5760405163118cdaa760e01b8152336004820152602401610362565b610c5b610fb8565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60025460ff16156102fb5760405163d93c066560e01b815260040160405180910390fd5b600260015403610cec57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080610d01868686610fdb565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81209054919250906001600160a01b0316610d498286611011565b6001600160a01b031614979650505050505050565b60065460405163a9059cbb60e01b81526001600160a01b038381166004830152602482019290925260009182917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc9190611444565b90508015610e5457600880546001019055600654604080516001600160a01b038616815260208101929092527f8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e910160405180910390a15b92915050565b6001600583604051610e6c919061140f565b908152604051908190036020018120805492151560ff1990931692909217909155600b805460010190557f97fb84d3f0d20b64a0a8e52541408b0155ba98fea88e66283156f306d04b08b890610bdb9084908490611466565b6001600160a01b038116600081815260036020908152604091829020805460ff1916600190811790915560098054909101905590519182527f654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943910160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f83610ca5565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c883390565b60025460ff166102fb57604051638dfc202b60e01b815260040160405180910390fd5b6000838383604051602001610ff2939291906114aa565b6040516020818303038152906040528051906020012090509392505050565b600080600080611021868661103b565b9250925092506110318282611088565b5090949350505050565b600080600083516041036110755760208401516040850151606086015160001a61106788828585611141565b955095509550505050611081565b50508151600091506002905b9250925092565b600082600381111561109c5761109c6114e9565b036110a5575050565b60018260038111156110b9576110b96114e9565b036110d75760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156110eb576110eb6114e9565b0361110c5760405163fce698f760e01b815260048101829052602401610362565b6003826003811115611120576111206114e9565b03610be4576040516335e2f38360e21b815260048101829052602401610362565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561117c5750600091506003905082611206565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156111d0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111fc57506000925060019150829050611206565b9250600091508190505b9450945094915050565b60006020828403121561122257600080fd5b5035919050565b80356001600160a01b038116811461124057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561127657611276611245565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156112a5576112a5611245565b6040528381529050808284018510156112bd57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126112e657600080fd5b6112f58383356020850161125b565b9392505050565b6000806000806080858703121561131257600080fd5b61131b85611229565b9350602085013567ffffffffffffffff81111561133757600080fd5b8501601f8101871361134857600080fd5b6113578782356020840161125b565b93505060408501359150606085013567ffffffffffffffff81111561137b57600080fd5b611387878288016112d5565b91505092959194509250565b6000602082840312156113a557600080fd5b6112f582611229565b6000602082840312156113c057600080fd5b813567ffffffffffffffff8111156113d757600080fd5b6113e3848285016112d5565b949350505050565b60005b838110156114065781810151838201526020016113ee565b50506000910152565b600082516114218184602087016113eb565b9190910192915050565b60006020828403121561143d57600080fd5b5051919050565b60006020828403121561145657600080fd5b815180151581146112f557600080fd5b60408152600083518060408401526114858160608501602088016113eb565b6001600160a01b0393909316602083015250601f91909101601f191601606001919050565b6bffffffffffffffffffffffff198460601b168152600083516114d48160148501602088016113eb565b60149201918201929092526034019392505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220aa0177b810eba01cd0904d6151cad5a4346956b7127d19491da2bbbcd4e60d3064736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741AE614 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC5DAC913 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC5DAC913 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xE082FE2A EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xEA1DD101 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xF22069DF EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xF77A953E EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x741AE614 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x7A0ABF08 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x825F98BE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA6A09811 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xC3AA9721 EQ PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x627D3EB9 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x627D3EB9 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x64BB632F EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x6FA1C59D EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x6FA55ED9 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x7069243C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FCCF672 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x3960FC66 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x4074BE40 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x4FC91BA6 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x528780CC EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x2EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FC JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1B4 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x1E5 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13AE JUMP JUMPDEST PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x95D JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1B4 JUMP JUMPDEST PUSH2 0x2F3 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0xC53 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x305 PUSH2 0xC26 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x36B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206E756D626572206F6620746172676574207061727469636970616E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A399033B4BB32B7 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xB90F11D36A1F2EC1F3B89AC87CCD1FFAB1A49F3E3CA83CFDAC21FD99A537CBC1 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xC26 JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F2072657761726420616D6F756E7420676976656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xF0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94 SWAP2 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x454 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0x45C PUSH2 0xCC9 JUMP JUMPDEST DUP4 DUP4 DUP4 DUP4 PUSH2 0x46C DUP5 DUP5 DUP5 DUP5 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST DUP5 PUSH1 0x5 DUP2 PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x516 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DA59DB985D1D5C9948185B1C9958591E481D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x57D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST LT ISZERO PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F6573206E6F74206861766520656E6F756768206355 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x14D1 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD LT PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C207061727469636970616E74732068617665206265656E207265776172 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x191959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x362 JUMP JUMPDEST DUP9 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x27B7363C903B30B634B21039B2B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP11 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E7420616C726561647920726577617264656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP12 SWAP1 PUSH1 0xFF AND PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x135D5CDD081899481CD8DC99595B9959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x779 DUP14 PUSH2 0xD5E JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x794 JUMPI PUSH2 0x78B DUP11 DUP15 PUSH2 0xE5A JUMP JUMPDEST PUSH2 0x794 DUP14 PUSH2 0xEC5 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x7A6 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x2FB PUSH1 0x0 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0xF7B JUMP JUMPDEST DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x27B7363C903B30B634B21039B2B73232B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920756E73637265656E65642061646472657373000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x16995C9BC81859191C995CDCC81C185CDCD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xC4EC7A2DC5E72D17666A15570E438638BFC023A7A091DF162B669C37198BACB2 SWAP2 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x965 PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x96D PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F8 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST GT PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420646F6573206E6F74206861766520616E79206355534400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAAC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x142B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xB15 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB86 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xBE4 JUMPI PUSH32 0x2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097 PUSH2 0xBC1 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBF0 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0xF2B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH2 0xC5B PUSH2 0xFB8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD01 DUP7 DUP7 DUP7 PUSH2 0xFDB JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 SWAP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD49 DUP3 DUP7 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDFC SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xE54 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE6C SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH32 0x97FB84D3F0D20B64A0A8E52541408B0155BA98FEA88E66283156F306D04B08B8 SWAP1 PUSH2 0xBDB SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0x1466 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF83 PUSH2 0xCA5 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xC88 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFF2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1021 DUP7 DUP7 PUSH2 0x103B JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1031 DUP3 DUP3 PUSH2 0x1088 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x1075 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1067 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1141 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1081 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x109C JUMPI PUSH2 0x109C PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0x10A5 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B9 PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0x10D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10EB JUMPI PUSH2 0x10EB PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1120 JUMPI PUSH2 0x1120 PUSH2 0x14E9 JUMP JUMPDEST SUB PUSH2 0xBE4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x362 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x117C JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11FC JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1206 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT ISZERO PUSH2 0x1276 JUMPI PUSH2 0x1276 PUSH2 0x1245 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x12A5 JUMPI PUSH2 0x12A5 PUSH2 0x1245 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE SWAP1 POP DUP1 DUP3 DUP5 ADD DUP6 LT ISZERO PUSH2 0x12BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F5 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x125B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131B DUP6 PUSH2 0x1229 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1357 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x125B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1387 DUP8 DUP3 DUP9 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F5 DUP3 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E3 DUP5 DUP3 DUP6 ADD PUSH2 0x12D5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1406 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x13EE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1421 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x13EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1485 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0x60 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP5 PUSH1 0x60 SHL AND DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x14D4 DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x14 SWAP3 ADD SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x34 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA ADD PUSH24 0xB810EBA01CD0904D6151CAD5A4346956B7127D19491DA2BB 0xBC 0xD4 0xE6 0xD ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "669:18319:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:36;;;;;;;;-1:-1:-1;;;;;200:32:14;;;182:51;;170:2;155:18;835:36:13;;;;;;;;16498:71;;;:::i;:::-;;1973:43;;;;;;;;;390:25:14;;;378:2;363:18;1973:43:13;244:177:14;2107:37:13;;;;;;15546:626;;;;;;:::i;:::-;;:::i;1850:84:5:-;1920:7;;;;1850:84;;;822:14:14;;815:22;797:41;;785:2;770:18;1850:84:5;657:187:14;18871:115:13;18957:22;;18871:115;;14673:645;;;;;;:::i;:::-;;:::i;18075:123::-;18165:26;;18075:123;;11352:836;;;;;;:::i;:::-;;:::i;17486:161::-;17609:31;;17486:161;;2293:101:0;;;:::i;17806:127:13:-;17898:28;;17806:127;;1430:46;;;;;;16780:182;;;;;;:::i;:::-;-1:-1:-1;;;;;16913:42:13;16886:4;16913:42;;;:29;:42;;;;;;;;;16780:182;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;1567:41:13;;;;;;18616:115;18702:22;;18616:115;;17177:173;;;;;;:::i;:::-;;:::i;16303:67::-;;;:::i;8730:423::-;;;;;;:::i;:::-;;:::i;14087:377::-;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;18349:127:13:-;18441:28;;18349:127;;16498:71;1531:13:0;:11;:13::i;:::-;16552:10:13::1;:8;:10::i;:::-;16498:71::o:0;15546:626::-;1531:13:0;:11;:13::i;:::-;15692:30:13::1;15726:1;15692:35:::0;15671:122:::1;;;::::0;-1:-1:-1;;;15671:122:13;;3891:2:14;15671:122:13::1;::::0;::::1;3873:21:14::0;3930:2;3910:18;;;3903:30;3969:34;3949:18;;;3942:62;-1:-1:-1;;;4020:18:14;;;4013:38;4068:19;;15671:122:13::1;;;;;;;;;15844:26;::::0;;15962:58;;;;16036:129:::1;::::0;;4272:25:14;;;4328:2;4313:18;;4306:34;;;15962:58:13;;16036:129:::1;::::0;4245:18:14;16036:129:13::1;;;;;;;;15661:511;;15546:626:::0;:::o;14673:645::-;1531:13:0;:11;:13::i;:::-;14824:35:13::1;14863:1;14824:40:::0;14803:111:::1;;;::::0;-1:-1:-1;;;14803:111:13;;4553:2:14;14803:111:13::1;::::0;::::1;4535:21:14::0;4592:2;4572:18;;;4565:30;4631:26;4611:18;;;4604:54;4675:18;;14803:111:13::1;4351:348:14::0;14803:111:13::1;14970:31;::::0;;15102:68;;;;15186:125:::1;::::0;;4272:25:14;;;4328:2;4313:18;;4306:34;;;15102:68:13;;15186:125:::1;::::0;4245:18:14;15186:125:13::1;4098:248:14::0;11352:836:13;1474:19:5;:17;:19::i;:::-;2500:21:6::1;:19;:21::i;:::-;11611:11:13::2;11624:8;11634:5;11641:9;4849:56;4865:11;4878:8;4888:5;4895:9;4849:15;:56::i;:::-;4828:120;;;::::0;-1:-1:-1;;;4828:120:13;;4906:2:14;4828:120:13::2;::::0;::::2;4888:21:14::0;4945:2;4925:18;;;4918:30;-1:-1:-1;;;4964:18:14;;;4957:47;5021:18;;4828:120:13::2;4704:341:14::0;4828:120:13::2;11689:9:::3;5227:25;5253:9;5227:36;;;;;;:::i;:::-;::::0;;;::::3;::::0;;;;;::::3;::::0;;;;::::3;;5226:37;5205:106;;;::::0;-1:-1:-1;;;5205:106:13;;5799:2:14;5205:106:13::3;::::0;::::3;5781:21:14::0;5838:2;5818:18;;;5811:30;-1:-1:-1;;;5857:18:14;;;5850:52;5919:18;;5205:106:13::3;5597:346:14::0;5205:106:13::3;6661:31:::4;::::0;6628:29:::4;::::0;-1:-1:-1;;;6628:29:13;;6651:4:::4;6628:29;::::0;::::4;182:51:14::0;6628:4:13::4;-1:-1:-1::0;;;;;6628:14:13::4;::::0;::::4;::::0;155:18:14;;6628:29:13::4;;;;;;;;;;;;;;;;;::::0;::::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;6607:145;;;::::0;-1:-1:-1;;;6607:145:13;;6339:2:14;6607:145:13::4;::::0;::::4;6321:21:14::0;6378:2;6358:18;;;6351:30;6417:34;6397:18;;;6390:62;-1:-1:-1;;;6468:18:14;;;6461:32;6510:19;;6607:145:13::4;6137:398:14::0;6607:145:13::4;7251:26:::5;;7220:28;;:57;7199:139;;;::::0;-1:-1:-1;;;7199:139:13;;6742:2:14;7199:139:13::5;::::0;::::5;6724:21:14::0;6781:2;6761:18;;;6754:30;6820:34;6800:18;;;6793:62;-1:-1:-1;;;6871:18:14;;;6864:33;6914:19;;7199:139:13::5;6540:399:14::0;7199:139:13::5;11826:11:::0;6366:10:::6;-1:-1:-1::0;;;;;6366:25:13;::::6;;6358:55;;;::::0;-1:-1:-1;;;6358:55:13;;7146:2:14;6358:55:13::6;::::0;::::6;7128:21:14::0;7185:2;7165:18;;;7158:30;-1:-1:-1;;;7204:18:14;;;7197:47;7261:18;;6358:55:13::6;6944:341:14::0;6358:55:13::6;-1:-1:-1::0;;;;;6081:33:13;::::7;;::::0;;;:20:::7;:33;::::0;;;;;11873:11;;6081:33:::7;;6080:34;6059:109;;;::::0;-1:-1:-1;;;6059:109:13;;7492:2:14;6059:109:13::7;::::0;::::7;7474:21:14::0;7531:2;7511:18;;;7504:30;7570;7550:18;;;7543:58;7618:18;;6059:109:13::7;7290:352:14::0;6059:109:13::7;-1:-1:-1::0;;;;;5823:42:13;::::8;;::::0;;;:29:::8;:42;::::0;;;;;11909:11;;5823:42:::8;;5815:71;;;::::0;-1:-1:-1;;;5815:71:13;;7849:2:14;5815:71:13::8;::::0;::::8;7831:21:14::0;7888:2;7868:18;;;7861:30;-1:-1:-1;;;7907:18:14;;;7900:46;7963:18;;5815:71:13::8;7647:340:14::0;5815:71:13::8;11936:30:::9;11969;11987:11;11969:17;:30::i;:::-;11936:63;;12014:25;12010:172;;;12055:53;12085:9;12096:11;12055:29;:53::i;:::-;12122:49;12159:11;12122:36;:49::i;:::-;11926:262;6178:1:::8;6423::::7;7348::::6;4958::::3;2531::6::2;;;;2542:20:::1;1857:1:::0;3068:21;;2888:208;2542:20:::1;11352:836:13::0;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;17177:173:13:-:0;17280:4;17307:25;17333:9;17307:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;17177:173;-1:-1:-1;;17177:173:13:o;16303:67::-;1531:13:0;:11;:13::i;:::-;16355:8:13::1;:6;:8::i;8730:423::-:0;8834:11;6366:10;-1:-1:-1;;;;;6366:25:13;;;6358:55;;;;-1:-1:-1;;;6358:55:13;;7146:2:14;6358:55:13;;;7128:21:14;7185:2;7165:18;;;7158:30;-1:-1:-1;;;7204:18:14;;;7197:47;7261:18;;6358:55:13;6944:341:14;6358:55:13;-1:-1:-1;;;;;5560:42:13;::::1;;::::0;;;:29:::1;:42;::::0;;;;;8881:11;;5560:42:::1;;5559:43;5538:113;;;::::0;-1:-1:-1;;;5538:113:13;;8194:2:14;5538:113:13::1;::::0;::::1;8176:21:14::0;8233:2;8213:18;;;8206:30;8272:25;8252:18;;;8245:53;8315:18;;5538:113:13::1;7992:347:14::0;5538:113:13::1;-1:-1:-1::0;;;;;8916:25:13;::::2;8908:57;;;::::0;-1:-1:-1;;;8908:57:13;;8546:2:14;8908:57:13::2;::::0;::::2;8528:21:14::0;8585:2;8565:18;;;8558:30;-1:-1:-1;;;8604:18:14;;;8597:49;8663:18;;8908:57:13::2;8344:343:14::0;8908:57:13::2;-1:-1:-1::0;;;;;8976:42:13;::::2;;::::0;;;:29:::2;:42;::::0;;;;;;;;:49;;-1:-1:-1;;8976:49:13::2;9021:4;8976:49:::0;;::::2;::::0;;;9061:28:::2;9059:30:::0;;;;::::2;::::0;;9114:32;;182:51:14;;;9114:32:13::2;::::0;155:18:14;9114:32:13::2;14:225:14::0;14087:377:13;1531:13:0;:11;:13::i;:::-;1474:19:5::1;:17;:19::i;:::-;6934:29:13::2;::::0;-1:-1:-1;;;6934:29:13;;6957:4:::2;6934:29;::::0;::::2;182:51:14::0;6966:1:13::2;::::0;6934:4:::2;-1:-1:-1::0;;;;;6934:14:13::2;::::0;::::2;::::0;155:18:14;;6934:29:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;6913:111;;;::::0;-1:-1:-1;;;6913:111:13;;8894:2:14;6913:111:13::2;::::0;::::2;8876:21:14::0;8933:2;8913:18;;;8906:30;8972:33;8952:18;;;8945:61;9023:18;;6913:111:13::2;8692:355:14::0;6913:111:13::2;14255:29:::3;::::0;-1:-1:-1;;;14255:29:13;;14278:4:::3;14255:29;::::0;::::3;182:51:14::0;14237:15:13::3;::::0;14255:4:::3;-1:-1:-1::0;;;;;14255:14:13::3;::::0;::::3;::::0;155:18:14;;14255:29:13::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14237:47;;14294:25;14322:4;-1:-1:-1::0;;;;;14322:13:13::3;;14336:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;14336:7:13::3;14322:31;::::0;-1:-1:-1;;;;;;14322:31:13::3;::::0;;;;;;-1:-1:-1;;;;;9244:32:14;;;14322:31:13::3;::::0;::::3;9226:51:14::0;9293:18;;;9286:34;;;9199:18;;14322:31:13::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14294:59;;14368:20;14364:94;;;14409:38;14430:7;1684::0::0;1710:6;-1:-1:-1;;;;;1710:6:0;;1638:85;14430:7:13::3;14409:38;::::0;;-1:-1:-1;;;;;9244:32:14;;;9226:51;;9308:2;9293:18;;9286:34;;;9199:18;14409:38:13::3;;;;;;;;14364:94;14227:237;;14087:377::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;182:51:14::0;155:18;;2672:31:0::1;14:225:14::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;182:51:14;155:18;;1901:40:0;14:225:14;2710:117:5;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:5::1;::::0;;2798:22:::1;735:10:3::0;2807:12:5::1;2798:22;::::0;-1:-1:-1;;;;;200:32:14;;;182:51;;170:2;155:18;2798:22:5::1;;;;;;;2710:117::o:0;2002:128::-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:5;;;;;;;;;;;2575:307:6;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:6;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;10453:440:13:-;10622:4;10638:19;10660:44;10675:11;10688:8;10698:5;10660:14;:44::i;:::-;1376:34:9;10714:28:13;1363:48:9;;;1472:4;1465:25;;;1570:4;1554:21;;1710:6:0;;1465:25:9;;-1:-1:-1;1554:21:9;-1:-1:-1;;;;;1710:6:0;10836:39:13;1554:21:9;10865:9:13;10836:28;:39::i;:::-;-1:-1:-1;;;;;10836:50:13;;;10453:440;-1:-1:-1;;;;;;;10453:440:13:o;12399:525::-;12565:31;;12513:93;;-1:-1:-1;;;12513:93:13;;-1:-1:-1;;;;;9244:32:14;;;12513:93:13;;;9226:51:14;9293:18;;;9286:34;;;;12464:4:13;;;;12513;:13;;;;;;9199:18:14;;12513:93:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12480:126;;12621:25;12617:258;;;12692:28;12690:30;;;;;;12819:31;;12753:111;;;-1:-1:-1;;;;;9244:32:14;;9226:51;;9308:2;9293:18;;9286:34;;;;12753:111:13;;9199:18:14;12753:111:13;;;;;;;12617:258;12892:25;12399:525;-1:-1:-1;;12399:525:13:o;13599:295::-;13762:4;13723:25;13749:9;13723:36;;;;;;:::i;:::-;;;;;;;;;;;;;;:43;;;;;-1:-1:-1;;13723:43:13;;;;;;;;;;13803:22;13801:24;;13723:43;13801:24;;;13850:37;;;;13864:9;;13875:11;;13850:37;:::i;13115:256::-;-1:-1:-1;;;;;13200:33:13;;;;;;:20;:33;;;;;;;;;:40;;-1:-1:-1;;13200:40:13;13236:4;13200:40;;;;;;13277:22;13275:24;;;;;;;13324:40;;182:51:14;;;13324:40:13;;155:18:14;13324:40:13;;;;;;;13115:256;:::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2463:115:5:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:5::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:3::0;;656:96;2202:126:5;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:5;;;;;;;;;;;9814:226:13;9950:7;10003:11;10016:8;10026:5;9986:46;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9976:57;;;;;;9969:64;;9814:226;;;;;:::o;3714:255:8:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:8;;3714:255;-1:-1:-1;;;;3714:255:8:o;2129:778::-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:8;;2823:1;;-1:-1:-1;2827:35:8;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:8;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:8;;;;;390:25:14;;;363:18;;7634:46:8;244:177:14;7563:243:8;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:8;;;;;390:25:14;;;363:18;;7763:32:8;244:177:14;5203:1551:8;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:8;;-1:-1:-1;6385:30:8;;-1:-1:-1;6417:1:8;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;11154:25:14;;;11227:4;11215:17;;11195:18;;;11188:45;;;;11249:18;;;11242:34;;;11292:18;;;11285:34;;;6541:24:8;;11126:19:14;;6541:24:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:8;;-1:-1:-1;;6541:24:8;;;-1:-1:-1;;;;;;;6579:20:8;;6575:113;;-1:-1:-1;6631:1:8;;-1:-1:-1;6635:29:8;;-1:-1:-1;6631:1:8;;-1:-1:-1;6615:62:8;;6575:113;6706:6;-1:-1:-1;6714:20:8;;-1:-1:-1;6714:20:8;;-1:-1:-1;5203:1551:8;;;;;;;;;:::o;426:226:14:-;485:6;538:2;526:9;517:7;513:23;509:32;506:52;;;554:1;551;544:12;506:52;-1:-1:-1;599:23:14;;426:226;-1:-1:-1;426:226:14:o;849:173::-;917:20;;-1:-1:-1;;;;;966:31:14;;956:42;;946:70;;1012:1;1009;1002:12;946:70;849:173;;;:::o;1027:127::-;1088:10;1083:3;1079:20;1076:1;1069:31;1119:4;1116:1;1109:15;1143:4;1140:1;1133:15;1159:716;1224:5;1256:1;1280:18;1272:6;1269:30;1266:56;;;1302:18;;:::i;:::-;-1:-1:-1;1457:2:14;1451:9;-1:-1:-1;;1370:2:14;1349:15;;1345:29;;1515:2;1503:15;1499:29;1487:42;;1580:22;;;1559:18;1544:34;;1541:62;1538:88;;;1606:18;;:::i;:::-;1642:2;1635:22;1690;;;1675:6;-1:-1:-1;1675:6:14;1727:16;;;1724:25;-1:-1:-1;1721:45:14;;;1762:1;1759;1752:12;1721:45;1812:6;1807:3;1800:4;1792:6;1788:17;1775:44;1867:1;1860:4;1851:6;1843;1839:19;1835:30;1828:41;;1159:716;;;;;:::o;1880:221::-;1922:5;1975:3;1968:4;1960:6;1956:17;1952:27;1942:55;;1993:1;1990;1983:12;1942:55;2015:80;2091:3;2082:6;2069:20;2062:4;2054:6;2050:17;2015:80;:::i;:::-;2006:89;1880:221;-1:-1:-1;;;1880:221:14:o;2106:854::-;2211:6;2219;2227;2235;2288:3;2276:9;2267:7;2263:23;2259:33;2256:53;;;2305:1;2302;2295:12;2256:53;2328:29;2347:9;2328:29;:::i;:::-;2318:39;;2408:2;2397:9;2393:18;2380:32;2435:18;2427:6;2424:30;2421:50;;;2467:1;2464;2457:12;2421:50;2490:22;;2543:4;2535:13;;2531:27;-1:-1:-1;2521:55:14;;2572:1;2569;2562:12;2521:55;2595:74;2661:7;2656:2;2643:16;2638:2;2634;2630:11;2595:74;:::i;:::-;2585:84;-1:-1:-1;;2738:2:14;2723:18;;2710:32;;-1:-1:-1;2819:2:14;2804:18;;2791:32;2848:18;2835:32;;2832:52;;;2880:1;2877;2870:12;2832:52;2903:51;2946:7;2935:8;2924:9;2920:24;2903:51;:::i;:::-;2893:61;;;2106:854;;;;;;;:::o;2965:186::-;3024:6;3077:2;3065:9;3056:7;3052:23;3048:32;3045:52;;;3093:1;3090;3083:12;3045:52;3116:29;3135:9;3116:29;:::i;3364:320::-;3432:6;3485:2;3473:9;3464:7;3460:23;3456:32;3453:52;;;3501:1;3498;3491:12;3453:52;3541:9;3528:23;3574:18;3566:6;3563:30;3560:50;;;3606:1;3603;3596:12;3560:50;3629:49;3670:7;3661:6;3650:9;3646:22;3629:49;:::i;:::-;3619:59;3364:320;-1:-1:-1;;;;3364:320:14:o;5050:250::-;5135:1;5145:113;5159:6;5156:1;5153:13;5145:113;;;5235:11;;;5229:18;5216:11;;;5209:39;5181:2;5174:10;5145:113;;;-1:-1:-1;;5292:1:14;5274:16;;5267:27;5050:250::o;5305:287::-;5434:3;5472:6;5466:13;5488:66;5547:6;5542:3;5535:4;5527:6;5523:17;5488:66;:::i;:::-;5570:16;;;;;5305:287;-1:-1:-1;;5305:287:14:o;5948:184::-;6018:6;6071:2;6059:9;6050:7;6046:23;6042:32;6039:52;;;6087:1;6084;6077:12;6039:52;-1:-1:-1;6110:16:14;;5948:184;-1:-1:-1;5948:184:14:o;9331:277::-;9398:6;9451:2;9439:9;9430:7;9426:23;9422:32;9419:52;;;9467:1;9464;9457:12;9419:52;9499:9;9493:16;9552:5;9545:13;9538:21;9531:5;9528:32;9518:60;;9574:1;9571;9564:12;9613:495;9788:2;9777:9;9770:21;9751:4;9820:6;9814:13;9863:6;9858:2;9847:9;9843:18;9836:34;9879:81;9953:6;9948:2;9937:9;9933:18;9926:4;9918:6;9914:17;9879:81;:::i;:::-;-1:-1:-1;;;;;10069:32:14;;;;10062:4;10047:20;;10040:62;-1:-1:-1;10021:2:14;10000:15;;;;-1:-1:-1;;9996:29:14;9981:45;10028:2;9977:54;;9613:495;-1:-1:-1;9613:495:14:o;10113:::-;10355:26;10351:31;10342:6;10338:2;10334:15;10330:53;10325:3;10318:66;10300:3;10413:6;10407:13;10429:75;10497:6;10492:2;10487:3;10483:12;10476:4;10468:6;10464:17;10429:75;:::i;:::-;10563:2;10523:16;;10555:11;;;10548:27;;;;10599:2;10591:11;;10113:495;-1:-1:-1;;;10113:495:14:o;10613:127::-;10674:10;10669:3;10665:20;10662:1;10655:31;10705:4;10702:1;10695:15;10729:4;10726:1;10719:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1085800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"cUSD()": "infinite",
								"checkIfParticipantIsScreened(address)": "2616",
								"checkIfSignatureIsUsed(bytes)": "infinite",
								"getNumberOfClaimedRewards()": "2315",
								"getNumberOfRewardedParticipants()": "2315",
								"getNumberOfScreenedParticipants()": "2424",
								"getNumberOfUsedSignatures()": "2425",
								"getRewardAmountPerParticipantInWei()": "2403",
								"getTargetNumberOfParticipants()": "2359",
								"numberOfScreenedParticipants()": "2363",
								"numberOfUsedSignatures()": "2385",
								"owner()": "2409",
								"pauseSurvey()": "infinite",
								"paused()": "2427",
								"processRewardClaimByParticipant(address,string,uint256,bytes)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardAmountPerParticipantInWei()": "2340",
								"screenParticipant(address)": "52287",
								"targetNumberOfParticipants()": "2406",
								"transferOwnership(address)": "28443",
								"unpauseSurvey()": "infinite",
								"updateRewardAmountPerParticipant(uint256)": "28026",
								"updateTargetNumberOfParticipants(uint256)": "28082",
								"withdrawAllRewardFundsToResearcher()": "infinite"
							},
							"internal": {
								"getMessageHash(address,string memory,uint256)": "infinite",
								"markParticipantAsHavingClaimedReward(address)": "infinite",
								"markSignatureAsHavingBeenUsed(bytes memory,address)": "infinite",
								"rewardParticipant(address)": "infinite",
								"verifySignature(address,string memory,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 7880,
									"end": 8628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7880,
									"end": 8628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8056,
									"end": 8066,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 861,
									"end": 912,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 834,
									"end": 852,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 852,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8086,
									"end": 8109,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8086,
									"end": 8109,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8078,
									"end": 8147,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8078,
									"end": 8147,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8078,
									"end": 8147,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1125,
									"end": 1127,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 8078,
									"end": 8147,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1128,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1164,
									"end": 1166,
									"name": "PUSH",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1144,
									"end": 1162,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1144,
									"end": 1162,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1144,
									"end": 1162,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1137,
									"end": 1167,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1203,
									"end": 1237,
									"name": "PUSH",
									"source": 14,
									"value": "5A65726F206164647265737320676976656E20666F72206355534420546F6B65"
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1176,
									"end": 1238,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "37"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1254,
									"end": 1272,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1254,
									"end": 1272,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1254,
									"end": 1272,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1247,
									"end": 1278,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1295,
									"end": 1314,
									"name": "PUSH",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 1295,
									"end": 1314,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 923,
									"end": 1320,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 8078,
									"end": 8147,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8166,
									"end": 8190,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8166,
									"end": 8190,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8158,
									"end": 8228,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8158,
									"end": 8228,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8228,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1527,
									"end": 1529,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 8158,
									"end": 8228,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1509,
									"end": 1530,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1566,
									"end": 1568,
									"name": "PUSH",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1546,
									"end": 1564,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1546,
									"end": 1564,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1546,
									"end": 1564,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1539,
									"end": 1569,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1639,
									"name": "PUSH",
									"source": 14,
									"value": "5A65726F206164647265737320676976656E20666F7220726573656172636865"
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1585,
									"end": 1603,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1578,
									"end": 1640,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "39"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1656,
									"end": 1674,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1656,
									"end": 1674,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1656,
									"end": 1674,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1649,
									"end": 1680,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1697,
									"end": 1716,
									"name": "PUSH",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 1697,
									"end": 1716,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 1325,
									"end": 1722,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8158,
									"end": 8228,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8282,
									"end": 8283,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8247,
									"end": 8279,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8247,
									"end": 8283,
									"modifierDepth": 1,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8239,
									"end": 8309,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8239,
									"end": 8309,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8239,
									"end": 8309,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1929,
									"end": 1931,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 8239,
									"end": 8309,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1911,
									"end": 1932,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1968,
									"end": 1970,
									"name": "PUSH",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1948,
									"end": 1966,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1941,
									"end": 1971,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2007,
									"end": 2030,
									"name": "PUSH",
									"source": 14,
									"value": "496E76616C69642072657761726420616D6F756E740000000000000000000000"
								},
								{
									"begin": 1987,
									"end": 2005,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1987,
									"end": 2005,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1987,
									"end": 2005,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1980,
									"end": 2031,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2048,
									"end": 2066,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 2048,
									"end": 2066,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 1727,
									"end": 2072,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 8239,
									"end": 8309,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8371,
									"end": 8372,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8341,
									"end": 8368,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8341,
									"end": 8372,
									"modifierDepth": 1,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 8320,
									"end": 8435,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8320,
									"end": 8435,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8320,
									"end": 8435,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2279,
									"end": 2281,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 8320,
									"end": 8435,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2261,
									"end": 2282,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "PUSH",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 2298,
									"end": 2316,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 2298,
									"end": 2316,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2298,
									"end": 2316,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2291,
									"end": 2321,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2357,
									"end": 2391,
									"name": "PUSH",
									"source": 14,
									"value": "496E76616C6964206E756D626572206F66207461726765742070617274696369"
								},
								{
									"begin": 2337,
									"end": 2355,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 2337,
									"end": 2355,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2337,
									"end": 2355,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2330,
									"end": 2392,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "70616E7473"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2408,
									"end": 2426,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 2408,
									"end": 2426,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2408,
									"end": 2426,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2401,
									"end": 2436,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2453,
									"end": 2472,
									"name": "PUSH",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 2453,
									"end": 2472,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 2077,
									"end": 2478,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 8320,
									"end": 8435,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8446,
									"end": 8478,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8446,
									"end": 8478,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 8446,
									"end": 8478,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8489,
									"end": 8520,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 8489,
									"end": 8555,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8489,
									"end": 8555,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8489,
									"end": 8555,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8489,
									"end": 8555,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8565,
									"end": 8591,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 8565,
									"end": 8621,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 710,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 512,
									"end": 514,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 497,
									"end": 515,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 491,
									"end": 516,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 606,
									"end": 608,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 591,
									"end": 609,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 585,
									"end": 610,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 491,
									"end": 516,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 585,
									"end": 610,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 655,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 700,
									"end": 702,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 685,
									"end": 703,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 655,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 655,
									"end": 704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 655,
									"end": 704,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 655,
									"end": 704,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 645,
									"end": 704,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 645,
									"end": 704,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2077,
									"end": 2478,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 2077,
									"end": 2478,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "4798"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 669,
									"end": 18988,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220aa0177b810eba01cd0904d6151cad5a4346956b7127d19491da2bbbcd4e60d3064736f6c634300081c0033",
									".code": [
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "741AE614"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "C5DAC913"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "C5DAC913"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "E082FE2A"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "EA1DD101"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "F22069DF"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "F77A953E"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "741AE614"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "7A0ABF08"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "825F98BE"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "A6A09811"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "C3AA9721"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "627D3EB9"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "627D3EB9"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "64BB632F"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "6FA1C59D"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "6FA55ED9"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "7069243C"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "1FCCF672"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "3960FC66"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "4074BE40"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "4FC91BA6"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "528780CC"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 669,
											"end": 18988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4798"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 200,
											"end": 232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 200,
											"end": 232,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 200,
											"end": 232,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 170,
											"end": 172,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 835,
											"end": 871,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 871,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 835,
											"end": 871,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 16498,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 390,
											"end": 415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 390,
											"end": 415,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 390,
											"end": 415,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 363,
											"end": 381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 244,
											"end": 421,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2107,
											"end": 2144,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 15546,
											"end": 16172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 15546,
											"end": 16172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 822,
											"end": 836,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 822,
											"end": 836,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 815,
											"end": 837,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 797,
											"end": 838,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 797,
											"end": 838,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 657,
											"end": 844,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18871,
											"end": 18986,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 18871,
											"end": 18986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18957,
											"end": 18979,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 18957,
											"end": 18979,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 18871,
											"end": 18986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 18871,
											"end": 18986,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 14673,
											"end": 15318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 14673,
											"end": 15318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18075,
											"end": 18198,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 18075,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18165,
											"end": 18191,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 18165,
											"end": 18191,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 18075,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 18075,
											"end": 18198,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 11352,
											"end": 12188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 11352,
											"end": 12188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17486,
											"end": 17647,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 17486,
											"end": 17647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17609,
											"end": 17640,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 17609,
											"end": 17640,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17486,
											"end": 17647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 17486,
											"end": 17647,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17806,
											"end": 17933,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 17806,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17898,
											"end": 17926,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 17898,
											"end": 17926,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17806,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 17806,
											"end": 17933,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1430,
											"end": 1476,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 16780,
											"end": 16962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16886,
											"end": 16890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16942,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16913,
											"end": 16955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16962,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1608,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18616,
											"end": 18731,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18616,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18702,
											"end": 18724,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 18702,
											"end": 18724,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 18616,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 18616,
											"end": 18731,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 17177,
											"end": 17350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 17177,
											"end": 17350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16370,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 16303,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 16303,
											"end": 16370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 16303,
											"end": 16370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 8730,
											"end": 9153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 8730,
											"end": 9153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14464,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14087,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 14087,
											"end": 14464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 14087,
											"end": 14464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18349,
											"end": 18476,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 18349,
											"end": 18476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18441,
											"end": 18469,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 18441,
											"end": 18469,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 18349,
											"end": 18476,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 16498,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16552,
											"end": 16562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 16552,
											"end": 16560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 16552,
											"end": 16562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16552,
											"end": 16562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 16552,
											"end": 16562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 15722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15726,
											"end": 15727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15692,
											"end": 15727,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15671,
											"end": 15793,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15671,
											"end": 15793,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3893,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15671,
											"end": 15793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3873,
											"end": 3894,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3932,
											"name": "PUSH",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3910,
											"end": 3928,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3969,
											"end": 4003,
											"name": "PUSH",
											"source": 14,
											"value": "5A65726F206E756D626572206F6620746172676574207061727469636970616E"
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3949,
											"end": 3967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 4004,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A399033B4BB32B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4020,
											"end": 4038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4051,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4068,
											"end": 4087,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 4068,
											"end": 4087,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 15671,
											"end": 15793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 15844,
											"end": 15870,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15870,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16036,
											"end": 16165,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4297,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4297,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15962,
											"end": 16020,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "B90F11D36A1F2EC1F3B89AC87CCD1FFAB1A49F3E3CA83CFDAC21FD99A537CBC1"
										},
										{
											"begin": 16036,
											"end": 16165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16036,
											"end": 16165,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 15661,
											"end": 16172,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15661,
											"end": 16172,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15546,
											"end": 16172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 14673,
											"end": 15318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14824,
											"end": 14859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14824,
											"end": 14864,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14803,
											"end": 14914,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14803,
											"end": 14914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4555,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14803,
											"end": 14914,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4556,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4592,
											"end": 4594,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 4572,
											"end": 4590,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4572,
											"end": 4590,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4572,
											"end": 4590,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4565,
											"end": 4595,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4631,
											"end": 4657,
											"name": "PUSH",
											"source": 14,
											"value": "5A65726F2072657761726420616D6F756E7420676976656E0000000000000000"
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4604,
											"end": 4658,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 4675,
											"end": 4693,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4351,
											"end": 4699,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 14803,
											"end": 14914,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14970,
											"end": 15001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 14970,
											"end": 15001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14970,
											"end": 15001,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15170,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 15186,
											"end": 15311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15186,
											"end": 15311,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15186,
											"end": 15311,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4297,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4272,
											"end": 4297,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4340,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15102,
											"end": 15170,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15186,
											"end": 15311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F0D37C3AE852021AC329281F604B658691CBFA6B9E9C22909F06B64A8CE87C94"
										},
										{
											"begin": 15186,
											"end": 15311,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4245,
											"end": 4263,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15186,
											"end": 15311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4098,
											"end": 4346,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2500,
											"end": 2519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2500,
											"end": 2521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11611,
											"end": 11622,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11624,
											"end": 11632,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11634,
											"end": 11639,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11641,
											"end": 11650,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4905,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4865,
											"end": 4876,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4878,
											"end": 4886,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4888,
											"end": 4893,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4904,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 4849,
											"end": 4905,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4905,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4849,
											"end": 4905,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4948,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4948,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4906,
											"end": 4908,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4888,
											"end": 4909,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 4947,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 4948,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4964,
											"end": 4982,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4957,
											"end": 5004,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5021,
											"end": 5039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4704,
											"end": 5045,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 4828,
											"end": 4948,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11698,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5252,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5253,
											"end": 5262,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 5227,
											"end": 5263,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5227,
											"end": 5263,
											"modifierDepth": 3,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5226,
											"end": 5263,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5311,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5311,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5799,
											"end": 5801,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5205,
											"end": 5311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5802,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5838,
											"end": 5840,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5818,
											"end": 5836,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5811,
											"end": 5841,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DA59DB985D1D5C9948185B1C9958591E481D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5857,
											"end": 5875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5850,
											"end": 5902,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5597,
											"end": 5943,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 5205,
											"end": 5311,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6661,
											"end": 6692,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6661,
											"end": 6692,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6657,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6655,
											"modifierDepth": 4,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6628,
											"end": 6657,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6632,
											"modifierDepth": 4,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4798"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6642,
											"modifierDepth": 4,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6642,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6642,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 6628,
											"end": 6642,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6657,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 6628,
											"end": 6657,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 6628,
											"end": 6657,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6692,
											"modifierDepth": 4,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6692,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6607,
											"end": 6752,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6607,
											"end": 6752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6339,
											"end": 6341,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6607,
											"end": 6752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6321,
											"end": 6342,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6380,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6376,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6351,
											"end": 6381,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6417,
											"end": 6451,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E747261637420646F6573206E6F74206861766520656E6F756768206355"
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6390,
											"end": 6452,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6468,
											"end": 6486,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6461,
											"end": 6493,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6529,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6510,
											"end": 6529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6137,
											"end": 6535,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 6607,
											"end": 6752,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7251,
											"end": 7277,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 7251,
											"end": 7277,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7248,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7220,
											"end": 7248,
											"modifierDepth": 5,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7277,
											"modifierDepth": 5,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7199,
											"end": 7338,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7338,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7338,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7199,
											"end": 7338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6724,
											"end": 6745,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6781,
											"end": 6783,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6761,
											"end": 6779,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6754,
											"end": 6784,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6820,
											"end": 6854,
											"name": "PUSH",
											"source": 14,
											"value": "416C6C207061727469636970616E74732068617665206265656E207265776172"
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6800,
											"end": 6818,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6793,
											"end": 6855,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6871,
											"end": 6889,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6864,
											"end": 6897,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6933,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 6914,
											"end": 6933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6540,
											"end": 6939,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 7199,
											"end": 7338,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11826,
											"end": 11837,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6376,
											"modifierDepth": 6,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6391,
											"modifierDepth": 6,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6391,
											"modifierDepth": 6,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7148,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7149,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7185,
											"end": 7187,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7188,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C903B30B634B21039B2B73232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6944,
											"end": 7285,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 6358,
											"end": 6413,
											"modifierDepth": 6,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"modifierDepth": 7,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"modifierDepth": 7,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6101,
											"modifierDepth": 7,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6081,
											"end": 6114,
											"modifierDepth": 7,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11873,
											"end": 11884,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 11873,
											"end": 11884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6114,
											"modifierDepth": 7,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6081,
											"end": 6114,
											"modifierDepth": 7,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6080,
											"end": 6114,
											"modifierDepth": 7,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6059,
											"end": 6168,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6059,
											"end": 6168,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6059,
											"end": 6168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7474,
											"end": 7495,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7531,
											"end": 7533,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7511,
											"end": 7529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7504,
											"end": 7534,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7570,
											"end": 7600,
											"name": "PUSH",
											"source": 14,
											"value": "5061727469636970616E7420616C726561647920726577617264656400000000"
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7543,
											"end": 7601,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 7290,
											"end": 7642,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 6059,
											"end": 6168,
											"modifierDepth": 7,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"modifierDepth": 8,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"modifierDepth": 8,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5852,
											"modifierDepth": 8,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5823,
											"end": 5865,
											"modifierDepth": 8,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11909,
											"end": 11920,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 11909,
											"end": 11920,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5865,
											"modifierDepth": 8,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5823,
											"end": 5865,
											"modifierDepth": 8,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5886,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5886,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7851,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5815,
											"end": 5886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7831,
											"end": 7852,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7888,
											"end": 7890,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7861,
											"end": 7891,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "135D5CDD081899481CD8DC99595B9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7907,
											"end": 7925,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7907,
											"end": 7925,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7907,
											"end": 7925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7900,
											"end": 7946,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 7647,
											"end": 7987,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 5815,
											"end": 5886,
											"modifierDepth": 8,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 11966,
											"modifierDepth": 9,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11969,
											"end": 11999,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 11987,
											"end": 11998,
											"modifierDepth": 9,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 11986,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 11969,
											"end": 11999,
											"jumpType": "[in]",
											"modifierDepth": 9,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 11999,
											"modifierDepth": 9,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 11969,
											"end": 11999,
											"modifierDepth": 9,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 11999,
											"modifierDepth": 9,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 11999,
											"modifierDepth": 9,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12014,
											"end": 12039,
											"modifierDepth": 9,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12010,
											"end": 12182,
											"modifierDepth": 9,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12010,
											"end": 12182,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 12010,
											"end": 12182,
											"modifierDepth": 9,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12108,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 12085,
											"end": 12094,
											"modifierDepth": 9,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 12096,
											"end": 12107,
											"modifierDepth": 9,
											"name": "DUP15",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12084,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 12055,
											"end": 12108,
											"jumpType": "[in]",
											"modifierDepth": 9,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12055,
											"end": 12108,
											"modifierDepth": 9,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 12055,
											"end": 12108,
											"modifierDepth": 9,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12122,
											"end": 12171,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 12159,
											"end": 12170,
											"modifierDepth": 9,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 12122,
											"end": 12158,
											"modifierDepth": 9,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 12122,
											"end": 12171,
											"jumpType": "[in]",
											"modifierDepth": 9,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12122,
											"end": 12171,
											"modifierDepth": 9,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 12122,
											"end": 12171,
											"modifierDepth": 9,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11926,
											"end": 12188,
											"modifierDepth": 9,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6179,
											"modifierDepth": 8,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6423,
											"end": 6424,
											"modifierDepth": 7,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7349,
											"modifierDepth": 6,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4958,
											"end": 4959,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2542,
											"end": 2562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11352,
											"end": 12188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17280,
											"end": 17284,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17307,
											"end": 17332,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 17333,
											"end": 17342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 17307,
											"end": 17343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17343,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17350,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17177,
											"end": 17350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16370,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 16303,
											"end": 16370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16355,
											"end": 16363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 16355,
											"end": 16361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 16355,
											"end": 16363,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 8730,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8834,
											"end": 8845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6376,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6366,
											"end": 6391,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6391,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6391,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7148,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7149,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7185,
											"end": 7187,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7165,
											"end": 7183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7158,
											"end": 7188,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27B7363C903B30B634B21039B2B73232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7204,
											"end": 7222,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7197,
											"end": 7244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7261,
											"end": 7279,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6944,
											"end": 7285,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 6358,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5560,
											"end": 5602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8881,
											"end": 8892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8881,
											"end": 8892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5560,
											"end": 5602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5559,
											"end": 5602,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5651,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5651,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5651,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8194,
											"end": 8196,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5538,
											"end": 5651,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8176,
											"end": 8197,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8233,
											"end": 8235,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8206,
											"end": 8236,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8272,
											"end": 8297,
											"name": "PUSH",
											"source": 14,
											"value": "4F6E6C7920756E73637265656E65642061646472657373000000000000000000"
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8245,
											"end": 8298,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8315,
											"end": 8333,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8315,
											"end": 8333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 7992,
											"end": 8339,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 5538,
											"end": 5651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8916,
											"end": 8941,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8965,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8908,
											"end": 8965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8908,
											"end": 8965,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8548,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8908,
											"end": 8965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8558,
											"end": 8588,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16995C9BC81859191C995CDCC81C185CDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8597,
											"end": 8646,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 8344,
											"end": 8687,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 8908,
											"end": 8965,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9005,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8976,
											"end": 9018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8976,
											"end": 9025,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9021,
											"end": 9025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"modifierDepth": 2,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9025,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9061,
											"end": 9089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 9059,
											"end": 9089,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9089,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9089,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9089,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9089,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9114,
											"end": 9146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9114,
											"end": 9146,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 182,
											"end": 233,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9146,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "C4EC7A2DC5E72D17666A15570E438638BFC023A7A091DF162B669C37198BACB2"
										},
										{
											"begin": 9114,
											"end": 9146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9146,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 14,
											"end": 239,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14087,
											"end": 14464,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 14087,
											"end": 14464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6957,
											"end": 6961,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6966,
											"end": 6967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6938,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4798"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6934,
											"end": 6948,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 6934,
											"end": 6948,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 6934,
											"end": 6963,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6934,
											"end": 6963,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6967,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 7024,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 7024,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8894,
											"end": 8896,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6913,
											"end": 7024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8876,
											"end": 8897,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8906,
											"end": 8936,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8972,
											"end": 9005,
											"name": "PUSH",
											"source": 14,
											"value": "436F6E747261637420646F6573206E6F74206861766520616E79206355534400"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8952,
											"end": 8970,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8945,
											"end": 9006,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9023,
											"end": 9041,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 8692,
											"end": 9047,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6913,
											"end": 7024,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14255,
											"end": 14284,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14255,
											"end": 14284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14282,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14255,
											"end": 14284,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14237,
											"end": 14252,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14237,
											"end": 14252,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14259,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4798"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14255,
											"end": 14269,
											"modifierDepth": 3,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14269,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 14255,
											"end": 14269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14284,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 14255,
											"end": 14284,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 14255,
											"end": 14284,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14237,
											"end": 14284,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14237,
											"end": 14284,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14294,
											"end": 14319,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14326,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4798"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14322,
											"end": 14335,
											"modifierDepth": 3,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 14336,
											"end": 14343,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14336,
											"end": 14343,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 14336,
											"end": 14343,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14353,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 14322,
											"end": 14353,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 14322,
											"end": 14353,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14294,
											"end": 14353,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14294,
											"end": 14353,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14368,
											"end": 14388,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14458,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14458,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 14364,
											"end": 14458,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "2036B9B38B69A2FA490EE702733A29CD2550ACCC20BC96E786CB9BEEDC779097"
										},
										{
											"begin": 14430,
											"end": 14437,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14430,
											"end": 14437,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 14430,
											"end": 14437,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14447,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9226,
											"end": 9277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9226,
											"end": 9277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9308,
											"end": 9310,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14447,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 14364,
											"end": 14458,
											"modifierDepth": 3,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 14364,
											"end": 14458,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14227,
											"end": 14464,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14227,
											"end": 14464,
											"modifierDepth": 3,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 239,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 14,
											"end": 239,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2783,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 200,
											"end": 232,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 200,
											"end": 232,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 200,
											"end": 232,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 170,
											"end": 172,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3EE5AEB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10893,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 10453,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10622,
											"end": 10626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10638,
											"end": 10657,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10660,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 10675,
											"end": 10686,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10688,
											"end": 10696,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10703,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10660,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 10660,
											"end": 10704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10660,
											"end": 10704,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 10660,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1376,
											"end": 1410,
											"name": "PUSH",
											"source": 9,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 10714,
											"end": 10742,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1574,
											"name": "PUSH",
											"source": 9,
											"value": "3C"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1465,
											"end": 1490,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10836,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1554,
											"end": 1575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10865,
											"end": 10874,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10836,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 10836,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10836,
											"end": 10875,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 10836,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10836,
											"end": 10886,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10836,
											"end": 10886,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10836,
											"end": 10886,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 10453,
											"end": 10893,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10453,
											"end": 10893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12399,
											"end": 12924,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 12399,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12565,
											"end": 12596,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12565,
											"end": 12596,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9226,
											"end": 9277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12517,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "4798"
										},
										{
											"begin": 12513,
											"end": 12526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12526,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12526,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12526,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 12513,
											"end": 12526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 12513,
											"end": 12606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 12513,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12621,
											"end": 12646,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12875,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 12617,
											"end": 12875,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12720,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12690,
											"end": 12720,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12850,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12819,
											"end": 12850,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9244,
											"end": 9276,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9226,
											"end": 9277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9226,
											"end": 9277,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9308,
											"end": 9310,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9293,
											"end": 9311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9286,
											"end": 9320,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "PUSH",
											"source": 13,
											"value": "8934D7A9692E763E356FD30D84CA5F61A737B35C5CCD5D31D4F140310267B73E"
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12753,
											"end": 12864,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12875,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 12617,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12892,
											"end": 12917,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12399,
											"end": 12924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12399,
											"end": 12924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13599,
											"end": 13894,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 13599,
											"end": 13894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13766,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13723,
											"end": 13748,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 13749,
											"end": 13758,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 13723,
											"end": 13759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13759,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13803,
											"end": 13825,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 13801,
											"end": 13825,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 13825,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13723,
											"end": 13766,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13801,
											"end": 13825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 13825,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 13825,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13850,
											"end": 13887,
											"name": "PUSH",
											"source": 13,
											"value": "97FB84D3F0D20B64A0A8E52541408B0155BA98FEA88E66283156F306D04B08B8"
										},
										{
											"begin": 13850,
											"end": 13887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13850,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 13850,
											"end": 13887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13864,
											"end": 13873,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13864,
											"end": 13873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 13886,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13875,
											"end": 13886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13850,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 13850,
											"end": 13887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13371,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 13115,
											"end": 13371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13220,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13233,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13236,
											"end": 13240,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13200,
											"end": 13240,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13277,
											"end": 13299,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13299,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 182,
											"end": 233,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 182,
											"end": 233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "PUSH",
											"source": 13,
											"value": "654C9A027765E6FEB862F42D438E9F6948F9EE31113E379F0372B30EFC722943"
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 155,
											"end": 173,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13324,
											"end": 13364,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13115,
											"end": 13371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2522,
											"end": 2536,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9950,
											"end": 9957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10014,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10016,
											"end": 10024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10026,
											"end": 10031,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 9986,
											"end": 10032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9986,
											"end": 10032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9976,
											"end": 10033,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9976,
											"end": 10033,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9976,
											"end": 10033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9976,
											"end": 10033,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9976,
											"end": 10033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9976,
											"end": 10033,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9969,
											"end": 10033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 10040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 10040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3882,
											"end": 3886,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3871,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3908,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3714,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2267,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2269,
											"end": 2283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2604,
											"end": 2608,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2583,
											"end": 2610,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2653,
											"end": 2657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2717,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2681,
											"end": 2717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2583,
											"end": 2610,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2659,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2751,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2827,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2827,
											"end": 2862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7366,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7572,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7567,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 390,
											"end": 415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 390,
											"end": 415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 390,
											"end": 415,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 363,
											"end": 381,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 244,
											"end": 421,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 7701,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 390,
											"end": 415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 390,
											"end": 415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 390,
											"end": 415,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 363,
											"end": 381,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 363,
											"end": 381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 244,
											"end": 421,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6283,
											"end": 6349,
											"name": "PUSH",
											"source": 8,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6538,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11227,
											"end": 11231,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 11215,
											"end": 11232,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11215,
											"end": 11232,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11213,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11213,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11195,
											"end": 11213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11233,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11233,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11233,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11188,
											"end": 11233,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11267,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11276,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11276,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11276,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11285,
											"end": 11319,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11285,
											"end": 11319,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11285,
											"end": 11319,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11126,
											"end": 11145,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 11126,
											"end": 11145,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 426,
											"end": 652,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 426,
											"end": 652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 485,
											"end": 491,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 540,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 517,
											"end": 524,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 513,
											"end": 536,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 509,
											"end": 541,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 506,
											"end": 558,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 506,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 554,
											"end": 555,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 552,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 544,
											"end": 556,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 506,
											"end": 558,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 506,
											"end": 558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 599,
											"end": 622,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 426,
											"end": 652,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 849,
											"end": 1022,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 849,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 917,
											"end": 937,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 917,
											"end": 937,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 966,
											"end": 997,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 966,
											"end": 997,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 956,
											"end": 998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 956,
											"end": 998,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1010,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 946,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 849,
											"end": 1022,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 849,
											"end": 1022,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 849,
											"end": 1022,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 849,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 1027,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 1083,
											"end": 1086,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 1079,
											"end": 1099,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1100,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1119,
											"end": 1123,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1148,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1269,
											"end": 1299,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1266,
											"end": 1322,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1266,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1266,
											"end": 1322,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 1302,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1302,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1457,
											"end": 1459,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1451,
											"end": 1460,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1364,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1349,
											"end": 1364,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1374,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1515,
											"end": 1517,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1529,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1487,
											"end": 1529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1580,
											"end": 1602,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1559,
											"end": 1577,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1578,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1544,
											"end": 1578,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1541,
											"end": 1603,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1626,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 1538,
											"end": 1626,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 1606,
											"end": 1624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 1606,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1642,
											"end": 1644,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1690,
											"end": 1712,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1743,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1743,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1727,
											"end": 1743,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1724,
											"end": 1749,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1766,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1721,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1721,
											"end": 1766,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1764,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1721,
											"end": 1766,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 1721,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1807,
											"end": 1810,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1798,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1788,
											"end": 1805,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1775,
											"end": 1819,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1857,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1843,
											"end": 1849,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1839,
											"end": 1858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1835,
											"end": 1865,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1869,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1159,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2101,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 1880,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1978,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1968,
											"end": 1972,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1956,
											"end": 1973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1952,
											"end": 1979,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1942,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 1942,
											"end": 1997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1983,
											"end": 1995,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1942,
											"end": 1997,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 1942,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 2091,
											"end": 2094,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2082,
											"end": 2088,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2069,
											"end": 2089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2062,
											"end": 2066,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2067,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2015,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2015,
											"end": 2095,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 2015,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2095,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1880,
											"end": 2101,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2225,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2276,
											"end": 2285,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2267,
											"end": 2274,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2263,
											"end": 2286,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2292,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2303,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2295,
											"end": 2307,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 2256,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 2347,
											"end": 2356,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 2328,
											"end": 2357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2328,
											"end": 2357,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 2328,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2357,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2318,
											"end": 2357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2412,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2424,
											"end": 2454,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2543,
											"end": 2547,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2656,
											"end": 2658,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2643,
											"end": 2659,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 2595,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2669,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 2595,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2585,
											"end": 2669,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2740,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2741,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 2741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2742,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2742,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2804,
											"end": 2822,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2791,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2835,
											"end": 2867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2867,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 2882,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 2832,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2903,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 2943,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2924,
											"end": 2933,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2920,
											"end": 2944,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2903,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 2903,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2903,
											"end": 2954,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 2903,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2893,
											"end": 2954,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2893,
											"end": 2954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2893,
											"end": 2954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2106,
											"end": 2960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2965,
											"end": 3151,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3065,
											"end": 3074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3052,
											"end": 3075,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3048,
											"end": 3080,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3093,
											"end": 3094,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3095,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3116,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3116,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 3116,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3364,
											"end": 3684,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 3364,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3482,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3464,
											"end": 3471,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3460,
											"end": 3483,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3453,
											"end": 3505,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3453,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 3453,
											"end": 3505,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3453,
											"end": 3505,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 3453,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3541,
											"end": 3550,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3528,
											"end": 3551,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3574,
											"end": 3592,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3563,
											"end": 3593,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 3560,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3661,
											"end": 3667,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3659,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3646,
											"end": 3668,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 3629,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3629,
											"end": 3678,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 3629,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3619,
											"end": 3678,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3364,
											"end": 3684,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3364,
											"end": 3684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5300,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5050,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5165,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5153,
											"end": 5166,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5229,
											"end": 5247,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5227,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5227,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5209,
											"end": 5248,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 5184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 5145,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5293,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5274,
											"end": 5290,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5267,
											"end": 5294,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5305,
											"end": 5592,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 5305,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5466,
											"end": 5479,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5542,
											"end": 5545,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5533,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5488,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 5488,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5570,
											"end": 5586,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5305,
											"end": 5592,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5305,
											"end": 5592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5948,
											"end": 6132,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 5948,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6018,
											"end": 6024,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6073,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6046,
											"end": 6069,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6042,
											"end": 6074,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6091,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 6039,
											"end": 6091,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6087,
											"end": 6088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6085,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6077,
											"end": 6089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6039,
											"end": 6091,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 6039,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6110,
											"end": 6126,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6110,
											"end": 6126,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5948,
											"end": 6132,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5948,
											"end": 6132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9331,
											"end": 9608,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 9331,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9451,
											"end": 9453,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9439,
											"end": 9448,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9426,
											"end": 9449,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9422,
											"end": 9454,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9419,
											"end": 9471,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9419,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 9419,
											"end": 9471,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9467,
											"end": 9468,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9464,
											"end": 9465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9457,
											"end": 9469,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9419,
											"end": 9471,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 9419,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9499,
											"end": 9508,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9493,
											"end": 9509,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9552,
											"end": 9557,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9545,
											"end": 9558,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9531,
											"end": 9536,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9528,
											"end": 9560,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9518,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 9518,
											"end": 9578,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9574,
											"end": 9575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9564,
											"end": 9576,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9613,
											"end": 10108,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 9613,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9770,
											"end": 9791,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9751,
											"end": 9755,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9826,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9814,
											"end": 9827,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9863,
											"end": 9869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9847,
											"end": 9856,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9843,
											"end": 9861,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9836,
											"end": 9870,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9879,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 9953,
											"end": 9959,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9948,
											"end": 9950,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9937,
											"end": 9946,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9933,
											"end": 9951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9926,
											"end": 9930,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9914,
											"end": 9931,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9879,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 9879,
											"end": 9960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9879,
											"end": 9960,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 9879,
											"end": 9960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10069,
											"end": 10101,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10069,
											"end": 10101,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10069,
											"end": 10101,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10069,
											"end": 10101,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10062,
											"end": 10066,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10067,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10047,
											"end": 10067,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10040,
											"end": 10102,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10021,
											"end": 10023,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10000,
											"end": 10015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9996,
											"end": 10025,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 10026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10030,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9977,
											"end": 10031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9977,
											"end": 10031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9613,
											"end": 10108,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 10108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10113,
											"end": 10608,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 10113,
											"end": 10608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10355,
											"end": 10381,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10351,
											"end": 10382,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10342,
											"end": 10348,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10340,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10334,
											"end": 10349,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10330,
											"end": 10383,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10325,
											"end": 10328,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10384,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10300,
											"end": 10303,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10419,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10407,
											"end": 10420,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10492,
											"end": 10494,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 10487,
											"end": 10490,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10483,
											"end": 10495,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10476,
											"end": 10480,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10468,
											"end": 10474,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10464,
											"end": 10481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 10429,
											"end": 10504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10523,
											"end": 10539,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10555,
											"end": 10566,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10555,
											"end": 10566,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10555,
											"end": 10566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10548,
											"end": 10575,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10548,
											"end": 10575,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10548,
											"end": 10575,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10548,
											"end": 10575,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10599,
											"end": 10601,
											"name": "PUSH",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 10591,
											"end": 10602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10591,
											"end": 10602,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10113,
											"end": 10608,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10113,
											"end": 10608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10613,
											"end": 10740,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 10613,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10674,
											"end": 10684,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 10669,
											"end": 10672,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 10665,
											"end": 10685,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10662,
											"end": 10663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10686,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10705,
											"end": 10709,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 10702,
											"end": 10703,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10695,
											"end": 10710,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10733,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10726,
											"end": 10727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10719,
											"end": 10734,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"cUSD()": "1fccf672",
							"checkIfParticipantIsScreened(address)": "825f98be",
							"checkIfSignatureIsUsed(bytes)": "c5dac913",
							"getNumberOfClaimedRewards()": "627d3eb9",
							"getNumberOfRewardedParticipants()": "741ae614",
							"getNumberOfScreenedParticipants()": "f77a953e",
							"getNumberOfUsedSignatures()": "c3aa9721",
							"getRewardAmountPerParticipantInWei()": "7069243c",
							"getTargetNumberOfParticipants()": "6fa1c59d",
							"numberOfScreenedParticipants()": "4074be40",
							"numberOfUsedSignatures()": "4fc91ba6",
							"owner()": "8da5cb5b",
							"pauseSurvey()": "e082fe2a",
							"paused()": "5c975abb",
							"processRewardClaimByParticipant(address,string,uint256,bytes)": "6fa55ed9",
							"renounceOwnership()": "715018a6",
							"rewardAmountPerParticipantInWei()": "7a0abf08",
							"screenParticipant(address)": "ea1dd101",
							"targetNumberOfParticipants()": "a6a09811",
							"transferOwnership(address)": "f2fde38b",
							"unpauseSurvey()": "3960fc66",
							"updateRewardAmountPerParticipant(uint256)": "64bb632f",
							"updateTargetNumberOfParticipants(uint256)": "528780cc",
							"withdrawAllRewardFundsToResearcher()": "f22069df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardAmountPerParticipantInWei\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetNumberOfParticipants\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"cUSDToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"ParticipantMarkedAsRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ParticipantRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"ParticipantScreened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldcUSDRewardAmountPerParticipantInWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newcUSDRewardAmountPerParticipantInWei\",\"type\":\"uint256\"}],\"name\":\"RewardAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"researcher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"RewardFundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"SignatureUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTargetNumberOfParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTargetNumberOfParticipants\",\"type\":\"uint256\"}],\"name\":\"TargetNumberOfParticipantsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cUSD\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"checkIfParticipantIsScreened\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"checkIfSignatureIsUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfClaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfRewardedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfScreenedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfUsedSignatures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmountPerParticipantInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetNumberOfParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfScreenedParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfUsedSignatures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"rewardId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"processRewardClaimByParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardAmountPerParticipantInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"screenParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetNumberOfParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseSurvey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRewardAmountPerParticipantInWei\",\"type\":\"uint256\"}],\"name\":\"updateRewardAmountPerParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTargetNumberOfParticipants\",\"type\":\"uint256\"}],\"name\":\"updateTargetNumberOfParticipants\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAllRewardFundsToResearcher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inherits from Ownable for access control, ReentrancyGuard for security, and Pausable for emergency stops\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"ParticipantMarkedAsRewarded(address)\":{\"params\":{\"participant\":\"The address of the participant marked as rewarded\"}},\"ParticipantRewarded(address,uint256)\":{\"params\":{\"participant\":\"The address of the rewarded participant\",\"rewardAmount\":\"The amount of cUSD rewarded in wei\"}},\"ParticipantScreened(address)\":{\"params\":{\"participant\":\"The address of the screened participant\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RewardAmountUpdated(uint256,uint256)\":{\"params\":{\"newcUSDRewardAmountPerParticipantInWei\":\"The new reward amount\",\"oldcUSDRewardAmountPerParticipantInWei\":\"The previous reward amount\"}},\"RewardFundsWithdrawn(address,uint256)\":{\"params\":{\"researcher\":\"The address of the researcher who withdrew the funds\",\"rewardAmount\":\"The amount of cUSD withdrawn in wei\"}},\"SignatureUsed(bytes,address)\":{\"params\":{\"participant\":\"The address of the participant who used the signature\",\"signature\":\"The signature that was used\"}},\"TargetNumberOfParticipantsUpdated(uint256,uint256)\":{\"params\":{\"newTargetNumberOfParticipants\":\"The new target number\",\"oldTargetNumberOfParticipants\":\"The previous target number\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"checkIfParticipantIsScreened(address)\":{\"params\":{\"participant\":\"- Address of the participant to check\"},\"returns\":{\"_0\":\"bool True if the participant has been screened\"}},\"checkIfSignatureIsUsed(bytes)\":{\"params\":{\"signature\":\"Cryptographic signature generated by the contract owner\"},\"returns\":{\"_0\":\"bool True if the signature has been used\"}},\"constructor\":{\"details\":\"Sets up the contract with researcher address, reward amount, participant target, and cUSD token\",\"params\":{\"_rewardAmountPerParticipantInWei\":\"Amount in wei to reward each participant\",\"_targetNumberOfParticipants\":\"Maximum number of participants for the survey\",\"cUSDToken\":\"Address of the cUSD token contract\",\"researcher\":\"Address of the researcher who will own and manage the contract\"}},\"getNumberOfClaimedRewards()\":{\"returns\":{\"_0\":\"uint256 The number of claimed rewards\"}},\"getNumberOfRewardedParticipants()\":{\"returns\":{\"_0\":\"uint256 The number of participants who have been rewarded\"}},\"getNumberOfScreenedParticipants()\":{\"returns\":{\"_0\":\"uint256 The number of screened participants\"}},\"getNumberOfUsedSignatures()\":{\"returns\":{\"_0\":\"uint256 The number of used signatures\"}},\"getRewardAmountPerParticipantInWei()\":{\"returns\":{\"_0\":\"uint256 The reward amount in wei\"}},\"getTargetNumberOfParticipants()\":{\"returns\":{\"_0\":\"uint256 The maximum number of participants allowed\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseSurvey()\":{\"details\":\"Can only be called by the contract owner\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"processRewardClaimByParticipant(address,string,uint256,bytes)\":{\"details\":\"Processes the reward claim if all conditions are met and signature is valid\",\"params\":{\"nonce\":\"Unique number to prevent relay attacks\",\"participant\":\"Address of the participant claiming the reward\",\"rewardId\":\"Unique identifier for this reward claim\",\"signature\":\"Cryptographic signature from the contract owner\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"screenParticipant(address)\":{\"details\":\"Marks a [participant] as [true] in [participantsScreenedForSurvey].\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpauseSurvey()\":{\"details\":\"Can only be called by the contract owner\"},\"updateRewardAmountPerParticipant(uint256)\":{\"details\":\"Can only be called by the contract owner\",\"params\":{\"_newRewardAmountPerParticipantInWei\":\"- New reward amount in wei\"}},\"updateTargetNumberOfParticipants(uint256)\":{\"details\":\"Can only be called by the contract owner\",\"params\":{\"_newTargetNumberOfParticipants\":\"- New target number of participants\"}},\"withdrawAllRewardFundsToResearcher()\":{\"details\":\"Can only be called by the contract owner when the contract is not paused\"}},\"version\":1},\"userdoc\":{\"events\":{\"ParticipantMarkedAsRewarded(address)\":{\"notice\":\"Emitted when a participant is marked as having received their reward\"},\"ParticipantRewarded(address,uint256)\":{\"notice\":\"Emitted when a participant successfully claims their reward\"},\"ParticipantScreened(address)\":{\"notice\":\"Emitted when a participant completes the screening process\"},\"RewardAmountUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the reward amount per participant is updated\"},\"RewardFundsWithdrawn(address,uint256)\":{\"notice\":\"Emitted when reward funds are withdrawn by the researcher\"},\"SignatureUsed(bytes,address)\":{\"notice\":\"Emitted when a signature is used to claim a reward\"},\"TargetNumberOfParticipantsUpdated(uint256,uint256)\":{\"notice\":\"Emitted when the target number of participants is updated\"}},\"kind\":\"user\",\"methods\":{\"cUSD()\":{\"notice\":\"Reference to the cUSD token contract\"},\"checkIfParticipantIsScreened(address)\":{\"notice\":\"Checks if a given participant has been screened\"},\"checkIfSignatureIsUsed(bytes)\":{\"notice\":\"Checks if a given signature has been used\"},\"constructor\":{\"notice\":\"Initializes the survey contract with initial parameters\"},\"getNumberOfClaimedRewards()\":{\"notice\":\"Gets the number of rewards that have been claimed\"},\"getNumberOfRewardedParticipants()\":{\"notice\":\"Gets the current number of rewarded participants\"},\"getNumberOfScreenedParticipants()\":{\"notice\":\"Gets the number of participants who have been screened\"},\"getNumberOfUsedSignatures()\":{\"notice\":\"Gets the number of signatures that have been used\"},\"getRewardAmountPerParticipantInWei()\":{\"notice\":\"Gets the current reward amount per participant\"},\"getTargetNumberOfParticipants()\":{\"notice\":\"Gets the target number of participants\"},\"numberOfScreenedParticipants()\":{\"notice\":\"Counter for number of participants who have been screened\"},\"numberOfUsedSignatures()\":{\"notice\":\"Counter for number of signatures that have been used\"},\"pauseSurvey()\":{\"notice\":\"Pauses all reward claims and withdrawals\"},\"processRewardClaimByParticipant(address,string,uint256,bytes)\":{\"notice\":\"Allows a participant to claim their reward using a valid signature\"},\"rewardAmountPerParticipantInWei()\":{\"notice\":\"Amount of cUSD to reward each participant\"},\"targetNumberOfParticipants()\":{\"notice\":\"Maximum number of participants allowed in the survey\"},\"unpauseSurvey()\":{\"notice\":\"Resumes reward claims and withdrawals\"},\"updateRewardAmountPerParticipant(uint256)\":{\"notice\":\"Updates the reward amount per participant\"},\"updateTargetNumberOfParticipants(uint256)\":{\"notice\":\"Updates the target number of participants for the survey\"},\"withdrawAllRewardFundsToResearcher()\":{\"notice\":\"Allows the researcher to withdraw all remaining cUSD from the contract\"}},\"notice\":\"Contract for managing a closed survey system with participant rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":\"ClosedSurveyV4\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"smart-contract/hardhat/contracts/ClosedSurveyV4.sol\":{\"keccak256\":\"0x334f6319303c3c7a33957c008c3367e1388264d48597f4ed9d15054d960dfb1d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a03b5e92c34aae41b6637aaa9733a299644dde12f8d8202f70fdf93f21b41b5d\",\"dweb:/ipfs/Qmf63enT6YtJdx7eqqNxM1ax6UR3bES4auFDZ1VojuF35c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 461,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 342,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 4803,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "rewardedParticipants",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 4808,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "participantsScreenedForSurvey",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 4813,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "signaturesUsedForClaiming",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes_memory_ptr,t_bool)"
							},
							{
								"astId": 4816,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "rewardAmountPerParticipantInWei",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 4819,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "targetNumberOfParticipants",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 4822,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "numberOfRewardedParticipants",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 4825,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "numberOfClaimedRewards",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 4828,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "numberOfScreenedParticipants",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 4831,
								"contract": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol:ClosedSurveyV4",
								"label": "numberOfUsedSignatures",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes_memory_ptr": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes_memory_ptr",
								"label": "mapping(bytes => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ParticipantMarkedAsRewarded(address)": {
								"notice": "Emitted when a participant is marked as having received their reward"
							},
							"ParticipantRewarded(address,uint256)": {
								"notice": "Emitted when a participant successfully claims their reward"
							},
							"ParticipantScreened(address)": {
								"notice": "Emitted when a participant completes the screening process"
							},
							"RewardAmountUpdated(uint256,uint256)": {
								"notice": "Emitted when the reward amount per participant is updated"
							},
							"RewardFundsWithdrawn(address,uint256)": {
								"notice": "Emitted when reward funds are withdrawn by the researcher"
							},
							"SignatureUsed(bytes,address)": {
								"notice": "Emitted when a signature is used to claim a reward"
							},
							"TargetNumberOfParticipantsUpdated(uint256,uint256)": {
								"notice": "Emitted when the target number of participants is updated"
							}
						},
						"kind": "user",
						"methods": {
							"cUSD()": {
								"notice": "Reference to the cUSD token contract"
							},
							"checkIfParticipantIsScreened(address)": {
								"notice": "Checks if a given participant has been screened"
							},
							"checkIfSignatureIsUsed(bytes)": {
								"notice": "Checks if a given signature has been used"
							},
							"constructor": {
								"notice": "Initializes the survey contract with initial parameters"
							},
							"getNumberOfClaimedRewards()": {
								"notice": "Gets the number of rewards that have been claimed"
							},
							"getNumberOfRewardedParticipants()": {
								"notice": "Gets the current number of rewarded participants"
							},
							"getNumberOfScreenedParticipants()": {
								"notice": "Gets the number of participants who have been screened"
							},
							"getNumberOfUsedSignatures()": {
								"notice": "Gets the number of signatures that have been used"
							},
							"getRewardAmountPerParticipantInWei()": {
								"notice": "Gets the current reward amount per participant"
							},
							"getTargetNumberOfParticipants()": {
								"notice": "Gets the target number of participants"
							},
							"numberOfScreenedParticipants()": {
								"notice": "Counter for number of participants who have been screened"
							},
							"numberOfUsedSignatures()": {
								"notice": "Counter for number of signatures that have been used"
							},
							"pauseSurvey()": {
								"notice": "Pauses all reward claims and withdrawals"
							},
							"processRewardClaimByParticipant(address,string,uint256,bytes)": {
								"notice": "Allows a participant to claim their reward using a valid signature"
							},
							"rewardAmountPerParticipantInWei()": {
								"notice": "Amount of cUSD to reward each participant"
							},
							"targetNumberOfParticipants()": {
								"notice": "Maximum number of participants allowed in the survey"
							},
							"unpauseSurvey()": {
								"notice": "Resumes reward claims and withdrawals"
							},
							"updateRewardAmountPerParticipant(uint256)": {
								"notice": "Updates the reward amount per participant"
							},
							"updateTargetNumberOfParticipants(uint256)": {
								"notice": "Updates the target number of participants for the survey"
							},
							"withdrawAllRewardFundsToResearcher()": {
								"notice": "Allows the researcher to withdraw all remaining cUSD from the contract"
							}
						},
						"notice": "Contract for managing a closed survey system with participant rewards",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 282,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								281
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "214:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "396:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "405:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "427:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "447:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:1"
									},
									"src": "390:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "627:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "636:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "659:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "684:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:1"
									},
									"src": "621:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "821:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:1"
									},
									"scope": 225,
									"src": "775:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 225,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1222:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1234:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1267:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:1"
									},
									"scope": 225,
									"src": "1204:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1567:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1582:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1622:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:1"
									},
									"scope": 225,
									"src": "1548:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2326:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2343:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:1"
									},
									"scope": 225,
									"src": "2309:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2712:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2726:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2738:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:1"
									},
									"scope": 225,
									"src": "2690:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "204:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2674:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 226,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC20",
										"nameLocations": [
											"306:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "306:6:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:2",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:2"
									},
									"scope": 251,
									"src": "378:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "540:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:2"
									},
									"scope": 251,
									"src": "499:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "674:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 247,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:2"
									},
									"scope": 251,
									"src": "631:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "278:405:2",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "125:559:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							281
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 281,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 268,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 267,
												"id": 270,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 281,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 281,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							333
						]
					},
					"id": 334,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 284,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:4",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 333,
							"linearizedBaseContracts": [
								333
							],
							"name": "Panic",
							"nameLocation": "665:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:4",
										"text": "@dev generic / unspecified error"
									},
									"id": 288,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "718:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 287,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:4",
										"text": "@dev used by the assert() builtin"
									},
									"id": 292,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "806:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 290,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:4",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 296,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "897:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:4",
										"text": "@dev division or modulo by zero"
									},
									"id": 300,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "990:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 298,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 299,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:4",
										"text": "@dev enum conversion error"
									},
									"id": 304,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "1080:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 302,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 303,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:4",
										"text": "@dev invalid encoding in storage"
									},
									"id": 308,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "1181:55:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 306,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:4",
										"text": "@dev empty array pop"
									},
									"id": 312,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "1271:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 310,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:4",
										"text": "@dev array out of bounds access"
									},
									"id": 316,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "1365:52:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 315,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:4",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 320,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "1493:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:4",
										"text": "@dev calling invalid internal function"
									},
									"id": 324,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 333,
									"src": "1593:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "1819:151:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:4",
													"nodeType": "YulBlock",
													"src": "1854:110:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:4",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:4",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:4"
																},
																"nativeSrc": "1868:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:4"
															},
															"nativeSrc": "1868:24:4",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:4",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:4"
																},
																"nativeSrc": "1905:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:4"
															},
															"nativeSrc": "1905:18:4",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:4",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:4"
																},
																"nativeSrc": "1936:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:4"
															},
															"nativeSrc": "1936:18:4",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:4"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 327,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 330,
												"nodeType": "InlineAssembly",
												"src": "1829:135:4"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:4",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1791:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:4"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:4"
									},
									"scope": 333,
									"src": "1776:194:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 334,
							"src": "657:1315:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Pausable": [
							450
						]
					},
					"id": 451,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 335,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 337,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 451,
							"sourceUnit": 282,
							"src": "128:45:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 336,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 339,
										"name": "Context",
										"nameLocations": [
											"645:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "645:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 450,
							"linearizedBaseContracts": [
								450,
								281
							],
							"name": "Pausable",
							"nameLocation": "633:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 450,
									"src": "659:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 341,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 347,
									"name": "Paused",
									"nameLocation": "770:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "777:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:5"
									},
									"src": "764:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 352,
									"name": "Unpaused",
									"nameLocation": "881:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "890:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:5"
									},
									"src": "875:32:5"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:5",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 355,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:5"
									},
									"src": "994:22:5"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:5",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 358,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:5"
									},
									"src": "1107:22:5"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1221:32:5",
										"statements": [
											{
												"expression": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:5"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 367,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:5"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:5"
									},
									"scope": 450,
									"src": "1207:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1464:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 370,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "1474:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:5"
											},
											{
												"id": 373,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:5"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:5"
									},
									"src": "1439:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "1711:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 378,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "1721:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:5"
											},
											{
												"id": 381,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:5"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 383,
									"name": "whenPaused",
									"nameLocation": "1698:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:5"
									},
									"src": "1689:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1903:31:5",
										"statements": [
											{
												"expression": {
													"id": 389,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 342,
													"src": "1920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 388,
												"id": 390,
												"nodeType": "Return",
												"src": "1913:14:5"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:5"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1897:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:5"
									},
									"scope": 450,
									"src": "1850:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2053:77:5",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 396,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2067:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "2063:61:5",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "2077:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 398,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "2098:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 400,
															"nodeType": "RevertStatement",
															"src": "2091:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:5"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:5"
									},
									"scope": 450,
									"src": "2002:128:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "2250:78:5",
										"statements": [
											{
												"condition": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:5",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 408,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2265:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "2260:62:5",
												"trueBody": {
													"id": 414,
													"nodeType": "Block",
													"src": "2275:47:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 411,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "2296:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 413,
															"nodeType": "RevertStatement",
															"src": "2289:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:5"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:5"
									},
									"scope": 450,
									"src": "2202:126:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2512:66:5",
										"statements": [
											{
												"expression": {
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2522:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 428,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2558:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 427,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2551:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "EmitStatement",
												"src": "2546:25:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 421,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 420,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "2498:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:5"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:5"
									},
									"scope": 450,
									"src": "2463:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2758:69:5",
										"statements": [
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2768:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 444,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2807:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2798:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2793:27:5"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 436,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 383,
												"src": "2747:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:5"
									},
									"scope": 450,
									"src": "2710:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 451,
							"src": "615:2214:5",
							"usedErrors": [
								355,
								358
							],
							"usedEvents": [
								347,
								352
							]
						}
					],
					"src": "102:2728:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							519
						]
					},
					"id": 520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 452,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 456,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 519,
									"src": "1818:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 459,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 519,
									"src": "1864:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 458,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 461,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 519,
									"src": "1907:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 460,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:6",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 464,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:6"
									},
									"src": "1994:37:6"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "2051:38:6",
										"statements": [
											{
												"expression": {
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2061:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 468,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2071:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:6"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:6"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:6"
									},
									"scope": 519,
									"src": "2037:52:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2490:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 475,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "2500:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:6"
											},
											{
												"id": 478,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "2542:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:6"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 483,
									"name": "nonReentrant",
									"nameLocation": "2475:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:6"
									},
									"src": "2466:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "2614:268:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2702:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 487,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "2698:86:6",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "2722:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 489,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2743:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "2736:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 494,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 495,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2868:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:6"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:6"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:6"
									},
									"scope": 519,
									"src": "2575:307:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2926:170:6",
										"statements": [
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3068:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "3078:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:6"
											}
										]
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:6"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:6"
									},
									"scope": 519,
									"src": "2888:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "3339:42:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 513,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3356:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 514,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3367:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 512,
												"id": 516,
												"nodeType": "Return",
												"src": "3349:25:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:6"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "3333:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 510,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:6"
									},
									"scope": 519,
									"src": "3275:106:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 520,
							"src": "1030:2353:6",
							"usedErrors": [
								464
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2867
						],
						"SignedMath": [
							4776
						],
						"Strings": [
							839
						]
					},
					"id": 840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 2868,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2867,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 4777,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4776,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 839,
							"linearizedBaseContracts": [
								839
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 529,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 527,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 528,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 532,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 530,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 531,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 539,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "708:561:7",
										"statements": [
											{
												"id": 585,
												"nodeType": "UncheckedBlock",
												"src": "718:545:7",
												"statements": [
													{
														"assignments": [
															548
														],
														"declarations": [
															{
																"constant": false,
																"id": 548,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 585,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 547,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 555,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 551,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 549,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2867_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2639,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															557
														],
														"declarations": [
															{
																"constant": false,
																"id": 557,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 585,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 556,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 562,
														"initialValue": {
															"arguments": [
																{
																	"id": 560,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 558,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															564
														],
														"declarations": [
															{
																"constant": false,
																"id": 564,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 585,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 563,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 565,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "899:67:7",
															"nodeType": "YulBlock",
															"src": "899:67:7",
															"statements": [
																{
																	"nativeSrc": "917:35:7",
																	"nodeType": "YulAssignment",
																	"src": "917:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "928:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "940:2:7",
																						"nodeType": "YulLiteral",
																						"src": "940:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "944:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "936:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "936:3:7"
																				},
																				"nativeSrc": "936:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "936:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 557,
																"isOffset": false,
																"isSlot": false,
																"src": "928:6:7",
																"valueSize": 1
															},
															{
																"declaration": 548,
																"isOffset": false,
																"isSlot": false,
																"src": "944:6:7",
																"valueSize": 1
															},
															{
																"declaration": 564,
																"isOffset": false,
																"isSlot": false,
																"src": "917:3:7",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 566,
														"nodeType": "InlineAssembly",
														"src": "874:92:7"
													},
													{
														"body": {
															"id": 581,
															"nodeType": "Block",
															"src": "992:234:7",
															"statements": [
																{
																	"expression": {
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1010:5:7",
																		"subExpression": {
																			"id": 568,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "1010:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 570,
																	"nodeType": "ExpressionStatement",
																	"src": "1010:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1058:86:7",
																		"nodeType": "YulBlock",
																		"src": "1058:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1088:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1088:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1102:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1102:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1109:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1109:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1098:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1098:3:7"
																									},
																									"nativeSrc": "1098:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1098:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1114:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1114:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1093:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1093:4:7"
																							},
																							"nativeSrc": "1093:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1093:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1080:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1080:7:7"
																					},
																					"nativeSrc": "1080:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1080:46:7"
																				},
																				"nativeSrc": "1080:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1080:46:7"
																			}
																		]
																	},
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 529,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1114:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 564,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1088:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 542,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1102:5:7",
																			"valueSize": 1
																		}
																	],
																	"flags": [
																		"memory-safe"
																	],
																	"id": 571,
																	"nodeType": "InlineAssembly",
																	"src": "1033:111:7"
																},
																{
																	"expression": {
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "1161:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1170:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1161:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 575,
																	"nodeType": "ExpressionStatement",
																	"src": "1161:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 576,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 542,
																			"src": "1194:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1203:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1194:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 580,
																	"nodeType": "IfStatement",
																	"src": "1190:21:7",
																	"trueBody": {
																		"id": 579,
																		"nodeType": "Break",
																		"src": "1206:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 582,
														"nodeType": "WhileStatement",
														"src": "979:247:7"
													},
													{
														"expression": {
															"id": 583,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "1246:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 546,
														"id": 584,
														"nodeType": "Return",
														"src": "1239:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 839,
									"src": "637:632:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "1445:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 590,
																	"src": "1476:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1484:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1476:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1494:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1476:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 590,
																			"src": "1522:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 605,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4776,
																			"src": "1507:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$4776_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1518:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4775,
																		"src": "1507:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 604,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "1498:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1498:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1462:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 595,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1462:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1469:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1462:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 594,
												"id": 611,
												"nodeType": "Return",
												"src": "1455:75:7"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "1275:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1378:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1400:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1393:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 589,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:14:7"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "1430:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1429:15:7"
									},
									"scope": 839,
									"src": "1369:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "1716:100:7",
										"statements": [
											{
												"id": 631,
												"nodeType": "UncheckedBlock",
												"src": "1726:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "1769:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 625,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "1788:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 623,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2867,
																				"src": "1776:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2867_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1781:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2810,
																			"src": "1776:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1776:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1797:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1776:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 621,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	633,
																	716,
																	736
																],
																"referencedDeclaration": 716,
																"src": "1757:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1757:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 620,
														"id": 630,
														"nodeType": "Return",
														"src": "1750:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "1543:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1651:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1671:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1663:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:7"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "1701:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:15:7"
									},
									"scope": 839,
									"src": "1642:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "2029:435:7",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2047:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 715,
														"src": "2039:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2039:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"id": 645,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 636,
													"src": "2060:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2039:26:7"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2088:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 715,
														"src": "2075:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 647,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2075:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 652,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "2111:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2107:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2107:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2097:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 649,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2101:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2097:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:47:7"
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 658,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "2132:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 660,
														"indexExpression": {
															"hexValue": "30",
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2139:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2132:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2144:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2132:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "2132:15:7"
											},
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 664,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "2157:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 666,
														"indexExpression": {
															"hexValue": "31",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2164:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2157:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2169:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2157:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2157:15:7"
											},
											{
												"body": {
													"id": 698,
													"nodeType": "Block",
													"src": "2227:95:7",
													"statements": [
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 684,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "2241:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 686,
																	"indexExpression": {
																		"id": 685,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "2248:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2241:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 687,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "2253:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 691,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 688,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "2264:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2277:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2264:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2253:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2241:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "2241:40:7"
														},
														{
															"expression": {
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 694,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "2295:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2310:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2295:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "2295:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2215:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2219:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2215:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"initializationExpression": {
													"assignments": [
														671
													],
													"declarations": [
														{
															"constant": false,
															"id": 671,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2195:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 699,
															"src": "2187:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 670,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2187:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 677,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2199:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 673,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "2203:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2199:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2212:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2187:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2222:3:7",
														"subExpression": {
															"id": 681,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "2224:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 683,
													"nodeType": "ExpressionStatement",
													"src": "2222:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2182:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2335:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2349:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2335:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "2331:96:7",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "2352:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 704,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "2402:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 705,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "2409:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 703,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "2373:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2373:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 707,
															"nodeType": "RevertStatement",
															"src": "2366:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "2450:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2443:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 710,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2443:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2443:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 714,
												"nodeType": "Return",
												"src": "2436:21:7"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "1822:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1948:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1968:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1960:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1983:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1975:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1975:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:31:7"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2014:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2014:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:15:7"
									},
									"scope": 839,
									"src": "1939:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2696:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 729,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "2741:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2733:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 727,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2733:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2733:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2725:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2725:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "2749:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 724,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															633,
															716,
															736
														],
														"referencedDeclaration": 716,
														"src": "2713:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 723,
												"id": 734,
												"nodeType": "Return",
												"src": "2706:58:7"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2632:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:14:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2681:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 721,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2681:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:15:7"
									},
									"scope": 839,
									"src": "2623:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "3028:642:7",
										"statements": [
											{
												"assignments": [
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3051:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 800,
														"src": "3038:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 744,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3038:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 752,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 749,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "3078:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 748,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	633,
																	716,
																	736
																],
																"referencedDeclaration": 736,
																"src": "3066:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (address) pure returns (string memory)"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3066:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3060:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 746,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3060:5:7",
															"typeDescriptions": {}
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3038:46:7"
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "hashValue",
														"nameLocation": "3177:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 800,
														"src": "3169:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3169:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"nodeType": "VariableDeclarationStatement",
												"src": "3169:17:7"
											},
											{
												"AST": {
													"nativeSrc": "3221:78:7",
													"nodeType": "YulBlock",
													"src": "3221:78:7",
													"statements": [
														{
															"nativeSrc": "3235:54:7",
															"nodeType": "YulAssignment",
															"src": "3235:54:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3252:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3252:2:7",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "buffer",
																						"nativeSrc": "3270:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3270:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3278:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3278:4:7",
																						"type": "",
																						"value": "0x22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:7"
																				},
																				"nativeSrc": "3266:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:17:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3285:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3285:2:7",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3256:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "3256:9:7"
																		},
																		"nativeSrc": "3256:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3256:32:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3248:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:7"
																},
																"nativeSrc": "3248:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3248:41:7"
															},
															"variableNames": [
																{
																	"name": "hashValue",
																	"nativeSrc": "3235:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3235:9:7"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 745,
														"isOffset": false,
														"isSlot": false,
														"src": "3270:6:7",
														"valueSize": 1
													},
													{
														"declaration": 754,
														"isOffset": false,
														"isSlot": false,
														"src": "3235:9:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 756,
												"nodeType": "InlineAssembly",
												"src": "3196:103:7"
											},
											{
												"body": {
													"id": 793,
													"nodeType": "Block",
													"src": "3342:291:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "hashValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 754,
																			"src": "3448:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3460:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3448:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3466:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "3448:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 774,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 745,
																					"src": "3477:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 776,
																				"indexExpression": {
																					"id": 775,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "3484:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3477:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			],
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3471:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			},
																			"typeName": {
																				"id": 772,
																				"name": "uint8",
																				"nodeType": "ElementaryTypeName",
																				"src": "3471:5:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3471:16:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "3936",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3490:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	"src": "3471:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3448:44:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 788,
															"nodeType": "IfStatement",
															"src": "3444:150:7",
															"trueBody": {
																"id": 787,
																"nodeType": "Block",
																"src": "3494:100:7",
																"statements": [
																	{
																		"expression": {
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 781,
																					"name": "buffer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 745,
																					"src": "3562:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 783,
																				"indexExpression": {
																					"id": 782,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "3569:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3562:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "^=",
																			"rightHandSide": {
																				"hexValue": "30783230",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3575:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "0x20"
																			},
																			"src": "3562:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		},
																		"id": 786,
																		"nodeType": "ExpressionStatement",
																		"src": "3562:17:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 789,
																	"name": "hashValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "3607:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3621:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3607:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "3607:15:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 761,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "3330:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3334:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3330:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"initializationExpression": {
													"assignments": [
														758
													],
													"declarations": [
														{
															"constant": false,
															"id": 758,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3322:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 794,
															"src": "3314:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 757,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3314:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 760,
													"initialValue": {
														"hexValue": "3431",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3326:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_41_by_1",
															"typeString": "int_const 41"
														},
														"value": "41"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3314:14:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3337:3:7",
														"subExpression": {
															"id": 764,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "3339:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 766,
													"nodeType": "ExpressionStatement",
													"src": "3337:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3309:324:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "3656:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3649:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 795,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3649:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 743,
												"id": 799,
												"nodeType": "Return",
												"src": "3642:21:7"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2777:165:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toChecksumHexString",
									"nameLocation": "2956:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2984:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "2976:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:14:7"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "3013:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3013:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:15:7"
									},
									"scope": 839,
									"src": "2947:723:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "3825:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 813,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "3848:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3842:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3842:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3842:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3842:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 818,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "3867:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3861:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 816,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3861:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3861:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3861:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3842:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 825,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "3896:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3890:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 823,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3890:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3890:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 822,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3880:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3880:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 831,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "3919:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3913:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 829,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3913:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3913:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 828,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3903:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3903:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3880:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3842:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 810,
												"id": 836,
												"nodeType": "Return",
												"src": "3835:87:7"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "3676:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "3756:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "3762:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 803,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3762:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3793:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "3779:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3779:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:34:7"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "3819:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:7"
									},
									"scope": 839,
									"src": "3747:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 840,
							"src": "251:3680:7",
							"usedErrors": [
								539
							],
							"usedEvents": []
						}
					],
					"src": "101:3831:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1187
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 841,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 842,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:8",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187
							],
							"name": "ECDSA",
							"nameLocation": "352:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 847,
									"members": [
										{
											"id": 843,
											"name": "NoError",
											"nameLocation": "392:7:8",
											"nodeType": "EnumValue",
											"src": "392:7:8"
										},
										{
											"id": 844,
											"name": "InvalidSignature",
											"nameLocation": "409:16:8",
											"nodeType": "EnumValue",
											"src": "409:16:8"
										},
										{
											"id": 845,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:8",
											"nodeType": "EnumValue",
											"src": "435:22:8"
										},
										{
											"id": 846,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:8",
											"nodeType": "EnumValue",
											"src": "467:17:8"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:8",
									"nodeType": "EnumDefinition",
									"src": "364:126:8"
								},
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:8",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 850,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:8"
									},
									"src": "564:30:8"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:8",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 855,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "699:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:8"
									},
									"src": "665:50:8"
								},
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:8",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 860,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "840:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 857,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:8"
									},
									"src": "811:40:8"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2285:622:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 875,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "2299:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2299:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2299:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "2793:108:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2823:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2815:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2815:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2815:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 901,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 847,
																			"src": "2827:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2840:22:8",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 845,
																		"src": "2827:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$847",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 905,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "2872:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2882:6:8",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2872:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2864:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 903,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2864:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2864:25:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 908,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 874,
															"id": 909,
															"nodeType": "Return",
															"src": "2807:83:8"
														}
													]
												},
												"id": 911,
												"nodeType": "IfStatement",
												"src": "2295:606:8",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "2323:464:8",
													"statements": [
														{
															"assignments": [
																880
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 880,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2345:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 896,
																	"src": "2337:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 879,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2337:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 881,
															"nodeType": "VariableDeclarationStatement",
															"src": "2337:9:8"
														},
														{
															"assignments": [
																883
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 883,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2368:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 896,
																	"src": "2360:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 882,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2360:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 884,
															"nodeType": "VariableDeclarationStatement",
															"src": "2360:9:8"
														},
														{
															"assignments": [
																886
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 886,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2389:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 896,
																	"src": "2383:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 885,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2383:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 887,
															"nodeType": "VariableDeclarationStatement",
															"src": "2383:7:8"
														},
														{
															"AST": {
																"nativeSrc": "2560:171:8",
																"nodeType": "YulBlock",
																"src": "2560:171:8",
																"statements": [
																	{
																		"nativeSrc": "2578:32:8",
																		"nodeType": "YulAssignment",
																		"src": "2578:32:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2593:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2593:9:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2604:4:8",
																							"nodeType": "YulLiteral",
																							"src": "2604:4:8",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2589:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:8"
																					},
																					"nativeSrc": "2589:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2583:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:8"
																			},
																			"nativeSrc": "2583:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2583:27:8"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2578:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2578:1:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2627:32:8",
																		"nodeType": "YulAssignment",
																		"src": "2627:32:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2642:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2642:9:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2653:4:8",
																							"nodeType": "YulLiteral",
																							"src": "2653:4:8",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2638:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2638:3:8"
																					},
																					"nativeSrc": "2638:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2638:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2632:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:8"
																			},
																			"nativeSrc": "2632:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:27:8"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2627:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2676:41:8",
																		"nodeType": "YulAssignment",
																		"src": "2676:41:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2686:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2699:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2699:9:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:4:8",
																									"nodeType": "YulLiteral",
																									"src": "2710:4:8",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:8"
																							},
																							"nativeSrc": "2695:20:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:20:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:8"
																					},
																					"nativeSrc": "2689:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:27:8"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2681:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:8"
																			},
																			"nativeSrc": "2681:36:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2681:36:8"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2676:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2676:1:8"
																			}
																		]
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 880,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2578:1:8",
																	"valueSize": 1
																},
																{
																	"declaration": 883,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2627:1:8",
																	"valueSize": 1
																},
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2593:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2642:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 865,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2699:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 886,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2676:1:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 888,
															"nodeType": "InlineAssembly",
															"src": "2535:196:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 890,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "2762:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 891,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "2768:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 892,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "2771:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 893,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "2774:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 889,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		913,
																		993,
																		1101
																	],
																	"referencedDeclaration": 1101,
																	"src": "2751:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 874,
															"id": 895,
															"nodeType": "Return",
															"src": "2744:32:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:8",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2166:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2158:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 862,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2193:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2180:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:60:8"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "2240:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2232:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "2264:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2251:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$847",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 869,
														"name": "RecoverError",
														"nameLocations": [
															"2251:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "2251:12:8"
													},
													"referencedDeclaration": 847,
													"src": "2251:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$847",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "2277:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2269:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:53:8"
									},
									"scope": 1187,
									"src": "2129:778:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "3801:168:8",
										"statements": [
											{
												"assignments": [
													924,
													927,
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3820:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "3812:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 923,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3844:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "3831:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$847",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 926,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 925,
																"name": "RecoverError",
																"nameLocations": [
																	"3831:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 847,
																"src": "3831:12:8"
															},
															"referencedDeclaration": 847,
															"src": "3831:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3859:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "3851:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 928,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3882:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 932,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "3888:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															913,
															993,
															1101
														],
														"referencedDeclaration": 913,
														"src": "3871:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3811:87:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 936,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3920:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 937,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "3927:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 935,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "3908:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$847_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:8"
											},
											{
												"expression": {
													"id": 940,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 924,
													"src": "3953:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 922,
												"id": 941,
												"nodeType": "Return",
												"src": "3946:16:8"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "2913:796:8",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3723:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3739:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3731:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 915,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3758:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3745:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3745:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:38:8"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3792:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:9:8"
									},
									"scope": 1187,
									"src": "3714:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "4348:342:8",
										"statements": [
											{
												"id": 991,
												"nodeType": "UncheckedBlock",
												"src": "4358:326:8",
												"statements": [
													{
														"assignments": [
															961
														],
														"declarations": [
															{
																"constant": false,
																"id": 961,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4390:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "4382:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 960,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4382:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 968,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "4394:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4407:66:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4399:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4399:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:75:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4394:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4382:92:8"
													},
													{
														"assignments": [
															970
														],
														"declarations": [
															{
																"constant": false,
																"id": 970,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4591:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 991,
																"src": "4585:7:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 969,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 983,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 975,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 950,
																							"src": "4610:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 974,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4602:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 973,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4602:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 976,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4602:11:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4617:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4602:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 979,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4601:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4624:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4601:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 971,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4585:42:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 985,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "4659:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 986,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "4665:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 987,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "4668:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 988,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "4671:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 984,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	913,
																	993,
																	1101
																],
																"referencedDeclaration": 1101,
																"src": "4648:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4648:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 959,
														"id": 990,
														"nodeType": "Return",
														"src": "4641:32:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "3975:205:8",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4214:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 945,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4236:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 947,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 949,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:8"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "4303:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4295:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "4327:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4314:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$847",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 955,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 954,
														"name": "RecoverError",
														"nameLocations": [
															"4314:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "4314:12:8"
													},
													"referencedDeclaration": 847,
													"src": "4314:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$847",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "4340:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4332:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 957,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:53:8"
									},
									"scope": 1187,
									"src": "4185:505:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "4903:164:8",
										"statements": [
											{
												"assignments": [
													1006,
													1009,
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1006,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4922:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "4914:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1005,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4946:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "4933:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$847",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1008,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1007,
																"name": "RecoverError",
																"nameLocations": [
																	"4933:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 847,
																"src": "4933:12:8"
															},
															"referencedDeclaration": 847,
															"src": "4933:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4961:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1025,
														"src": "4953:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1010,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4953:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1017,
												"initialValue": {
													"arguments": [
														{
															"id": 1013,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "4984:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1014,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "4990:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1015,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "4993:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1012,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															913,
															993,
															1101
														],
														"referencedDeclaration": 993,
														"src": "4973:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4913:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1019,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "5018:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1020,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "5025:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1018,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "5006:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$847_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:8"
											},
											{
												"expression": {
													"id": 1023,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1006,
													"src": "5051:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1024,
												"nodeType": "Return",
												"src": "5044:16:8"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "4696:116:8",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4826:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4842:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4834:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 995,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4856:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4848:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4867:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4859:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 999,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:37:8"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "4894:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:9:8"
									},
									"scope": 1187,
									"src": "4817:250:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "5382:1372:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1047,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "6278:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1045,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1049,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6283:66:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6270:79:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1061,
												"nodeType": "IfStatement",
												"src": "6266:164:8",
												"trueBody": {
													"id": 1060,
													"nodeType": "Block",
													"src": "6351:79:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6381:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6373:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1051,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6373:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1055,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 847,
																			"src": "6385:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6398:17:8",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 846,
																		"src": "6385:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$847",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1057,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "6417:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6372:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1044,
															"id": 1059,
															"nodeType": "Return",
															"src": "6365:54:8"
														}
													]
												}
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6532:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "6524:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1062,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [
														{
															"id": 1065,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "6551:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1066,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "6557:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1067,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "6560:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1068,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "6563:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1064,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6541:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "6579:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6597:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6589:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1072,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6589:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6589:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6579:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "6575:113:8",
												"trueBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "6601:87:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1079,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6631:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6623:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1077,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6623:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6623:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1081,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 847,
																			"src": "6635:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6648:16:8",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 844,
																		"src": "6635:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$847",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6674:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1083,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1087,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6622:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1044,
															"id": 1088,
															"nodeType": "Return",
															"src": "6615:62:8"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1091,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "6706:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1092,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "6714:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6727:7:8",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 843,
															"src": "6714:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6736:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1094,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6736:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1098,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6705:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1044,
												"id": 1099,
												"nodeType": "Return",
												"src": "6698:49:8"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "5073:125:8",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5212:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5232:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5260:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5254:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1030,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5254:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5279:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5271:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5298:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5290:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:83:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "5337:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5329:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "5361:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5348:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$847",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1039,
														"name": "RecoverError",
														"nameLocations": [
															"5348:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "5348:12:8"
													},
													"referencedDeclaration": 847,
													"src": "5348:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$847",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "5374:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5366:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:53:8"
									},
									"scope": 1187,
									"src": "5203:1551:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "6981:166:8",
										"statements": [
											{
												"assignments": [
													1116,
													1119,
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7000:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "6992:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1115,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6992:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7024:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "7011:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$847",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1117,
																"name": "RecoverError",
																"nameLocations": [
																	"7011:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 847,
																"src": "7011:12:8"
															},
															"referencedDeclaration": 847,
															"src": "7011:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7039:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "7031:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1120,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"id": 1123,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "7062:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1124,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "7068:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1125,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "7071:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1126,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "7074:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1122,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															913,
															993,
															1101
														],
														"referencedDeclaration": 1101,
														"src": "7051:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$847_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "7098:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1131,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "7105:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1129,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "7086:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$847_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "7086:28:8"
											},
											{
												"expression": {
													"id": 1134,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1116,
													"src": "7131:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1135,
												"nodeType": "Return",
												"src": "7124:16:8"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "6760:122:8",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6896:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6912:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "6904:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6924:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "6918:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1105,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6918:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6935:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "6927:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6946:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "6938:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:45:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "6972:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:9:8"
									},
									"scope": 1187,
									"src": "6887:260:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "7352:460:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$847",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7366:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$847",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1147,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7375:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7388:7:8",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "7375:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$847",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7366:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$847",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "7462:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1153,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "7471:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7484:16:8",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 844,
															"src": "7471:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7462:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$847",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "7567:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$847",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1161,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "7576:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7589:22:8",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 845,
																"src": "7576:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$847",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7567:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$847",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1172,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "7701:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$847",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1173,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "7710:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$847_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7723:17:8",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 846,
																	"src": "7710:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$847",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7701:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1181,
															"nodeType": "IfStatement",
															"src": "7697:109:8",
															"trueBody": {
																"id": 1180,
																"nodeType": "Block",
																"src": "7742:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1177,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "7786:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1176,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "7763:22:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7763:32:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1179,
																		"nodeType": "RevertStatement",
																		"src": "7756:39:8"
																	}
																]
															}
														},
														"id": 1182,
														"nodeType": "IfStatement",
														"src": "7563:243:8",
														"trueBody": {
															"id": 1171,
															"nodeType": "Block",
															"src": "7613:78:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1167,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1143,
																						"src": "7670:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7662:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1165,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7662:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7662:17:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1164,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 855,
																			"src": "7634:27:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7634:46:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1170,
																	"nodeType": "RevertStatement",
																	"src": "7627:53:8"
																}
															]
														}
													},
													"id": 1183,
													"nodeType": "IfStatement",
													"src": "7458:348:8",
													"trueBody": {
														"id": 1159,
														"nodeType": "Block",
														"src": "7502:55:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1156,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "7523:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7523:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1158,
																"nodeType": "RevertStatement",
																"src": "7516:30:8"
															}
														]
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "7362:444:8",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "7397:55:8",
													"statements": [
														{
															"functionReturnParameters": 1145,
															"id": 1150,
															"nodeType": "Return",
															"src": "7411:7:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "7153:122:8",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7289:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7314:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "7301:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$847",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "RecoverError",
														"nameLocations": [
															"7301:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 847,
														"src": "7301:12:8"
													},
													"referencedDeclaration": 847,
													"src": "7301:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$847",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7329:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "7321:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:38:8"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:0:8"
									},
									"scope": 1187,
									"src": "7280:532:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "344:7470:8",
							"usedErrors": [
								850,
								855,
								860
							],
							"usedEvents": []
						}
					],
					"src": "112:7703:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							1261
						],
						"Strings": [
							839
						]
					},
					"id": 1262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 840,
							"src": "149:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 839,
										"src": "157:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:9",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 1261,
							"linearizedBaseContracts": [
								1261
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1314:341:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1349:300:9",
													"nodeType": "YulBlock",
													"src": "1349:300:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1370:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1370:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1376:34:9",
																		"nodeType": "YulLiteral",
																		"src": "1376:34:9",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1363:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:9"
																},
																"nativeSrc": "1363:48:9",
																"nodeType": "YulFunctionCall",
																"src": "1363:48:9"
															},
															"nativeSrc": "1363:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "1363:48:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1472:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1472:4:9",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1478:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "1478:11:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1465:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1465:6:9"
																},
																"nativeSrc": "1465:25:9",
																"nodeType": "YulFunctionCall",
																"src": "1465:25:9"
															},
															"nativeSrc": "1465:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "1465:25:9"
														},
														{
															"nativeSrc": "1544:31:9",
															"nodeType": "YulAssignment",
															"src": "1544:31:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1564:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1564:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1570:4:9",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1554:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1554:9:9"
																},
																"nativeSrc": "1554:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1554:21:9"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1544:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1544:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1198,
														"isOffset": false,
														"isSlot": false,
														"src": "1544:6:9",
														"valueSize": 1
													},
													{
														"declaration": 1195,
														"isOffset": false,
														"isSlot": false,
														"src": "1478:11:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1200,
												"nodeType": "InlineAssembly",
												"src": "1324:325:9"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:9",
										"text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1254:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:9"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1298:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:9"
									},
									"scope": 1261,
									"src": "1222:433:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2207:143:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2259:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1219,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1205,
																						"src": "2316:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1220,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2324:6:9",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2316:14:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1217,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 839,
																					"src": "2299:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$839_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2307:8:9",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 587,
																				"src": "2299:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2299:32:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2293:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1215,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2293:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2293:39:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1223,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "2334:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2246:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1211,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2246:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2252:6:9",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2246:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2246:96:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1210,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2236:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:107:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1226,
												"nodeType": "Return",
												"src": "2217:126:9"
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "1661:455:9",
										"text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2130:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2166:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2153:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2153:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:22:9"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2198:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:9:9"
									},
									"scope": 1261,
									"src": "2121:229:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "2804:80:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2848:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1242,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "2860:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1243,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "2871:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1239,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2831:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2835:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2831:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2831:45:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1238,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2821:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2821:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1246,
												"nodeType": "Return",
												"src": "2814:63:9"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "2356:332:9",
										"text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2702:31:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2742:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2734:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2766:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2753:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2753:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:38:9"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "2795:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:9:9"
									},
									"scope": 1261,
									"src": "2693:191:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "3435:265:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3470:224:9",
													"nodeType": "YulBlock",
													"src": "3470:224:9",
													"statements": [
														{
															"nativeSrc": "3484:22:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3484:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3501:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3501:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3495:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3495:5:9"
																},
																"nativeSrc": "3495:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3495:11:9"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3488:3:9",
																	"nodeType": "YulTypedName",
																	"src": "3488:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3526:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3526:3:9"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3531:10:9",
																		"nodeType": "YulLiteral",
																		"src": "3531:10:9",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3519:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:9"
																},
																"nativeSrc": "3519:23:9",
																"nodeType": "YulFunctionCall",
																"src": "3519:23:9"
															},
															"nativeSrc": "3519:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "3519:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3566:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3566:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3571:4:9",
																				"nodeType": "YulLiteral",
																				"src": "3571:4:9",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:9"
																		},
																		"nativeSrc": "3562:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:14:9"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3578:15:9",
																		"nodeType": "YulIdentifier",
																		"src": "3578:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3555:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:9"
																},
																"nativeSrc": "3555:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3555:39:9"
															},
															"nativeSrc": "3555:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "3555:39:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3618:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3618:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3623:4:9",
																				"nodeType": "YulLiteral",
																				"src": "3623:4:9",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3614:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3614:3:9"
																		},
																		"nativeSrc": "3614:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3614:14:9"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3630:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "3630:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3607:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:9"
																},
																"nativeSrc": "3607:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:34:9"
															},
															"nativeSrc": "3607:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:34:9"
														},
														{
															"nativeSrc": "3654:30:9",
															"nodeType": "YulAssignment",
															"src": "3654:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3674:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3674:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:9",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3664:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3664:9:9"
																},
																"nativeSrc": "3664:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3664:20:9"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1256,
														"isOffset": false,
														"isSlot": false,
														"src": "3654:6:9",
														"valueSize": 1
													},
													{
														"declaration": 1251,
														"isOffset": false,
														"isSlot": false,
														"src": "3578:15:9",
														"valueSize": 1
													},
													{
														"declaration": 1253,
														"isOffset": false,
														"isSlot": false,
														"src": "3630:10:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1258,
												"nodeType": "InlineAssembly",
												"src": "3445:249:9"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "2890:431:9",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3335:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3359:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3351:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3384:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3376:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3350:45:9"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3427:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3419:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:16:9"
									},
									"scope": 1261,
									"src": "3326:374:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1262,
							"src": "521:3181:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3580:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2867
						],
						"Panic": [
							333
						],
						"SafeCast": [
							4632
						]
					},
					"id": 2868,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 1265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2868,
							"sourceUnit": 334,
							"src": "129:35:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1264,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 333,
										"src": "137:5:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 1267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2868,
							"sourceUnit": 4633,
							"src": "165:40:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1266,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4632,
										"src": "173:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1268,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2867,
							"linearizedBaseContracts": [
								2867
							],
							"name": "Math",
							"nameLocation": "289:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1273,
									"members": [
										{
											"id": 1269,
											"name": "Floor",
											"nameLocation": "324:5:10",
											"nodeType": "EnumValue",
											"src": "324:5:10"
										},
										{
											"id": 1270,
											"name": "Ceil",
											"nameLocation": "367:4:10",
											"nodeType": "EnumValue",
											"src": "367:4:10"
										},
										{
											"id": 1271,
											"name": "Trunc",
											"nameLocation": "409:5:10",
											"nodeType": "EnumValue",
											"src": "409:5:10"
										},
										{
											"id": 1272,
											"name": "Expand",
											"nameLocation": "439:6:10",
											"nodeType": "EnumValue",
											"src": "439:6:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:10",
									"nodeType": "EnumDefinition",
									"src": "300:169:10"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "677:140:10",
										"statements": [
											{
												"id": 1303,
												"nodeType": "UncheckedBlock",
												"src": "687:124:10",
												"statements": [
													{
														"assignments": [
															1286
														],
														"declarations": [
															{
																"constant": false,
																"id": 1286,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "719:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1303,
																"src": "711:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1285,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1290,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "723:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1288,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "727:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "723:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "711:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "746:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1292,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "750:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "746:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1298,
														"nodeType": "IfStatement",
														"src": "742:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "761:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "768:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "760:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1284,
															"id": 1297,
															"nodeType": "Return",
															"src": "753:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "792:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1300,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "798:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1301,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "791:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1284,
														"id": 1302,
														"nodeType": "Return",
														"src": "784:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "475:106:10",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "595:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "610:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "602:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "621:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "613:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:22:10"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "652:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "647:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "647:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "669:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "661:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:30:10"
									},
									"scope": 2867,
									"src": "586:231:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "1028:113:10",
										"statements": [
											{
												"id": 1331,
												"nodeType": "UncheckedBlock",
												"src": "1038:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1317,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "1066:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1318,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1308,
																"src": "1070:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "1062:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1081:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1088:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1080:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1316,
															"id": 1323,
															"nodeType": "Return",
															"src": "1073:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1112:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1326,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "1118:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1327,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "1122:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1118:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1329,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1111:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1330,
														"nodeType": "Return",
														"src": "1104:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "823:109:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "946:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "961:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "953:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "972:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "964:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:22:10"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1003:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "998:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "998:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1020:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1012:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:30:10"
									},
									"scope": 2867,
									"src": "937:204:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "1355:417:10",
										"statements": [
											{
												"id": 1373,
												"nodeType": "UncheckedBlock",
												"src": "1365:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1345,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "1623:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1628:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1623:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1352,
														"nodeType": "IfStatement",
														"src": "1619:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1639:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1645:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1638:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1344,
															"id": 1351,
															"nodeType": "Return",
															"src": "1631:16:10"
														}
													},
													{
														"assignments": [
															1354
														],
														"declarations": [
															{
																"constant": false,
																"id": 1354,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1669:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1373,
																"src": "1661:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1353,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1661:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1358,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1355,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "1673:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "1677:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1661:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1359,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "1696:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1360,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "1700:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1696:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "1705:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1696:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1368,
														"nodeType": "IfStatement",
														"src": "1692:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1723:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1366,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1715:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1344,
															"id": 1367,
															"nodeType": "Return",
															"src": "1708:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1747:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1370,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1354,
																	"src": "1753:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1371,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1746:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1344,
														"id": 1372,
														"nodeType": "Return",
														"src": "1739:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1147:112:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1273:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1288:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1280:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1299:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1291:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:22:10"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1330:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1325:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1347:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1339:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:30:10"
									},
									"scope": 2867,
									"src": "1264:508:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "1987:114:10",
										"statements": [
											{
												"id": 1401,
												"nodeType": "UncheckedBlock",
												"src": "1997:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1387,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "2025:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2030:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2025:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1394,
														"nodeType": "IfStatement",
														"src": "2021:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2041:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2048:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2040:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1386,
															"id": 1393,
															"nodeType": "Return",
															"src": "2033:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2072:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1396,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "2078:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1397,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "2082:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2078:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1399,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2071:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1386,
														"id": 1400,
														"nodeType": "Return",
														"src": "2064:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1778:113:10",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1905:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1920:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1912:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1931:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1923:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:22:10"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1962:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1957:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1957:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1979:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "1971:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:30:10"
									},
									"scope": 2867,
									"src": "1896:205:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "2326:114:10",
										"statements": [
											{
												"id": 1429,
												"nodeType": "UncheckedBlock",
												"src": "2336:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1415,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "2364:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2364:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1422,
														"nodeType": "IfStatement",
														"src": "2360:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2380:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2387:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2379:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1414,
															"id": 1421,
															"nodeType": "Return",
															"src": "2372:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2411:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1424,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1406,
																		"src": "2417:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1425,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "2421:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2417:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1427,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2410:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1414,
														"id": 1428,
														"nodeType": "Return",
														"src": "2403:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "2107:123:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2244:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2259:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2251:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2270:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2262:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2250:22:10"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2301:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2296:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2296:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2318:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2310:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2295:30:10"
									},
									"scope": 2867,
									"src": "2235:205:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "2912:207:10",
										"statements": [
											{
												"id": 1456,
												"nodeType": "UncheckedBlock",
												"src": "2922:191:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1443,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "3060:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1444,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1436,
																						"src": "3066:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1445,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1438,
																						"src": "3070:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3066:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1447,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3065:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1450,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1434,
																					"src": "3091:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1448,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4632,
																					"src": "3075:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3084:6:10",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4631,
																				"src": "3075:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3075:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3065:36:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3064:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3060:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1442,
														"id": 1455,
														"nodeType": "Return",
														"src": "3053:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "2446:374:10",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "2834:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "2847:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2842:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2842:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2866:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2858:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2877:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2869:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2869:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:38:10"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "2903:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2903:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2902:9:10"
									},
									"scope": 2867,
									"src": "2825:294:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "3256:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1469,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1461,
																"src": "3281:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1470,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "3285:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3281:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1472,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "3288:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1473,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "3291:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1468,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "3273:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3273:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1467,
												"id": 1475,
												"nodeType": "Return",
												"src": "3266:27:10"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "3125:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "3198:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3210:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "3202:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3221:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "3213:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:22:10"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "3247:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:9:10"
									},
									"scope": 2867,
									"src": "3189:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "3438:44:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1488,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "3463:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1489,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "3467:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3463:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1491,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "3470:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1492,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3473:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1487,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "3455:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1494,
												"nodeType": "Return",
												"src": "3448:27:10"
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "3306:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "3380:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3392:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3384:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3384:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3403:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3395:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:22:10"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "3429:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:9:10"
									},
									"scope": 2867,
									"src": "3371:111:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "3666:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "3721:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1507,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "3725:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3721:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1509,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3720:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1510,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1499,
																		"src": "3731:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1511,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "3735:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3731:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1513,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3730:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3740:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3730:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3720:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1517,
												"nodeType": "Return",
												"src": "3713:28:10"
											}
										]
									},
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "3488:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "3604:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3631:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3623:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3623:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:22:10"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "3657:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3656:9:10"
									},
									"scope": 2867,
									"src": "3595:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "4040:633:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "4054:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4059:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4054:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1540,
												"nodeType": "IfStatement",
												"src": "4050:150:10",
												"trueBody": {
													"id": 1539,
													"nodeType": "Block",
													"src": "4062:138:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1535,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 333,
																			"src": "4166:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "4172:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 300,
																		"src": "4166:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1532,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "4154:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4160:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "4154:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1538,
															"nodeType": "ExpressionStatement",
															"src": "4154:35:10"
														}
													]
												}
											},
											{
												"id": 1558,
												"nodeType": "UncheckedBlock",
												"src": "4583:84:10",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1543,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "4630:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4634:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4630:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1541,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "4614:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4623:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "4614:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4614:22:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1549,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1547,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1522,
																							"src": "4641:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1548,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4645:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4641:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1550,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4640:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1551,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1524,
																				"src": "4650:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4640:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4654:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4640:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1555,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4639:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4614:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1528,
														"id": 1557,
														"nodeType": "Return",
														"src": "4607:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "3754:210:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3978:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3994:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3986:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4005:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "3997:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:22:10"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "4031:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:9:10"
									},
									"scope": 2867,
									"src": "3969:704:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "5094:4128:10",
										"statements": [
											{
												"id": 1695,
												"nodeType": "UncheckedBlock",
												"src": "5104:4112:10",
												"statements": [
													{
														"assignments": [
															1573
														],
														"declarations": [
															{
																"constant": false,
																"id": 1573,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "5441:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1695,
																"src": "5433:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5433:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1577,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1574,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "5449:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1575,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "5453:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5449:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5433:21:10"
													},
													{
														"assignments": [
															1579
														],
														"declarations": [
															{
																"constant": false,
																"id": 1579,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "5521:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1695,
																"src": "5513:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1578,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5513:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1580,
														"nodeType": "VariableDeclarationStatement",
														"src": "5513:13:10"
													},
													{
														"AST": {
															"nativeSrc": "5593:122:10",
															"nodeType": "YulBlock",
															"src": "5593:122:10",
															"statements": [
																{
																	"nativeSrc": "5611:30:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5611:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5628:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5628:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5631:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "5631:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5638:1:10",
																						"nodeType": "YulLiteral",
																						"src": "5638:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5634:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5634:3:10"
																				},
																				"nativeSrc": "5634:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5634:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5621:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5621:6:10"
																		},
																		"nativeSrc": "5621:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5621:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "5615:2:10",
																			"nodeType": "YulTypedName",
																			"src": "5615:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5658:43:10",
																	"nodeType": "YulAssignment",
																	"src": "5658:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5675:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5675:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5679:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5679:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5671:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5671:3:10"
																				},
																				"nativeSrc": "5671:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5671:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "5690:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5690:2:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5694:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5694:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5687:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "5687:2:10"
																				},
																				"nativeSrc": "5687:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5687:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5667:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:10"
																		},
																		"nativeSrc": "5667:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5658:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5658:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "5679:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "5694:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1579,
																"isOffset": false,
																"isSlot": false,
																"src": "5658:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1563,
																"isOffset": false,
																"isSlot": false,
																"src": "5628:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1565,
																"isOffset": false,
																"isSlot": false,
																"src": "5631:1:10",
																"valueSize": 1
															}
														],
														"id": 1581,
														"nodeType": "InlineAssembly",
														"src": "5584:131:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1582,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "5796:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5805:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5796:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1590,
														"nodeType": "IfStatement",
														"src": "5792:368:10",
														"trueBody": {
															"id": 1589,
															"nodeType": "Block",
															"src": "5808:352:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1585,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1573,
																			"src": "6126:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1586,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "6134:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6126:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1571,
																	"id": 1588,
																	"nodeType": "Return",
																	"src": "6119:26:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1591,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "6270:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1592,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1579,
																"src": "6285:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6270:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1609,
														"nodeType": "IfStatement",
														"src": "6266:143:10",
														"trueBody": {
															"id": 1608,
															"nodeType": "Block",
															"src": "6292:117:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1600,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1598,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1567,
																							"src": "6330:11:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1599,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6345:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "6330:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1601,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 333,
																							"src": "6348:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6354:16:10",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 300,
																						"src": "6348:22:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1603,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 333,
																							"src": "6372:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6378:14:10",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 296,
																						"src": "6372:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1597,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1458,
																					"src": "6322:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6322:71:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1594,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 333,
																				"src": "6310:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6316:5:10",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 332,
																			"src": "6310:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6310:84:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "6310:84:10"
																}
															]
														}
													},
													{
														"assignments": [
															1611
														],
														"declarations": [
															{
																"constant": false,
																"id": 1611,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "6672:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1695,
																"src": "6664:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6664:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1612,
														"nodeType": "VariableDeclarationStatement",
														"src": "6664:17:10"
													},
													{
														"AST": {
															"nativeSrc": "6704:291:10",
															"nodeType": "YulBlock",
															"src": "6704:291:10",
															"statements": [
																{
																	"nativeSrc": "6773:38:10",
																	"nodeType": "YulAssignment",
																	"src": "6773:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6793:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "6793:1:10"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6796:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "6796:1:10"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6799:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "6799:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6786:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6786:6:10"
																		},
																		"nativeSrc": "6786:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6786:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "6773:9:10",
																			"nodeType": "YulIdentifier",
																			"src": "6773:9:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6893:41:10",
																	"nodeType": "YulAssignment",
																	"src": "6893:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6906:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6906:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6916:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6916:9:10"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6927:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6927:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6913:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "6913:2:10"
																				},
																				"nativeSrc": "6913:20:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6913:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6902:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6902:3:10"
																		},
																		"nativeSrc": "6902:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6902:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6893:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6893:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "6951:30:10",
																	"nodeType": "YulAssignment",
																	"src": "6951:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6964:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6964:5:10"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6971:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6971:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6960:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6960:3:10"
																		},
																		"nativeSrc": "6960:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6960:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6951:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "6951:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1567,
																"isOffset": false,
																"isSlot": false,
																"src": "6799:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "6927:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "6951:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "6964:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1579,
																"isOffset": false,
																"isSlot": false,
																"src": "6893:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1579,
																"isOffset": false,
																"isSlot": false,
																"src": "6906:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "6773:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "6916:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "6971:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1563,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:1:10",
																"valueSize": 1
															},
															{
																"declaration": 1565,
																"isOffset": false,
																"isSlot": false,
																"src": "6796:1:10",
																"valueSize": 1
															}
														],
														"id": 1613,
														"nodeType": "InlineAssembly",
														"src": "6695:300:10"
													},
													{
														"assignments": [
															1615
														],
														"declarations": [
															{
																"constant": false,
																"id": 1615,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "7207:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1695,
																"src": "7199:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1614,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7199:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1622,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "7214:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7229:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1618,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "7233:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7229:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1620,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7228:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7214:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7199:46:10"
													},
													{
														"AST": {
															"nativeSrc": "7268:366:10",
															"nodeType": "YulBlock",
															"src": "7268:366:10",
															"statements": [
																{
																	"nativeSrc": "7333:37:10",
																	"nodeType": "YulAssignment",
																	"src": "7333:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "7352:11:10",
																				"nodeType": "YulIdentifier",
																				"src": "7352:11:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7365:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7365:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7348:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:10"
																		},
																		"nativeSrc": "7348:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "7333:11:10",
																			"nodeType": "YulIdentifier",
																			"src": "7333:11:10"
																		}
																	]
																},
																{
																	"nativeSrc": "7437:25:10",
																	"nodeType": "YulAssignment",
																	"src": "7437:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "7450:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7450:5:10"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "7457:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7457:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7446:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:10"
																		},
																		"nativeSrc": "7446:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "7437:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "7437:5:10"
																		}
																	]
																},
																{
																	"nativeSrc": "7581:39:10",
																	"nodeType": "YulAssignment",
																	"src": "7581:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7601:1:10",
																								"nodeType": "YulLiteral",
																								"src": "7601:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "7604:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "7604:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "7597:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:10"
																						},
																						"nativeSrc": "7597:12:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:12:10"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "7611:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "7611:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "7593:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7593:3:10"
																				},
																				"nativeSrc": "7593:23:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7593:23:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7618:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7618:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7589:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7589:3:10"
																		},
																		"nativeSrc": "7589:31:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7589:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "7581:4:10",
																			"nodeType": "YulIdentifier",
																			"src": "7581:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1567,
																"isOffset": false,
																"isSlot": false,
																"src": "7333:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1567,
																"isOffset": false,
																"isSlot": false,
																"src": "7352:11:10",
																"valueSize": 1
															},
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "7437:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1573,
																"isOffset": false,
																"isSlot": false,
																"src": "7450:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "7365:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "7457:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "7581:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "7604:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1615,
																"isOffset": false,
																"isSlot": false,
																"src": "7611:4:10",
																"valueSize": 1
															}
														],
														"id": 1623,
														"nodeType": "InlineAssembly",
														"src": "7259:375:10"
													},
													{
														"expression": {
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1624,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "7700:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1625,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1579,
																	"src": "7709:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1626,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "7717:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7709:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1629,
														"nodeType": "ExpressionStatement",
														"src": "7700:21:10"
													},
													{
														"assignments": [
															1631
														],
														"declarations": [
															{
																"constant": false,
																"id": 1631,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "8064:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 1695,
																"src": "8056:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1630,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8056:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1638,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8075:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1633,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "8079:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8075:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8074:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8094:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "8074:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8056:39:10"
													},
													{
														"expression": {
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1639,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "8312:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8323:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1641,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "8327:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1642,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "8341:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8327:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8323:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8312:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1646,
														"nodeType": "ExpressionStatement",
														"src": "8312:36:10"
													},
													{
														"expression": {
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1647,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "8382:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8393:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1649,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "8397:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1650,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "8411:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8397:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8393:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8382:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "8382:36:10"
													},
													{
														"expression": {
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1655,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "8454:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8465:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1657,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "8469:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1658,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "8483:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8469:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8465:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8454:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1662,
														"nodeType": "ExpressionStatement",
														"src": "8454:36:10"
													},
													{
														"expression": {
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1663,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "8525:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8536:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1665,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "8540:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1666,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "8554:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8540:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8536:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8525:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1670,
														"nodeType": "ExpressionStatement",
														"src": "8525:36:10"
													},
													{
														"expression": {
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1671,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "8598:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8609:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1673,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "8613:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1674,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "8627:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8613:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8609:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8598:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1678,
														"nodeType": "ExpressionStatement",
														"src": "8598:36:10"
													},
													{
														"expression": {
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1679,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "8672:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8683:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1681,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1567,
																		"src": "8687:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1682,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "8701:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8687:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8683:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8672:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1686,
														"nodeType": "ExpressionStatement",
														"src": "8672:36:10"
													},
													{
														"expression": {
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1687,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "9154:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1688,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "9163:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1689,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "9171:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9163:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9154:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1692,
														"nodeType": "ExpressionStatement",
														"src": "9154:24:10"
													},
													{
														"expression": {
															"id": 1693,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "9199:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1571,
														"id": 1694,
														"nodeType": "Return",
														"src": "9192:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "4679:312:10",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5005:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5020:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5012:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5031:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5023:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5042:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5034:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5034:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:43:10"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5086:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5078:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:16:10"
									},
									"scope": 2867,
									"src": "4996:4226:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "9461:128:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1713,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1700,
																"src": "9485:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1714,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "9488:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1715,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "9491:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1712,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1697,
																1734
															],
															"referencedDeclaration": 1697,
															"src": "9478:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9478:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1720,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1707,
																			"src": "9539:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$1273",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$1273",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1719,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2866,
																		"src": "9522:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1273_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9522:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1723,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1700,
																				"src": "9559:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1724,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1702,
																				"src": "9562:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1725,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1704,
																				"src": "9565:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1722,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "9552:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9552:25:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9580:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9552:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9522:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1717,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4632,
																"src": "9506:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9515:6:10",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4631,
															"src": "9506:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9506:76:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9478:104:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1711,
												"id": 1732,
												"nodeType": "Return",
												"src": "9471:111:10"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "9228:118:10",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "9360:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9375:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "9367:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9367:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9386:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "9378:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "9397:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "9389:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9389:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9419:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "9410:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1273",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1705,
														"name": "Rounding",
														"nameLocations": [
															"9410:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1273,
														"src": "9410:8:10"
													},
													"referencedDeclaration": 1273,
													"src": "9410:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1273",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9366:62:10"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "9452:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9452:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9451:9:10"
									},
									"scope": 2867,
									"src": "9351:238:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "10223:1849:10",
										"statements": [
											{
												"id": 1829,
												"nodeType": "UncheckedBlock",
												"src": "10233:1833:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1744,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "10261:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10266:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10261:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1749,
														"nodeType": "IfStatement",
														"src": "10257:20:10",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10276:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1743,
															"id": 1748,
															"nodeType": "Return",
															"src": "10269:8:10"
														}
													},
													{
														"assignments": [
															1751
														],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "10756:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1829,
																"src": "10748:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10748:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1755,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1737,
																"src": "10768:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1753,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "10772:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10748:25:10"
													},
													{
														"assignments": [
															1757
														],
														"declarations": [
															{
																"constant": false,
																"id": 1757,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "10795:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1829,
																"src": "10787:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1756,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10787:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1759,
														"initialValue": {
															"id": 1758,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "10801:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10787:15:10"
													},
													{
														"assignments": [
															1761
														],
														"declarations": [
															{
																"constant": false,
																"id": 1761,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "10945:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1829,
																"src": "10938:8:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1760,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10938:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1763,
														"initialValue": {
															"hexValue": "30",
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10949:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10938:12:10"
													},
													{
														"assignments": [
															1765
														],
														"declarations": [
															{
																"constant": false,
																"id": 1765,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "10971:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 1829,
																"src": "10964:8:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1764,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10964:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1767,
														"initialValue": {
															"hexValue": "31",
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10975:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10964:12:10"
													},
													{
														"body": {
															"id": 1804,
															"nodeType": "Block",
															"src": "11014:882:10",
															"statements": [
																{
																	"assignments": [
																		1772
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1772,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "11040:8:10",
																			"nodeType": "VariableDeclaration",
																			"scope": 1804,
																			"src": "11032:16:10",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1771,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11032:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1776,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1773,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1757,
																			"src": "11051:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1774,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "11057:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11051:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "11032:34:10"
																},
																{
																	"expression": {
																		"id": 1787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1777,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1757,
																					"src": "11086:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1778,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1751,
																					"src": "11091:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1779,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11085:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1780,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1751,
																					"src": "11191:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1781,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1757,
																						"src": "11436:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1784,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1782,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1751,
																							"src": "11442:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1783,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1772,
																							"src": "11454:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11442:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11436:26:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1786,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11104:376:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "11085:395:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1788,
																	"nodeType": "ExpressionStatement",
																	"src": "11085:395:10"
																},
																{
																	"expression": {
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1789,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1761,
																					"src": "11500:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1790,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1765,
																					"src": "11503:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1791,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "11499:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1792,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1765,
																					"src": "11585:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1793,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1761,
																						"src": "11839:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1799,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1794,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1765,
																							"src": "11843:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1797,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1772,
																									"src": "11854:8:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1796,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11847:6:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1795,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "11847:6:10",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1798,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11847:16:10",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "11843:20:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "11839:24:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1801,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11508:373:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "11499:382:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1803,
																	"nodeType": "ExpressionStatement",
																	"src": "11499:382:10"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1768,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "10998:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10998:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1805,
														"nodeType": "WhileStatement",
														"src": "10991:905:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1806,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "11914:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11921:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11914:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1811,
														"nodeType": "IfStatement",
														"src": "11910:22:10",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11931:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1743,
															"id": 1810,
															"nodeType": "Return",
															"src": "11924:8:10"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1813,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "11983:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11987:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11983:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1816,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "11990:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "12002:2:10",
																				"subExpression": {
																					"id": 1819,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1761,
																					"src": "12003:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11994:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1817,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "11994:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11994:11:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11990:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1825,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1761,
																			"src": "12015:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12007:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1823,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12007:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12007:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1812,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "11975:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11975:43:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1743,
														"id": 1828,
														"nodeType": "Return",
														"src": "11968:50:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "9595:553:10",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "10162:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10177:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10169:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "10188:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10180:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10168:22:10"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "10214:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10214:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10213:9:10"
									},
									"scope": 2867,
									"src": "10153:1919:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "12672:82:10",
										"statements": [
											{
												"id": 1850,
												"nodeType": "UncheckedBlock",
												"src": "12682:66:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1843,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "12725:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1844,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "12728:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12732:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12728:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1847,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "12735:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1841,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "12713:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2867_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12718:6:10",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1888,
																"src": "12713:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12713:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1840,
														"id": 1849,
														"nodeType": "Return",
														"src": "12706:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "12078:514:10",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "12606:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12626:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "12618:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12618:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "12637:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "12629:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12617:22:10"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "12663:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12662:9:10"
									},
									"scope": 2867,
									"src": "12597:157:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "13524:174:10",
										"statements": [
											{
												"assignments": [
													1865,
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1865,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13540:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "13535:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1864,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13535:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1867,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13557:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "13549:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1866,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13549:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1873,
												"initialValue": {
													"arguments": [
														{
															"id": 1869,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "13577:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1870,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "13580:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1871,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "13583:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1868,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1912,
															1994
														],
														"referencedDeclaration": 1912,
														"src": "13567:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13567:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13534:51:10"
											},
											{
												"condition": {
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13599:8:10",
													"subExpression": {
														"id": 1874,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1865,
														"src": "13600:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "13595:74:10",
												"trueBody": {
													"id": 1883,
													"nodeType": "Block",
													"src": "13609:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1879,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 333,
																			"src": "13635:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "13641:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 300,
																		"src": "13635:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1876,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "13623:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13629:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "13623:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13623:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1882,
															"nodeType": "ExpressionStatement",
															"src": "13623:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1885,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1867,
													"src": "13685:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1886,
												"nodeType": "Return",
												"src": "13678:13:10"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "12760:678:10",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "13452:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13467:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "13459:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13459:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "13478:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "13470:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13470:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "13489:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "13481:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13481:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13458:33:10"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "13515:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13515:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13514:9:10"
									},
									"scope": 2867,
									"src": "13443:255:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "14552:1493:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1902,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1895,
														"src": "14566:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14571:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14566:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1909,
												"nodeType": "IfStatement",
												"src": "14562:29:10",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14582:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14589:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1907,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14581:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1901,
													"id": 1908,
													"nodeType": "Return",
													"src": "14574:17:10"
												}
											},
											{
												"AST": {
													"nativeSrc": "14626:1413:10",
													"nodeType": "YulBlock",
													"src": "14626:1413:10",
													"statements": [
														{
															"nativeSrc": "14640:22:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14640:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14657:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14657:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14651:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "14651:5:10"
																},
																"nativeSrc": "14651:11:10",
																"nodeType": "YulFunctionCall",
																"src": "14651:11:10"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "14644:3:10",
																	"nodeType": "YulTypedName",
																	"src": "14644:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15570:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15570:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15575:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15575:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15563:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15563:6:10"
																},
																"nativeSrc": "15563:17:10",
																"nodeType": "YulFunctionCall",
																"src": "15563:17:10"
															},
															"nativeSrc": "15563:17:10",
															"nodeType": "YulExpressionStatement",
															"src": "15563:17:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15604:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "15604:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:4:10",
																				"nodeType": "YulLiteral",
																				"src": "15609:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15600:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15600:3:10"
																		},
																		"nativeSrc": "15600:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15600:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15616:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15593:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15593:6:10"
																},
																"nativeSrc": "15593:28:10",
																"nodeType": "YulFunctionCall",
																"src": "15593:28:10"
															},
															"nativeSrc": "15593:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "15593:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15645:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "15645:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15650:4:10",
																				"nodeType": "YulLiteral",
																				"src": "15650:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:10"
																		},
																		"nativeSrc": "15641:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15657:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15657:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:10"
																},
																"nativeSrc": "15634:28:10",
																"nodeType": "YulFunctionCall",
																"src": "15634:28:10"
															},
															"nativeSrc": "15634:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "15634:28:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15686:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "15686:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15691:4:10",
																				"nodeType": "YulLiteral",
																				"src": "15691:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15682:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15682:3:10"
																		},
																		"nativeSrc": "15682:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15682:14:10"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "15698:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15698:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15675:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15675:6:10"
																},
																"nativeSrc": "15675:25:10",
																"nodeType": "YulFunctionCall",
																"src": "15675:25:10"
															},
															"nativeSrc": "15675:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "15675:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15724:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "15724:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15729:4:10",
																				"nodeType": "YulLiteral",
																				"src": "15729:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15720:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15720:3:10"
																		},
																		"nativeSrc": "15720:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15720:14:10"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "15736:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15736:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15713:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15713:6:10"
																},
																"nativeSrc": "15713:25:10",
																"nodeType": "YulFunctionCall",
																"src": "15713:25:10"
															},
															"nativeSrc": "15713:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "15713:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "15762:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "15762:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:4:10",
																				"nodeType": "YulLiteral",
																				"src": "15767:4:10",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15758:3:10"
																		},
																		"nativeSrc": "15758:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:14:10"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "15774:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15774:1:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15751:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15751:6:10"
																},
																"nativeSrc": "15751:25:10",
																"nodeType": "YulFunctionCall",
																"src": "15751:25:10"
															},
															"nativeSrc": "15751:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "15751:25:10"
														},
														{
															"nativeSrc": "15938:57:10",
															"nodeType": "YulAssignment",
															"src": "15938:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "15960:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15960:3:10"
																		},
																		"nativeSrc": "15960:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15960:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15967:4:10",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15973:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15973:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15978:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15978:4:10",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15984:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15984:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15990:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "15949:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "15949:10:10"
																},
																"nativeSrc": "15949:46:10",
																"nodeType": "YulFunctionCall",
																"src": "15949:46:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "15938:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "15938:7:10"
																}
															]
														},
														{
															"nativeSrc": "16008:21:10",
															"nodeType": "YulAssignment",
															"src": "16008:21:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16024:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16024:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16018:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "16018:5:10"
																},
																"nativeSrc": "16018:11:10",
																"nodeType": "YulFunctionCall",
																"src": "16018:11:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16008:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1891,
														"isOffset": false,
														"isSlot": false,
														"src": "15698:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1893,
														"isOffset": false,
														"isSlot": false,
														"src": "15736:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1895,
														"isOffset": false,
														"isSlot": false,
														"src": "15774:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1900,
														"isOffset": false,
														"isSlot": false,
														"src": "16008:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1898,
														"isOffset": false,
														"isSlot": false,
														"src": "15938:7:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1910,
												"nodeType": "InlineAssembly",
												"src": "14601:1438:10"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "13704:738:10",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "14456:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14474:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "14466:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14466:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "14485:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "14477:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14477:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "14496:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "14488:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14488:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14465:33:10"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14527:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "14522:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14522:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14544:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "14536:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14536:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14521:30:10"
									},
									"scope": 2867,
									"src": "14447:1598:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "16242:179:10",
										"statements": [
											{
												"assignments": [
													1925,
													1927
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16258:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "16253:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1924,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16253:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1927,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16280:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "16267:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1926,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16267:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1933,
												"initialValue": {
													"arguments": [
														{
															"id": 1929,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "16300:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1930,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "16303:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1931,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "16306:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1928,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1912,
															1994
														],
														"referencedDeclaration": 1994,
														"src": "16290:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16290:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16252:56:10"
											},
											{
												"condition": {
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16322:8:10",
													"subExpression": {
														"id": 1934,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "16323:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "16318:74:10",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "16332:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1939,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 333,
																			"src": "16358:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16364:16:10",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 300,
																		"src": "16358:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1936,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "16346:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$333_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16352:5:10",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 332,
																	"src": "16346:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1942,
															"nodeType": "ExpressionStatement",
															"src": "16346:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1927,
													"src": "16408:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1923,
												"id": 1946,
												"nodeType": "Return",
												"src": "16401:13:10"
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "16051:85:10",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "16150:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16170:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "16157:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16157:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16186:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "16173:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16173:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16202:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "16189:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16189:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16156:48:10"
									},
									"returnParameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "16228:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16228:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16227:14:10"
									},
									"scope": 2867,
									"src": "16141:280:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "16675:771:10",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1963,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "16700:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1962,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "16689:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16689:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1972,
												"nodeType": "IfStatement",
												"src": "16685:47:10",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16712:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16729:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "16719:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1966,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "16723:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16719:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1970,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "16711:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1961,
													"id": 1971,
													"nodeType": "Return",
													"src": "16704:28:10"
												}
											},
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "16751:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "16743:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1973,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16743:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"expression": {
														"id": 1975,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "16758:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16760:6:10",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "16758:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16743:23:10"
											},
											{
												"expression": {
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1978,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "16848:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1981,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "16874:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16876:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16874:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1983,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "16884:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16886:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "16884:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1985,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "16894:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1986,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "16900:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1987,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1953,
																"src": "16903:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1988,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1955,
																"src": "16906:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1979,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "16857:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "16861:12:10",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "16857:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16857:51:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "16848:60:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "16848:60:10"
											},
											{
												"AST": {
													"nativeSrc": "16944:496:10",
													"nodeType": "YulBlock",
													"src": "16944:496:10",
													"statements": [
														{
															"nativeSrc": "16958:32:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16958:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "16977:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16985:4:10",
																		"nodeType": "YulLiteral",
																		"src": "16985:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16973:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16973:3:10"
																},
																"nativeSrc": "16973:17:10",
																"nodeType": "YulFunctionCall",
																"src": "16973:17:10"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "16962:7:10",
																	"nodeType": "YulTypedName",
																	"src": "16962:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17080:73:10",
															"nodeType": "YulAssignment",
															"src": "17080:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "17102:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17102:3:10"
																		},
																		"nativeSrc": "17102:5:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17102:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17109:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17109:4:10",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17115:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "17115:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "17130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17130:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17124:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "17124:5:10"
																		},
																		"nativeSrc": "17124:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17124:13:10"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "17139:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "17139:7:10"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17148:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17148:4:10"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "17091:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "17091:10:10"
																},
																"nativeSrc": "17091:62:10",
																"nodeType": "YulFunctionCall",
																"src": "17091:62:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "17080:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "17080:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "17309:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "17309:6:10"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "17317:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17317:4:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17302:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17302:6:10"
																},
																"nativeSrc": "17302:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17302:20:10"
															},
															"nativeSrc": "17302:20:10",
															"nodeType": "YulExpressionStatement",
															"src": "17302:20:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17405:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17405:4:10",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "17415:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "17415:7:10"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "17424:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17424:4:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17411:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:10"
																		},
																		"nativeSrc": "17411:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17411:18:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17398:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:10"
																},
																"nativeSrc": "17398:32:10",
																"nodeType": "YulFunctionCall",
																"src": "17398:32:10"
															},
															"nativeSrc": "17398:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "17398:32:10"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1974,
														"isOffset": false,
														"isSlot": false,
														"src": "17148:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1974,
														"isOffset": false,
														"isSlot": false,
														"src": "17317:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1974,
														"isOffset": false,
														"isSlot": false,
														"src": "17424:4:10",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "16977:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "17130:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "17309:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1958,
														"isOffset": false,
														"isSlot": false,
														"src": "17080:7:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1992,
												"nodeType": "InlineAssembly",
												"src": "16919:521:10"
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "16427:88:10",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16529:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16561:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "16548:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16548:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16585:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "16572:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16572:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "16596:14:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16596:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16538:78:10"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "16645:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "16640:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16640:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16667:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "16654:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16654:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16639:35:10"
									},
									"scope": 2867,
									"src": "16520:926:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "17601:176:10",
										"statements": [
											{
												"body": {
													"id": 2022,
													"nodeType": "Block",
													"src": "17658:92:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2013,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "17676:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2015,
																	"indexExpression": {
																		"id": 2014,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2003,
																		"src": "17686:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17676:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17692:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17676:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2021,
															"nodeType": "IfStatement",
															"src": "17672:68:10",
															"trueBody": {
																"id": 2020,
																"nodeType": "Block",
																"src": "17695:45:10",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17720:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2001,
																		"id": 2019,
																		"nodeType": "Return",
																		"src": "17713:12:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2006,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2003,
														"src": "17631:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2007,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "17635:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17645:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17635:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17631:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2023,
												"initializationExpression": {
													"assignments": [
														2003
													],
													"declarations": [
														{
															"constant": false,
															"id": 2003,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "17624:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2023,
															"src": "17616:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2002,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "17616:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2005,
													"initialValue": {
														"hexValue": "30",
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17628:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "17616:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "17653:3:10",
														"subExpression": {
															"id": 2010,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2003,
															"src": "17655:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2012,
													"nodeType": "ExpressionStatement",
													"src": "17653:3:10"
												},
												"nodeType": "ForStatement",
												"src": "17611:139:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2001,
												"id": 2025,
												"nodeType": "Return",
												"src": "17759:11:10"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "17452:72:10",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "17538:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "17562:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "17549:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17548:24:10"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "17595:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1999,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17595:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17594:6:10"
									},
									"scope": 2867,
									"src": "17529:248:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "18137:5124:10",
										"statements": [
											{
												"id": 2244,
												"nodeType": "UncheckedBlock",
												"src": "18147:5108:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2035,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "18241:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18246:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "18241:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2041,
														"nodeType": "IfStatement",
														"src": "18237:53:10",
														"trueBody": {
															"id": 2040,
															"nodeType": "Block",
															"src": "18249:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2038,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2030,
																		"src": "18274:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2034,
																	"id": 2039,
																	"nodeType": "Return",
																	"src": "18267:8:10"
																}
															]
														}
													},
													{
														"assignments": [
															2043
														],
														"declarations": [
															{
																"constant": false,
																"id": 2043,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "19225:2:10",
																"nodeType": "VariableDeclaration",
																"scope": 2244,
																"src": "19217:10:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2042,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19217:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2045,
														"initialValue": {
															"id": 2044,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "19230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19217:14:10"
													},
													{
														"assignments": [
															2047
														],
														"declarations": [
															{
																"constant": false,
																"id": 2047,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "19253:2:10",
																"nodeType": "VariableDeclaration",
																"scope": 2244,
																"src": "19245:10:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2046,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19245:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2049,
														"initialValue": {
															"hexValue": "31",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19258:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19245:14:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2050,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19278:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19285:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19290:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19285:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 2054,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19284:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "19278:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2065,
														"nodeType": "IfStatement",
														"src": "19274:92:10",
														"trueBody": {
															"id": 2064,
															"nodeType": "Block",
															"src": "19296:70:10",
															"statements": [
																{
																	"expression": {
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2056,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "19314:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19321:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "19314:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2059,
																	"nodeType": "ExpressionStatement",
																	"src": "19314:10:10"
																},
																{
																	"expression": {
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2060,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19342:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19349:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19342:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2063,
																	"nodeType": "ExpressionStatement",
																	"src": "19342:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2066,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19383:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19390:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19395:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19390:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 2070,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19389:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "19383:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2081,
														"nodeType": "IfStatement",
														"src": "19379:90:10",
														"trueBody": {
															"id": 2080,
															"nodeType": "Block",
															"src": "19400:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2072,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "19418:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19425:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19418:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2075,
																	"nodeType": "ExpressionStatement",
																	"src": "19418:9:10"
																},
																{
																	"expression": {
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2076,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19445:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19452:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19445:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2079,
																	"nodeType": "ExpressionStatement",
																	"src": "19445:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2082,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19486:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19493:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19498:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19493:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 2086,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19492:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "19486:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2097,
														"nodeType": "IfStatement",
														"src": "19482:90:10",
														"trueBody": {
															"id": 2096,
															"nodeType": "Block",
															"src": "19503:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2088,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "19521:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19528:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19521:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2091,
																	"nodeType": "ExpressionStatement",
																	"src": "19521:9:10"
																},
																{
																	"expression": {
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2092,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19548:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19555:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19548:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2095,
																	"nodeType": "ExpressionStatement",
																	"src": "19548:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2098,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19589:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19596:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19601:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19596:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 2102,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19595:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "19589:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2113,
														"nodeType": "IfStatement",
														"src": "19585:89:10",
														"trueBody": {
															"id": 2112,
															"nodeType": "Block",
															"src": "19606:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2104,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "19624:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19631:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19624:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2107,
																	"nodeType": "ExpressionStatement",
																	"src": "19624:9:10"
																},
																{
																	"expression": {
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2108,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19651:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19658:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19651:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2111,
																	"nodeType": "ExpressionStatement",
																	"src": "19651:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2114,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19691:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19698:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19703:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19698:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19697:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "19691:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2129,
														"nodeType": "IfStatement",
														"src": "19687:87:10",
														"trueBody": {
															"id": 2128,
															"nodeType": "Block",
															"src": "19707:67:10",
															"statements": [
																{
																	"expression": {
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2120,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "19725:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19732:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19725:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2123,
																	"nodeType": "ExpressionStatement",
																	"src": "19725:8:10"
																},
																{
																	"expression": {
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2124,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19751:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19758:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19751:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2127,
																	"nodeType": "ExpressionStatement",
																	"src": "19751:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2130,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19791:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19798:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 2132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19803:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19798:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 2134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19797:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "19791:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2145,
														"nodeType": "IfStatement",
														"src": "19787:87:10",
														"trueBody": {
															"id": 2144,
															"nodeType": "Block",
															"src": "19807:67:10",
															"statements": [
																{
																	"expression": {
																		"id": 2138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2136,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "19825:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19832:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19825:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2139,
																	"nodeType": "ExpressionStatement",
																	"src": "19825:8:10"
																},
																{
																	"expression": {
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2140,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19851:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19858:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19851:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2143,
																	"nodeType": "ExpressionStatement",
																	"src": "19851:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "19891:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19898:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19903:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19898:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19897:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "19891:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2157,
														"nodeType": "IfStatement",
														"src": "19887:61:10",
														"trueBody": {
															"id": 2156,
															"nodeType": "Block",
															"src": "19907:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2152,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "19925:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19932:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19925:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2155,
																	"nodeType": "ExpressionStatement",
																	"src": "19925:8:10"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2158,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "20368:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20374:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2160,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "20378:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20374:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2162,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20373:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20385:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20373:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20368:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2166,
														"nodeType": "ExpressionStatement",
														"src": "20368:18:10"
													},
													{
														"expression": {
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2167,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "22273:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2168,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "22279:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2169,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "22284:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2170,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "22288:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22284:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22279:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2173,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22278:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22295:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22278:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22273:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2177,
														"nodeType": "ExpressionStatement",
														"src": "22273:23:10"
													},
													{
														"expression": {
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2178,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "22382:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2179,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "22388:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2180,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "22393:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2181,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "22397:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22393:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22388:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2184,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22387:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22404:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22387:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22382:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2188,
														"nodeType": "ExpressionStatement",
														"src": "22382:23:10"
													},
													{
														"expression": {
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2189,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "22493:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2190,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "22499:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2191,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "22504:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2192,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "22508:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22504:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22499:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2195,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22498:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22515:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22498:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22493:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2199,
														"nodeType": "ExpressionStatement",
														"src": "22493:23:10"
													},
													{
														"expression": {
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2200,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "22602:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2201,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "22608:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2202,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "22613:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2203,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "22617:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22613:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22608:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2206,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22607:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22624:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22607:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22602:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2210,
														"nodeType": "ExpressionStatement",
														"src": "22602:23:10"
													},
													{
														"expression": {
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2211,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "22712:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2212,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "22718:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2213,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "22723:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2214,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "22727:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22723:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22718:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2217,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22717:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22734:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22717:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22712:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2221,
														"nodeType": "ExpressionStatement",
														"src": "22712:23:10"
													},
													{
														"expression": {
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2222,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "22822:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2223,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "22828:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2224,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2030,
																					"src": "22833:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2225,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2047,
																					"src": "22837:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22833:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22828:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2228,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22827:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22844:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22827:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22822:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2232,
														"nodeType": "ExpressionStatement",
														"src": "22822:23:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "23211:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2236,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2047,
																			"src": "23232:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2237,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2030,
																				"src": "23237:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2238,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2047,
																				"src": "23241:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23237:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23232:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2234,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "23216:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23225:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "23216:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23216:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23211:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2034,
														"id": 2243,
														"nodeType": "Return",
														"src": "23204:40:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "17783:292:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18089:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18102:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "18094:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18094:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18093:11:10"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "18128:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18128:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18127:9:10"
									},
									"scope": 2867,
									"src": "18080:5181:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2279,
										"nodeType": "Block",
										"src": "23434:171:10",
										"statements": [
											{
												"id": 2278,
												"nodeType": "UncheckedBlock",
												"src": "23444:155:10",
												"statements": [
													{
														"assignments": [
															2258
														],
														"declarations": [
															{
																"constant": false,
																"id": 2258,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23476:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2278,
																"src": "23468:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23468:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2262,
														"initialValue": {
															"arguments": [
																{
																	"id": 2260,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2249,
																	"src": "23490:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2259,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2246,
																	2280
																],
																"referencedDeclaration": 2246,
																"src": "23485:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23485:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23468:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "23513:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2267,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2252,
																					"src": "23555:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2266,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2866,
																				"src": "23538:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1273_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23538:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2269,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2258,
																					"src": "23568:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2270,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2258,
																					"src": "23577:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23568:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2272,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2249,
																				"src": "23586:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23568:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "23538:49:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2264,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "23522:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23531:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "23522:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23522:66:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23513:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2256,
														"id": 2277,
														"nodeType": "Return",
														"src": "23506:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "23267:86:10",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "23367:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23380:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "23372:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23372:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23392:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "23383:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1273",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2250,
														"name": "Rounding",
														"nameLocations": [
															"23383:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1273,
														"src": "23383:8:10"
													},
													"referencedDeclaration": 1273,
													"src": "23383:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1273",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23371:30:10"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "23425:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23425:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23424:9:10"
									},
									"scope": 2867,
									"src": "23358:247:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "23796:981:10",
										"statements": [
											{
												"assignments": [
													2289
												],
												"declarations": [
													{
														"constant": false,
														"id": 2289,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23814:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "23806:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23806:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2291,
												"initialValue": {
													"hexValue": "30",
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23823:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23806:18:10"
											},
											{
												"assignments": [
													2293
												],
												"declarations": [
													{
														"constant": false,
														"id": 2293,
														"mutability": "mutable",
														"name": "exp",
														"nameLocation": "23842:3:10",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "23834:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23834:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2294,
												"nodeType": "VariableDeclarationStatement",
												"src": "23834:11:10"
											},
											{
												"id": 2472,
												"nodeType": "UncheckedBlock",
												"src": "23855:893:10",
												"statements": [
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2295,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "23879:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313238",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23885:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2299,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "23907:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"id": 2305,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							},
																							"id": 2302,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2300,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23916:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "313238",
																								"id": 2301,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "23921:3:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_128_by_1",
																									"typeString": "int_const 128"
																								},
																								"value": "128"
																							},
																							"src": "23916:8:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																								"typeString": "int_const 3402...(31 digits omitted)...1456"
																							}
																						}
																					],
																					"id": 2303,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "23915:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1456"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23928:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "23915:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				}
																			},
																			"src": "23907:22:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2297,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "23891:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "23900:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "23891:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23891:39:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23885:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23879:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "23879:51:10"
													},
													{
														"expression": {
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2311,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "23944:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2312,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "23954:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23944:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2314,
														"nodeType": "ExpressionStatement",
														"src": "23944:13:10"
													},
													{
														"expression": {
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2315,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "23971:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2316,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "23981:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23971:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2318,
														"nodeType": "ExpressionStatement",
														"src": "23971:13:10"
													},
													{
														"expression": {
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2319,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "23999:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3634",
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24005:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2323,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "24026:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				},
																				"id": 2329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							},
																							"id": 2326,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24035:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 2325,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24040:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "24035:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18446744073709551616_by_1",
																								"typeString": "int_const 18446744073709551616"
																							}
																						}
																					],
																					"id": 2327,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24034:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_18446744073709551616_by_1",
																						"typeString": "int_const 18446744073709551616"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2328,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24046:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24034:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551615_by_1",
																					"typeString": "int_const 18446744073709551615"
																				}
																			},
																			"src": "24026:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2321,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "24010:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24019:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "24010:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24010:38:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24005:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23999:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2334,
														"nodeType": "ExpressionStatement",
														"src": "23999:49:10"
													},
													{
														"expression": {
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2335,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "24062:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2336,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24072:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24062:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2338,
														"nodeType": "ExpressionStatement",
														"src": "24062:13:10"
													},
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2339,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24089:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2340,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24099:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24089:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "24089:13:10"
													},
													{
														"expression": {
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24117:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3332",
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24123:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2347,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "24144:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				},
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							},
																							"id": 2350,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2348,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24153:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3332",
																								"id": 2349,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24158:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							},
																							"src": "24153:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4294967296_by_1",
																								"typeString": "int_const 4294967296"
																							}
																						}
																					],
																					"id": 2351,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24152:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4294967296_by_1",
																						"typeString": "int_const 4294967296"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24164:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24152:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967295_by_1",
																					"typeString": "int_const 4294967295"
																				}
																			},
																			"src": "24144:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2345,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "24128:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24137:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "24128:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24128:38:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24123:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24117:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2358,
														"nodeType": "ExpressionStatement",
														"src": "24117:49:10"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "24180:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2360,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24190:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24180:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "24180:13:10"
													},
													{
														"expression": {
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2363,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24207:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2364,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24217:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24207:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2366,
														"nodeType": "ExpressionStatement",
														"src": "24207:13:10"
													},
													{
														"expression": {
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2367,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24235:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3136",
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24241:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2371,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "24262:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				},
																				"id": 2377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							},
																							"id": 2374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2372,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24271:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "3136",
																								"id": 2373,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24276:2:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_16_by_1",
																									"typeString": "int_const 16"
																								},
																								"value": "16"
																							},
																							"src": "24271:7:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_65536_by_1",
																								"typeString": "int_const 65536"
																							}
																						}
																					],
																					"id": 2375,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24270:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65536_by_1",
																						"typeString": "int_const 65536"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24282:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24270:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65535_by_1",
																					"typeString": "int_const 65535"
																				}
																			},
																			"src": "24262:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2369,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "24246:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24255:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "24246:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24246:38:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24241:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24235:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2382,
														"nodeType": "ExpressionStatement",
														"src": "24235:49:10"
													},
													{
														"expression": {
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2383,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "24298:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2384,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24308:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24298:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2386,
														"nodeType": "ExpressionStatement",
														"src": "24298:13:10"
													},
													{
														"expression": {
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2387,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24325:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2388,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24335:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24325:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2390,
														"nodeType": "ExpressionStatement",
														"src": "24325:13:10"
													},
													{
														"expression": {
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2391,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24353:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "38",
																	"id": 2392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24359:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2395,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "24379:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"id": 2401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"id": 2398,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2396,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24388:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "38",
																								"id": 2397,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24393:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_8_by_1",
																									"typeString": "int_const 8"
																								},
																								"value": "8"
																							},
																							"src": "24388:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							}
																						}
																					],
																					"id": 2399,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24387:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_256_by_1",
																						"typeString": "int_const 256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2400,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24398:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24387:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				}
																			},
																			"src": "24379:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2393,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "24363:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24372:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "24363:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24363:37:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24359:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24353:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2406,
														"nodeType": "ExpressionStatement",
														"src": "24353:47:10"
													},
													{
														"expression": {
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2407,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "24414:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2408,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24424:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24414:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2410,
														"nodeType": "ExpressionStatement",
														"src": "24414:13:10"
													},
													{
														"expression": {
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2411,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24441:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2412,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24451:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24441:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2414,
														"nodeType": "ExpressionStatement",
														"src": "24441:13:10"
													},
													{
														"expression": {
															"id": 2429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2415,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24469:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "34",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2419,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "24495:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				},
																				"id": 2425,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"id": 2422,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2420,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24504:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 2421,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24509:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "24504:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							}
																						}
																					],
																					"id": 2423,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24503:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2424,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24514:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24503:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_15_by_1",
																					"typeString": "int_const 15"
																				}
																			},
																			"src": "24495:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2417,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "24479:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24488:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "24479:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24479:37:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24475:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24469:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2430,
														"nodeType": "ExpressionStatement",
														"src": "24469:47:10"
													},
													{
														"expression": {
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2431,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "24530:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2432,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24540:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24530:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2434,
														"nodeType": "ExpressionStatement",
														"src": "24530:13:10"
													},
													{
														"expression": {
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24557:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2436,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24567:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24557:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2438,
														"nodeType": "ExpressionStatement",
														"src": "24557:13:10"
													},
													{
														"expression": {
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2439,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24585:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24591:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2443,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "24611:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"id": 2449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"id": 2446,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "31",
																								"id": 2444,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24620:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 2445,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24625:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "24620:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							}
																						}
																					],
																					"id": 2447,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24619:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_4_by_1",
																						"typeString": "int_const 4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24630:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "24619:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				}
																			},
																			"src": "24611:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 2441,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4632,
																			"src": "24595:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24604:6:10",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4631,
																		"src": "24595:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24595:37:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24591:41:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24585:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2454,
														"nodeType": "ExpressionStatement",
														"src": "24585:47:10"
													},
													{
														"expression": {
															"id": 2457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2455,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2283,
																"src": "24646:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2456,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24656:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24646:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2458,
														"nodeType": "ExpressionStatement",
														"src": "24646:13:10"
													},
													{
														"expression": {
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2459,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24673:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2460,
																"name": "exp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "24683:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24673:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2462,
														"nodeType": "ExpressionStatement",
														"src": "24673:13:10"
													},
													{
														"expression": {
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2289,
																"src": "24701:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2466,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2283,
																			"src": "24727:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24735:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24727:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2464,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "24711:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "24720:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "24711:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24711:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24701:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2471,
														"nodeType": "ExpressionStatement",
														"src": "24701:36:10"
													}
												]
											},
											{
												"expression": {
													"id": 2473,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2289,
													"src": "24764:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2287,
												"id": 2474,
												"nodeType": "Return",
												"src": "24757:13:10"
											}
										]
									},
									"documentation": {
										"id": 2281,
										"nodeType": "StructuredDocumentation",
										"src": "23611:119:10",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23744:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23757:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "23749:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23748:15:10"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "23787:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23787:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23786:9:10"
									},
									"scope": 2867,
									"src": "23735:1042:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "25010:175:10",
										"statements": [
											{
												"id": 2508,
												"nodeType": "UncheckedBlock",
												"src": "25020:159:10",
												"statements": [
													{
														"assignments": [
															2488
														],
														"declarations": [
															{
																"constant": false,
																"id": 2488,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25052:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2508,
																"src": "25044:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2487,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25044:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2492,
														"initialValue": {
															"arguments": [
																{
																	"id": 2490,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2479,
																	"src": "25066:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2489,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2476,
																	2510
																],
																"referencedDeclaration": 2476,
																"src": "25061:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25061:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25044:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2493,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2488,
																"src": "25093:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2497,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2482,
																					"src": "25135:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2496,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2866,
																				"src": "25118:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1273_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25118:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2499,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "25148:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2500,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2488,
																					"src": "25153:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25148:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2502,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2479,
																				"src": "25162:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25148:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "25118:49:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2494,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "25102:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25111:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "25102:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25102:66:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25093:75:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2486,
														"id": 2507,
														"nodeType": "Return",
														"src": "25086:82:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "24783:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "24939:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24952:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "24944:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24944:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24968:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "24959:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1273",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2480,
														"name": "Rounding",
														"nameLocations": [
															"24959:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1273,
														"src": "24959:8:10"
													},
													"referencedDeclaration": 1273,
													"src": "24959:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1273",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24943:34:10"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "25001:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25001:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25000:9:10"
									},
									"scope": 2867,
									"src": "24930:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "25378:854:10",
										"statements": [
											{
												"assignments": [
													2519
												],
												"declarations": [
													{
														"constant": false,
														"id": 2519,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25396:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "25388:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25388:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2521,
												"initialValue": {
													"hexValue": "30",
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25405:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25388:18:10"
											},
											{
												"id": 2635,
												"nodeType": "UncheckedBlock",
												"src": "25416:787:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2522,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "25444:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25453:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25459:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25453:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "25444:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2538,
														"nodeType": "IfStatement",
														"src": "25440:103:10",
														"trueBody": {
															"id": 2537,
															"nodeType": "Block",
															"src": "25463:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "25481:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25490:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25496:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "25490:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "25481:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2532,
																	"nodeType": "ExpressionStatement",
																	"src": "25481:17:10"
																},
																{
																	"expression": {
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2533,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "25516:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25526:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25516:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2536,
																	"nodeType": "ExpressionStatement",
																	"src": "25516:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2539,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "25560:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25569:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25575:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "25569:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "25560:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2555,
														"nodeType": "IfStatement",
														"src": "25556:103:10",
														"trueBody": {
															"id": 2554,
															"nodeType": "Block",
															"src": "25579:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2544,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "25597:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25606:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25612:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "25606:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "25597:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "25597:17:10"
																},
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "25632:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25642:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "25632:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "25632:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2556,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "25676:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25685:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25691:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25685:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "25676:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2572,
														"nodeType": "IfStatement",
														"src": "25672:103:10",
														"trueBody": {
															"id": 2571,
															"nodeType": "Block",
															"src": "25695:80:10",
															"statements": [
																{
																	"expression": {
																		"id": 2565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2561,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "25713:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25722:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25728:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "25722:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "25713:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2566,
																	"nodeType": "ExpressionStatement",
																	"src": "25713:17:10"
																},
																{
																	"expression": {
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "25748:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25758:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25748:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2570,
																	"nodeType": "ExpressionStatement",
																	"src": "25748:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2573,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "25792:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25801:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25807:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25801:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "25792:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2589,
														"nodeType": "IfStatement",
														"src": "25788:100:10",
														"trueBody": {
															"id": 2588,
															"nodeType": "Block",
															"src": "25810:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2578,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "25828:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25837:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25843:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "25837:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "25828:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "25828:16:10"
																},
																{
																	"expression": {
																		"id": 2586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2584,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "25862:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25872:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25862:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2587,
																	"nodeType": "ExpressionStatement",
																	"src": "25862:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2590,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "25905:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25914:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25920:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25914:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "25905:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2606,
														"nodeType": "IfStatement",
														"src": "25901:100:10",
														"trueBody": {
															"id": 2605,
															"nodeType": "Block",
															"src": "25923:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2595,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "25941:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25950:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25956:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "25950:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "25941:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2600,
																	"nodeType": "ExpressionStatement",
																	"src": "25941:16:10"
																},
																{
																	"expression": {
																		"id": 2603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2601,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "25975:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "25975:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2604,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "26018:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26033:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "26027:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "26018:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2623,
														"nodeType": "IfStatement",
														"src": "26014:100:10",
														"trueBody": {
															"id": 2622,
															"nodeType": "Block",
															"src": "26036:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2513,
																			"src": "26054:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26063:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26069:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "26063:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "26054:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:16:10"
																},
																{
																	"expression": {
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2618,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "26088:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26098:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26088:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2621,
																	"nodeType": "ExpressionStatement",
																	"src": "26088:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2624,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2513,
																"src": "26131:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26140:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26146:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "26140:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "26131:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2634,
														"nodeType": "IfStatement",
														"src": "26127:66:10",
														"trueBody": {
															"id": 2633,
															"nodeType": "Block",
															"src": "26149:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "26167:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26177:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26167:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2632,
																	"nodeType": "ExpressionStatement",
																	"src": "26167:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2636,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2519,
													"src": "26219:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2517,
												"id": 2637,
												"nodeType": "Return",
												"src": "26212:13:10"
											}
										]
									},
									"documentation": {
										"id": 2511,
										"nodeType": "StructuredDocumentation",
										"src": "25191:120:10",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25325:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25339:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "25331:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25331:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25330:15:10"
									},
									"returnParameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "25369:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25369:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25368:9:10"
									},
									"scope": 2867,
									"src": "25316:916:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2672,
										"nodeType": "Block",
										"src": "26467:177:10",
										"statements": [
											{
												"id": 2671,
												"nodeType": "UncheckedBlock",
												"src": "26477:161:10",
												"statements": [
													{
														"assignments": [
															2651
														],
														"declarations": [
															{
																"constant": false,
																"id": 2651,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26509:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2671,
																"src": "26501:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2650,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26501:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2655,
														"initialValue": {
															"arguments": [
																{
																	"id": 2653,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "26524:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2652,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2639,
																	2673
																],
																"referencedDeclaration": 2639,
																"src": "26518:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26518:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26501:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2656,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2651,
																"src": "26551:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2660,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2645,
																					"src": "26593:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2659,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2866,
																				"src": "26576:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1273_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26576:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26606:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2663,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2651,
																					"src": "26612:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26606:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2665,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2642,
																				"src": "26621:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26606:20:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26576:50:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2657,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "26560:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26569:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "26560:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26560:67:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26551:76:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2649,
														"id": 2670,
														"nodeType": "Return",
														"src": "26544:83:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "26238:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "26395:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26409:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "26401:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26401:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26425:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "26416:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1273",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2643,
														"name": "Rounding",
														"nameLocations": [
															"26416:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1273,
														"src": "26416:8:10"
													},
													"referencedDeclaration": 1273,
													"src": "26416:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1273",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26400:34:10"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "26458:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26458:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26457:9:10"
									},
									"scope": 2867,
									"src": "26386:258:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2809,
										"nodeType": "Block",
										"src": "26964:674:10",
										"statements": [
											{
												"assignments": [
													2682
												],
												"declarations": [
													{
														"constant": false,
														"id": 2682,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "26982:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2809,
														"src": "26974:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2681,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26974:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2684,
												"initialValue": {
													"hexValue": "30",
													"id": 2683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26991:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26974:18:10"
											},
											{
												"assignments": [
													2686
												],
												"declarations": [
													{
														"constant": false,
														"id": 2686,
														"mutability": "mutable",
														"name": "isGt",
														"nameLocation": "27010:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2809,
														"src": "27002:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27002:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2687,
												"nodeType": "VariableDeclarationStatement",
												"src": "27002:12:10"
											},
											{
												"id": 2806,
												"nodeType": "UncheckedBlock",
												"src": "27024:585:10",
												"statements": [
													{
														"expression": {
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2688,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "27048:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2691,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "27071:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			},
																			"id": 2697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"id": 2694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27080:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "313238",
																							"id": 2693,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27085:3:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_128_by_1",
																								"typeString": "int_const 128"
																							},
																							"value": "128"
																						},
																						"src": "27080:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						}
																					}
																				],
																				"id": 2695,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27079:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27092:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27079:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1455"
																			}
																		},
																		"src": "27071:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2689,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "27055:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27064:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "27055:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27055:39:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27048:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2701,
														"nodeType": "ExpressionStatement",
														"src": "27048:46:10"
													},
													{
														"expression": {
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2702,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2676,
																"src": "27108:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2703,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27118:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27125:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "27118:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27108:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2707,
														"nodeType": "ExpressionStatement",
														"src": "27108:20:10"
													},
													{
														"expression": {
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2708,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "27142:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2709,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27152:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27159:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27152:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27142:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2713,
														"nodeType": "ExpressionStatement",
														"src": "27142:19:10"
													},
													{
														"expression": {
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2714,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "27176:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2717,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "27199:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			},
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						},
																						"id": 2720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2718,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27208:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3634",
																							"id": 2719,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27213:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_64_by_1",
																								"typeString": "int_const 64"
																							},
																							"value": "64"
																						},
																						"src": "27208:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18446744073709551616_by_1",
																							"typeString": "int_const 18446744073709551616"
																						}
																					}
																				],
																				"id": 2721,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27207:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_18446744073709551616_by_1",
																					"typeString": "int_const 18446744073709551616"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27219:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27207:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551615_by_1",
																				"typeString": "int_const 18446744073709551615"
																			}
																		},
																		"src": "27199:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2715,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "27183:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27192:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "27183:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27183:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27176:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2727,
														"nodeType": "ExpressionStatement",
														"src": "27176:45:10"
													},
													{
														"expression": {
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2728,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2676,
																"src": "27235:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2729,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27245:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27252:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "27245:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27235:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2733,
														"nodeType": "ExpressionStatement",
														"src": "27235:19:10"
													},
													{
														"expression": {
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2734,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "27268:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2735,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27278:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27285:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "27278:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27268:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2739,
														"nodeType": "ExpressionStatement",
														"src": "27268:18:10"
													},
													{
														"expression": {
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2740,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "27301:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2743,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "27324:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			},
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						},
																						"id": 2746,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2744,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27333:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3332",
																							"id": 2745,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27338:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"src": "27333:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					}
																				],
																				"id": 2747,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27332:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4294967296_by_1",
																					"typeString": "int_const 4294967296"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27344:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27332:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967295_by_1",
																				"typeString": "int_const 4294967295"
																			}
																		},
																		"src": "27324:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2741,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "27308:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27317:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "27308:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27308:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27301:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2753,
														"nodeType": "ExpressionStatement",
														"src": "27301:45:10"
													},
													{
														"expression": {
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2676,
																"src": "27360:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2755,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27370:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27377:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "27370:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27360:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2759,
														"nodeType": "ExpressionStatement",
														"src": "27360:19:10"
													},
													{
														"expression": {
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2760,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "27393:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2761,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27403:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27410:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "27403:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27393:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2765,
														"nodeType": "ExpressionStatement",
														"src": "27393:18:10"
													},
													{
														"expression": {
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2766,
																"name": "isGt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "27426:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2769,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "27449:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						},
																						"id": 2772,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2770,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27458:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "3136",
																							"id": 2771,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27463:2:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_16_by_1",
																								"typeString": "int_const 16"
																							},
																							"value": "16"
																						},
																						"src": "27458:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_65536_by_1",
																							"typeString": "int_const 65536"
																						}
																					}
																				],
																				"id": 2773,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27457:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_65536_by_1",
																					"typeString": "int_const 65536"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27469:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27457:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65535_by_1",
																				"typeString": "int_const 65535"
																			}
																		},
																		"src": "27449:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2767,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "27433:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27442:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "27433:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27433:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27426:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2779,
														"nodeType": "ExpressionStatement",
														"src": "27426:45:10"
													},
													{
														"expression": {
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2676,
																"src": "27485:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2781,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27495:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27502:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "27495:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27485:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2785,
														"nodeType": "ExpressionStatement",
														"src": "27485:19:10"
													},
													{
														"expression": {
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2786,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "27518:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2787,
																	"name": "isGt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "27528:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27535:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "27528:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27518:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2791,
														"nodeType": "ExpressionStatement",
														"src": "27518:18:10"
													},
													{
														"expression": {
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2792,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2682,
																"src": "27551:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2676,
																			"src": "27577:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"id": 2801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"id": 2798,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2796,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27586:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 2797,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "27591:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "27586:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						}
																					}
																				],
																				"id": 2799,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27585:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27596:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "27585:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			}
																		},
																		"src": "27577:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2793,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "27561:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27570:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "27561:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27561:37:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27551:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2805,
														"nodeType": "ExpressionStatement",
														"src": "27551:47:10"
													}
												]
											},
											{
												"expression": {
													"id": 2807,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2682,
													"src": "27625:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2680,
												"id": 2808,
												"nodeType": "Return",
												"src": "27618:13:10"
											}
										]
									},
									"documentation": {
										"id": 2674,
										"nodeType": "StructuredDocumentation",
										"src": "26650:246:10",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26910:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26925:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "26917:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26917:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26916:15:10"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "26955:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26955:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26954:9:10"
									},
									"scope": 2867,
									"src": "26901:737:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "27875:184:10",
										"statements": [
											{
												"id": 2845,
												"nodeType": "UncheckedBlock",
												"src": "27885:168:10",
												"statements": [
													{
														"assignments": [
															2822
														],
														"declarations": [
															{
																"constant": false,
																"id": 2822,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "27917:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2845,
																"src": "27909:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2821,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27909:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2826,
														"initialValue": {
															"arguments": [
																{
																	"id": 2824,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2813,
																	"src": "27933:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2823,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2810,
																	2847
																],
																"referencedDeclaration": 2810,
																"src": "27926:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27926:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27909:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2827,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2822,
																"src": "27960:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2831,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2816,
																					"src": "28002:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1273",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2830,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2866,
																				"src": "27985:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1273_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27985:26:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2833,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28015:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2836,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2834,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2822,
																								"src": "28021:6:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2835,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "28031:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "28021:11:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2837,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "28020:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28015:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2813,
																				"src": "28036:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28015:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "27985:56:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2828,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4632,
																		"src": "27969:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27978:6:10",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4631,
																	"src": "27969:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27969:73:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27960:82:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2820,
														"id": 2844,
														"nodeType": "Return",
														"src": "27953:89:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2811,
										"nodeType": "StructuredDocumentation",
										"src": "27644:144:10",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "27802:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "27809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27833:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "27824:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1273",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2814,
														"name": "Rounding",
														"nameLocations": [
															"27824:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1273,
														"src": "27824:8:10"
													},
													"referencedDeclaration": 1273,
													"src": "27824:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1273",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27808:34:10"
									},
									"returnParameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "27866:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27866:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27865:9:10"
									},
									"scope": 2867,
									"src": "27793:266:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "28257:48:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2858,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "28280:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1273",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1273",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28274:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2856,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "28274:5:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28274:15:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28292:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "28274:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28297:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "28274:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2855,
												"id": 2864,
												"nodeType": "Return",
												"src": "28267:31:10"
											}
										]
									},
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "28065:113:10",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "28192:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28218:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "28209:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1273",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2849,
														"name": "Rounding",
														"nameLocations": [
															"28209:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1273,
														"src": "28209:8:10"
													},
													"referencedDeclaration": 1273,
													"src": "28209:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1273",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28208:19:10"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "28251:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28251:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:6:10"
									},
									"scope": 2867,
									"src": "28183:122:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2868,
							"src": "281:28026:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:28205:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4632
						]
					},
					"id": 4633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2869,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2870,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:11",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4632,
							"linearizedBaseContracts": [
								4632
							],
							"name": "SafeCast",
							"nameLocation": "777:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2871,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:11",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2877,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "902:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2872,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "914:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:11"
									},
									"src": "865:64:11"
								},
								{
									"documentation": {
										"id": 2878,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:11",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2882,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1049:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2879,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:11"
									},
									"src": "1015:48:11"
								},
								{
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:11",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2889,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "1177:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2884,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "1189:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2886,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:11"
									},
									"src": "1141:62:11"
								},
								{
									"documentation": {
										"id": 2890,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:11",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2894,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1323:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:11"
									},
									"src": "1289:49:11"
								},
								{
									"body": {
										"id": 2921,
										"nodeType": "Block",
										"src": "1695:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2902,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "1709:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2904,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2903,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2915,
												"nodeType": "IfStatement",
												"src": "1705:105:11",
												"trueBody": {
													"id": 2914,
													"nodeType": "Block",
													"src": "1736:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2911,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2897,
																		"src": "1793:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2909,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "1757:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2913,
															"nodeType": "RevertStatement",
															"src": "1750:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2897,
															"src": "1834:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2916,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2901,
												"id": 2920,
												"nodeType": "Return",
												"src": "1819:21:11"
											}
										]
									},
									"documentation": {
										"id": 2895,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:11",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "1648:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:11"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "1686:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2899,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:11"
									},
									"scope": 4632,
									"src": "1629:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2949,
										"nodeType": "Block",
										"src": "2204:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2930,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2925,
														"src": "2218:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2932,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2931,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2943,
												"nodeType": "IfStatement",
												"src": "2214:105:11",
												"trueBody": {
													"id": 2942,
													"nodeType": "Block",
													"src": "2245:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2939,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2925,
																		"src": "2302:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2937,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "2266:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2941,
															"nodeType": "RevertStatement",
															"src": "2259:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2946,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "2343:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2944,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2929,
												"id": 2948,
												"nodeType": "Return",
												"src": "2328:21:11"
											}
										]
									},
									"documentation": {
										"id": 2923,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:11",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "2157:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:11"
									},
									"returnParameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "2195:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2927,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:11"
									},
									"scope": 4632,
									"src": "2138:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "2713:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2958,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2953,
														"src": "2727:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2960,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2959,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2971,
												"nodeType": "IfStatement",
												"src": "2723:105:11",
												"trueBody": {
													"id": 2970,
													"nodeType": "Block",
													"src": "2754:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2967,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2953,
																		"src": "2811:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2965,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "2775:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2969,
															"nodeType": "RevertStatement",
															"src": "2768:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2974,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "2852:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2972,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2957,
												"id": 2976,
												"nodeType": "Return",
												"src": "2837:21:11"
											}
										]
									},
									"documentation": {
										"id": 2951,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:11",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "2666:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:11"
									},
									"returnParameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "2704:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2955,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:11"
									},
									"scope": 4632,
									"src": "2647:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3005,
										"nodeType": "Block",
										"src": "3222:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2986,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "3236:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2988,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2987,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2999,
												"nodeType": "IfStatement",
												"src": "3232:105:11",
												"trueBody": {
													"id": 2998,
													"nodeType": "Block",
													"src": "3263:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2995,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2981,
																		"src": "3320:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2993,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "3284:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2997,
															"nodeType": "RevertStatement",
															"src": "3277:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3002,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2981,
															"src": "3361:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3001,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 3000,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2985,
												"id": 3004,
												"nodeType": "Return",
												"src": "3346:21:11"
											}
										]
									},
									"documentation": {
										"id": 2979,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:11",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "3175:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:11"
									},
									"returnParameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3006,
												"src": "3213:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2983,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:11"
									},
									"scope": 4632,
									"src": "3156:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3033,
										"nodeType": "Block",
										"src": "3731:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3014,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3009,
														"src": "3745:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 3016,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 3015,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3027,
												"nodeType": "IfStatement",
												"src": "3741:105:11",
												"trueBody": {
													"id": 3026,
													"nodeType": "Block",
													"src": "3772:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3023,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3009,
																		"src": "3829:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3021,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "3793:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3025,
															"nodeType": "RevertStatement",
															"src": "3786:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3030,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3009,
															"src": "3870:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 3028,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 3013,
												"id": 3032,
												"nodeType": "Return",
												"src": "3855:21:11"
											}
										]
									},
									"documentation": {
										"id": 3007,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:11",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "3684:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:11"
									},
									"returnParameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "3722:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 3011,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:11"
									},
									"scope": 4632,
									"src": "3665:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3061,
										"nodeType": "Block",
										"src": "4240:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3042,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3037,
														"src": "4254:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 3044,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 3043,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 3047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3055,
												"nodeType": "IfStatement",
												"src": "4250:105:11",
												"trueBody": {
													"id": 3054,
													"nodeType": "Block",
													"src": "4281:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3051,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3037,
																		"src": "4338:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3049,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "4302:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3053,
															"nodeType": "RevertStatement",
															"src": "4295:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3058,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3037,
															"src": "4379:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3057,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 3056,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 3041,
												"id": 3060,
												"nodeType": "Return",
												"src": "4364:21:11"
											}
										]
									},
									"documentation": {
										"id": 3035,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:11",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "4193:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:11"
									},
									"returnParameters": {
										"id": 3041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3062,
												"src": "4231:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 3039,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:11"
									},
									"scope": 4632,
									"src": "4174:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3089,
										"nodeType": "Block",
										"src": "4749:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3070,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3065,
														"src": "4763:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 3072,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 3071,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 3075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3083,
												"nodeType": "IfStatement",
												"src": "4759:105:11",
												"trueBody": {
													"id": 3082,
													"nodeType": "Block",
													"src": "4790:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3079,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3065,
																		"src": "4847:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3077,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "4811:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3081,
															"nodeType": "RevertStatement",
															"src": "4804:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "4888:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 3084,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 3069,
												"id": 3088,
												"nodeType": "Return",
												"src": "4873:21:11"
											}
										]
									},
									"documentation": {
										"id": 3063,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:11",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "4702:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:11"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "4740:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 3067,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:11"
									},
									"scope": 4632,
									"src": "4683:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3117,
										"nodeType": "Block",
										"src": "5258:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3098,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "5272:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 3100,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 3099,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 3103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3111,
												"nodeType": "IfStatement",
												"src": "5268:105:11",
												"trueBody": {
													"id": 3110,
													"nodeType": "Block",
													"src": "5299:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3107,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3093,
																		"src": "5356:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3105,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "5320:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3109,
															"nodeType": "RevertStatement",
															"src": "5313:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3114,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3093,
															"src": "5397:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 3112,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 3097,
												"id": 3116,
												"nodeType": "Return",
												"src": "5382:21:11"
											}
										]
									},
									"documentation": {
										"id": 3091,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:11",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3118,
												"src": "5211:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:11"
									},
									"returnParameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3118,
												"src": "5249:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 3095,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:11"
									},
									"scope": 4632,
									"src": "5192:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "5767:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3126,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3121,
														"src": "5781:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 3128,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 3127,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 3131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3139,
												"nodeType": "IfStatement",
												"src": "5777:105:11",
												"trueBody": {
													"id": 3138,
													"nodeType": "Block",
													"src": "5808:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3135,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3121,
																		"src": "5865:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3133,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "5829:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3137,
															"nodeType": "RevertStatement",
															"src": "5822:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3142,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3121,
															"src": "5906:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 3140,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 3125,
												"id": 3144,
												"nodeType": "Return",
												"src": "5891:21:11"
											}
										]
									},
									"documentation": {
										"id": 3119,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:11",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5720:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:11"
									},
									"returnParameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5758:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 3123,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:11"
									},
									"scope": 4632,
									"src": "5701:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3173,
										"nodeType": "Block",
										"src": "6276:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3154,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3149,
														"src": "6290:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 3156,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 3155,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3167,
												"nodeType": "IfStatement",
												"src": "6286:105:11",
												"trueBody": {
													"id": 3166,
													"nodeType": "Block",
													"src": "6317:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3163,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3149,
																		"src": "6374:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3161,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "6338:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3165,
															"nodeType": "RevertStatement",
															"src": "6331:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3170,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "6415:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 3168,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 3153,
												"id": 3172,
												"nodeType": "Return",
												"src": "6400:21:11"
											}
										]
									},
									"documentation": {
										"id": 3147,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:11",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "6229:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:11"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "6267:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 3151,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:11"
									},
									"scope": 4632,
									"src": "6210:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3201,
										"nodeType": "Block",
										"src": "6785:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3182,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "6799:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 3184,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 3183,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 3187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3195,
												"nodeType": "IfStatement",
												"src": "6795:105:11",
												"trueBody": {
													"id": 3194,
													"nodeType": "Block",
													"src": "6826:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3191,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3177,
																		"src": "6883:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3189,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "6847:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3193,
															"nodeType": "RevertStatement",
															"src": "6840:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3198,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "6924:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 3196,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 3181,
												"id": 3200,
												"nodeType": "Return",
												"src": "6909:21:11"
											}
										]
									},
									"documentation": {
										"id": 3175,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:11",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3202,
												"src": "6738:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:11"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3202,
												"src": "6776:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 3179,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:11"
									},
									"scope": 4632,
									"src": "6719:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "7294:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3210,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3205,
														"src": "7308:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3212,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 3211,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 3215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3223,
												"nodeType": "IfStatement",
												"src": "7304:105:11",
												"trueBody": {
													"id": 3222,
													"nodeType": "Block",
													"src": "7335:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3219,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3205,
																		"src": "7392:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3217,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "7356:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3221,
															"nodeType": "RevertStatement",
															"src": "7349:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3226,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3205,
															"src": "7433:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 3224,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3209,
												"id": 3228,
												"nodeType": "Return",
												"src": "7418:21:11"
											}
										]
									},
									"documentation": {
										"id": 3203,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:11",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "7247:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:11"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "7285:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3207,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:11"
									},
									"scope": 4632,
									"src": "7228:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3257,
										"nodeType": "Block",
										"src": "7803:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3238,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3233,
														"src": "7817:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 3240,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 3239,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 3243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3251,
												"nodeType": "IfStatement",
												"src": "7813:105:11",
												"trueBody": {
													"id": 3250,
													"nodeType": "Block",
													"src": "7844:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3247,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3233,
																		"src": "7901:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3245,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "7865:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3249,
															"nodeType": "RevertStatement",
															"src": "7858:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3254,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3233,
															"src": "7942:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 3252,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 3237,
												"id": 3256,
												"nodeType": "Return",
												"src": "7927:21:11"
											}
										]
									},
									"documentation": {
										"id": 3231,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:11",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3258,
												"src": "7756:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:11"
									},
									"returnParameters": {
										"id": 3237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3258,
												"src": "7794:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 3235,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:11"
									},
									"scope": 4632,
									"src": "7737:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3285,
										"nodeType": "Block",
										"src": "8312:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3266,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3261,
														"src": "8326:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 3268,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 3267,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 3271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3279,
												"nodeType": "IfStatement",
												"src": "8322:105:11",
												"trueBody": {
													"id": 3278,
													"nodeType": "Block",
													"src": "8353:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3275,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3261,
																		"src": "8410:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3273,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "8374:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3277,
															"nodeType": "RevertStatement",
															"src": "8367:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3282,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3261,
															"src": "8451:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 3280,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 3265,
												"id": 3284,
												"nodeType": "Return",
												"src": "8436:21:11"
											}
										]
									},
									"documentation": {
										"id": 3259,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:11",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "8265:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:11"
									},
									"returnParameters": {
										"id": 3265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "8303:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 3263,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:11"
									},
									"scope": 4632,
									"src": "8246:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3313,
										"nodeType": "Block",
										"src": "8821:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3294,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3289,
														"src": "8835:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 3296,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 3295,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 3299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3307,
												"nodeType": "IfStatement",
												"src": "8831:105:11",
												"trueBody": {
													"id": 3306,
													"nodeType": "Block",
													"src": "8862:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3303,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3289,
																		"src": "8919:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3301,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "8883:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3305,
															"nodeType": "RevertStatement",
															"src": "8876:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3310,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3289,
															"src": "8960:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3308,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 3293,
												"id": 3312,
												"nodeType": "Return",
												"src": "8945:21:11"
											}
										]
									},
									"documentation": {
										"id": 3287,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:11",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "8774:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:11"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "8812:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 3291,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:11"
									},
									"scope": 4632,
									"src": "8755:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3341,
										"nodeType": "Block",
										"src": "9330:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3322,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3317,
														"src": "9344:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3324,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3323,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3335,
												"nodeType": "IfStatement",
												"src": "9340:105:11",
												"trueBody": {
													"id": 3334,
													"nodeType": "Block",
													"src": "9371:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3331,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3317,
																		"src": "9428:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3329,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "9392:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3333,
															"nodeType": "RevertStatement",
															"src": "9385:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3338,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "9469:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3336,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3321,
												"id": 3340,
												"nodeType": "Return",
												"src": "9454:21:11"
											}
										]
									},
									"documentation": {
										"id": 3315,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:11",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "9283:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:11"
									},
									"returnParameters": {
										"id": 3321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3342,
												"src": "9321:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3319,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:11"
									},
									"scope": 4632,
									"src": "9264:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3369,
										"nodeType": "Block",
										"src": "9839:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3350,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3345,
														"src": "9853:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3352,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3351,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3363,
												"nodeType": "IfStatement",
												"src": "9849:105:11",
												"trueBody": {
													"id": 3362,
													"nodeType": "Block",
													"src": "9880:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3359,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3345,
																		"src": "9937:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3357,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "9901:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3361,
															"nodeType": "RevertStatement",
															"src": "9894:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3366,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3345,
															"src": "9978:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3364,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3349,
												"id": 3368,
												"nodeType": "Return",
												"src": "9963:21:11"
											}
										]
									},
									"documentation": {
										"id": 3343,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:11",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3370,
												"src": "9792:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:11"
									},
									"returnParameters": {
										"id": 3349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3370,
												"src": "9830:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3347,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:11"
									},
									"scope": 4632,
									"src": "9773:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3397,
										"nodeType": "Block",
										"src": "10348:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3378,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3373,
														"src": "10362:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3380,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3379,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3391,
												"nodeType": "IfStatement",
												"src": "10358:105:11",
												"trueBody": {
													"id": 3390,
													"nodeType": "Block",
													"src": "10389:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3373,
																		"src": "10446:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3385,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "10410:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3389,
															"nodeType": "RevertStatement",
															"src": "10403:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3394,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3373,
															"src": "10487:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3392,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3377,
												"id": 3396,
												"nodeType": "Return",
												"src": "10472:21:11"
											}
										]
									},
									"documentation": {
										"id": 3371,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:11",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3398,
												"src": "10301:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:11"
									},
									"returnParameters": {
										"id": 3377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3398,
												"src": "10339:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3375,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:11"
									},
									"scope": 4632,
									"src": "10282:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3425,
										"nodeType": "Block",
										"src": "10857:152:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3406,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3401,
														"src": "10871:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3408,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3407,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3419,
												"nodeType": "IfStatement",
												"src": "10867:105:11",
												"trueBody": {
													"id": 3418,
													"nodeType": "Block",
													"src": "10898:74:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3415,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3401,
																		"src": "10955:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3413,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "10919:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3417,
															"nodeType": "RevertStatement",
															"src": "10912:49:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3401,
															"src": "10996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3420,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3405,
												"id": 3424,
												"nodeType": "Return",
												"src": "10981:21:11"
											}
										]
									},
									"documentation": {
										"id": 3399,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:11",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3401,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "10810:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:11"
									},
									"returnParameters": {
										"id": 3405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3426,
												"src": "10848:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3403,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:11"
									},
									"scope": 4632,
									"src": "10791:218:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3453,
										"nodeType": "Block",
										"src": "11360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3434,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3429,
														"src": "11374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3436,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3435,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3447,
												"nodeType": "IfStatement",
												"src": "11370:103:11",
												"trueBody": {
													"id": 3446,
													"nodeType": "Block",
													"src": "11400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3443,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3429,
																		"src": "11456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3441,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "11421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3445,
															"nodeType": "RevertStatement",
															"src": "11414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3450,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "11496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3448,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3433,
												"id": 3452,
												"nodeType": "Return",
												"src": "11482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3427,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:11",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "11314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:11"
									},
									"returnParameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3454,
												"src": "11352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3431,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:11"
									},
									"scope": 4632,
									"src": "11296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3481,
										"nodeType": "Block",
										"src": "11860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3462,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3457,
														"src": "11874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3464,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3463,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3475,
												"nodeType": "IfStatement",
												"src": "11870:103:11",
												"trueBody": {
													"id": 3474,
													"nodeType": "Block",
													"src": "11900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3471,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3457,
																		"src": "11956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3469,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "11921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3473,
															"nodeType": "RevertStatement",
															"src": "11914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3478,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3457,
															"src": "11996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3476,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3461,
												"id": 3480,
												"nodeType": "Return",
												"src": "11982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3455,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:11",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "11814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:11"
									},
									"returnParameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "11852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3459,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:11"
									},
									"scope": 4632,
									"src": "11796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3509,
										"nodeType": "Block",
										"src": "12360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3490,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3485,
														"src": "12374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3492,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3491,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3503,
												"nodeType": "IfStatement",
												"src": "12370:103:11",
												"trueBody": {
													"id": 3502,
													"nodeType": "Block",
													"src": "12400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3499,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3485,
																		"src": "12456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3497,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "12421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3501,
															"nodeType": "RevertStatement",
															"src": "12414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3485,
															"src": "12496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3504,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3489,
												"id": 3508,
												"nodeType": "Return",
												"src": "12482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3483,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:11",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "12314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:11"
									},
									"returnParameters": {
										"id": 3489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3510,
												"src": "12352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3487,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:11"
									},
									"scope": 4632,
									"src": "12296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3537,
										"nodeType": "Block",
										"src": "12860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3518,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "12874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3520,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3519,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3531,
												"nodeType": "IfStatement",
												"src": "12870:103:11",
												"trueBody": {
													"id": 3530,
													"nodeType": "Block",
													"src": "12900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3527,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3513,
																		"src": "12956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3525,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "12921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3529,
															"nodeType": "RevertStatement",
															"src": "12914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3534,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3513,
															"src": "12996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3532,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3517,
												"id": 3536,
												"nodeType": "Return",
												"src": "12982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3511,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:11",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3538,
												"src": "12814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:11"
									},
									"returnParameters": {
										"id": 3517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3538,
												"src": "12852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3515,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:11"
									},
									"scope": 4632,
									"src": "12796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3565,
										"nodeType": "Block",
										"src": "13360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3546,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3541,
														"src": "13374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3548,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3547,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3559,
												"nodeType": "IfStatement",
												"src": "13370:103:11",
												"trueBody": {
													"id": 3558,
													"nodeType": "Block",
													"src": "13400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3555,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3541,
																		"src": "13456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3553,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "13421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3557,
															"nodeType": "RevertStatement",
															"src": "13414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3541,
															"src": "13496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3560,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3545,
												"id": 3564,
												"nodeType": "Return",
												"src": "13482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3539,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:11",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "13314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:11"
									},
									"returnParameters": {
										"id": 3545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3566,
												"src": "13352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3543,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:11"
									},
									"scope": 4632,
									"src": "13296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3593,
										"nodeType": "Block",
										"src": "13860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3574,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3569,
														"src": "13874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3576,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3575,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3587,
												"nodeType": "IfStatement",
												"src": "13870:103:11",
												"trueBody": {
													"id": 3586,
													"nodeType": "Block",
													"src": "13900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3583,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3569,
																		"src": "13956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3581,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "13921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3585,
															"nodeType": "RevertStatement",
															"src": "13914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3569,
															"src": "13996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3588,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3573,
												"id": 3592,
												"nodeType": "Return",
												"src": "13982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3567,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:11",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "13814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:11"
									},
									"returnParameters": {
										"id": 3573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3594,
												"src": "13852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3571,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:11"
									},
									"scope": 4632,
									"src": "13796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3621,
										"nodeType": "Block",
										"src": "14360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3602,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3597,
														"src": "14374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3604,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3603,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3615,
												"nodeType": "IfStatement",
												"src": "14370:103:11",
												"trueBody": {
													"id": 3614,
													"nodeType": "Block",
													"src": "14400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3611,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3597,
																		"src": "14456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3609,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3613,
															"nodeType": "RevertStatement",
															"src": "14414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3618,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3597,
															"src": "14496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3616,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3601,
												"id": 3620,
												"nodeType": "Return",
												"src": "14482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3595,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:11",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3622,
												"src": "14314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:11"
									},
									"returnParameters": {
										"id": 3601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3622,
												"src": "14352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3599,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:11"
									},
									"scope": 4632,
									"src": "14296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3649,
										"nodeType": "Block",
										"src": "14860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3630,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3625,
														"src": "14874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3632,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3631,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3643,
												"nodeType": "IfStatement",
												"src": "14870:103:11",
												"trueBody": {
													"id": 3642,
													"nodeType": "Block",
													"src": "14900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3639,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3625,
																		"src": "14956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3637,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3641,
															"nodeType": "RevertStatement",
															"src": "14914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3646,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3625,
															"src": "14996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3644,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3629,
												"id": 3648,
												"nodeType": "Return",
												"src": "14982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3623,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:11",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "14814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:11"
									},
									"returnParameters": {
										"id": 3629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "14852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3627,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:11"
									},
									"scope": 4632,
									"src": "14796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3677,
										"nodeType": "Block",
										"src": "15360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3658,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3653,
														"src": "15374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3660,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3659,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3671,
												"nodeType": "IfStatement",
												"src": "15370:103:11",
												"trueBody": {
													"id": 3670,
													"nodeType": "Block",
													"src": "15400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3667,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3653,
																		"src": "15456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3665,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "15421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3669,
															"nodeType": "RevertStatement",
															"src": "15414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3674,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3653,
															"src": "15496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3672,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3657,
												"id": 3676,
												"nodeType": "Return",
												"src": "15482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3651,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:11",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "15314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:11"
									},
									"returnParameters": {
										"id": 3657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3678,
												"src": "15352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3655,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:11"
									},
									"scope": 4632,
									"src": "15296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3705,
										"nodeType": "Block",
										"src": "15860:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3686,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3681,
														"src": "15874:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3688,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3687,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3699,
												"nodeType": "IfStatement",
												"src": "15870:103:11",
												"trueBody": {
													"id": 3698,
													"nodeType": "Block",
													"src": "15900:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3681,
																		"src": "15956:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3693,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "15921:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3697,
															"nodeType": "RevertStatement",
															"src": "15914:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3702,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3681,
															"src": "15996:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3700,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3685,
												"id": 3704,
												"nodeType": "Return",
												"src": "15982:20:11"
											}
										]
									},
									"documentation": {
										"id": 3679,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:11",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3706,
												"src": "15814:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:11"
									},
									"returnParameters": {
										"id": 3685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3706,
												"src": "15852:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3683,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:11"
									},
									"scope": 4632,
									"src": "15796:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3733,
										"nodeType": "Block",
										"src": "16360:149:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3714,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3709,
														"src": "16374:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3716,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3715,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3727,
												"nodeType": "IfStatement",
												"src": "16370:103:11",
												"trueBody": {
													"id": 3726,
													"nodeType": "Block",
													"src": "16400:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3723,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3709,
																		"src": "16456:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3721,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "16421:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3725,
															"nodeType": "RevertStatement",
															"src": "16414:48:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3730,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3709,
															"src": "16496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3728,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 3731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3713,
												"id": 3732,
												"nodeType": "Return",
												"src": "16482:20:11"
											}
										]
									},
									"documentation": {
										"id": 3707,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:11",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3734,
												"src": "16314:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:11"
									},
									"returnParameters": {
										"id": 3713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3734,
												"src": "16352:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3711,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:11"
									},
									"scope": 4632,
									"src": "16296:213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3761,
										"nodeType": "Block",
										"src": "16854:146:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3742,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3737,
														"src": "16868:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3744,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3743,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3755,
												"nodeType": "IfStatement",
												"src": "16864:101:11",
												"trueBody": {
													"id": 3754,
													"nodeType": "Block",
													"src": "16893:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3751,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3737,
																		"src": "16948:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3749,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "16914:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3753,
															"nodeType": "RevertStatement",
															"src": "16907:47:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3758,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3737,
															"src": "16987:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3756,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:11",
															"typeDescriptions": {}
														}
													},
													"id": 3759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3741,
												"id": 3760,
												"nodeType": "Return",
												"src": "16974:19:11"
											}
										]
									},
									"documentation": {
										"id": 3735,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:11",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3737,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "16809:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:11"
									},
									"returnParameters": {
										"id": 3741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "16847:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3739,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:11"
									},
									"scope": 4632,
									"src": "16792:208:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3784,
										"nodeType": "Block",
										"src": "17236:128:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3770,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3765,
														"src": "17250:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3778,
												"nodeType": "IfStatement",
												"src": "17246:81:11",
												"trueBody": {
													"id": 3777,
													"nodeType": "Block",
													"src": "17261:66:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3774,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3765,
																		"src": "17310:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3773,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2882,
																	"src": "17282:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3776,
															"nodeType": "RevertStatement",
															"src": "17275:41:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3781,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3765,
															"src": "17351:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3769,
												"id": 3783,
												"nodeType": "Return",
												"src": "17336:21:11"
											}
										]
									},
									"documentation": {
										"id": 3763,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:11",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3785,
												"src": "17190:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3764,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:11"
									},
									"returnParameters": {
										"id": 3769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3785,
												"src": "17227:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:11"
									},
									"scope": 4632,
									"src": "17171:193:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3810,
										"nodeType": "Block",
										"src": "17761:150:11",
										"statements": [
											{
												"expression": {
													"id": 3798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3793,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3791,
														"src": "17771:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3796,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3788,
																"src": "17791:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3794,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3799,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3800,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3791,
														"src": "17811:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3801,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3788,
														"src": "17825:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3809,
												"nodeType": "IfStatement",
												"src": "17807:98:11",
												"trueBody": {
													"id": 3808,
													"nodeType": "Block",
													"src": "17832:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3805,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3788,
																		"src": "17888:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3803,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "17853:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3807,
															"nodeType": "RevertStatement",
															"src": "17846:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3786,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:11",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3788,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3811,
												"src": "17705:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3787,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:11"
									},
									"returnParameters": {
										"id": 3792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3791,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3811,
												"src": "17742:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3790,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:11"
									},
									"scope": 4632,
									"src": "17687:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3836,
										"nodeType": "Block",
										"src": "18308:150:11",
										"statements": [
											{
												"expression": {
													"id": 3824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3819,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3817,
														"src": "18318:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3822,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3814,
																"src": "18338:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3820,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3823,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3825,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3826,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3817,
														"src": "18358:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3814,
														"src": "18372:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3835,
												"nodeType": "IfStatement",
												"src": "18354:98:11",
												"trueBody": {
													"id": 3834,
													"nodeType": "Block",
													"src": "18379:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3831,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3814,
																		"src": "18435:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3829,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "18400:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3833,
															"nodeType": "RevertStatement",
															"src": "18393:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3812,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:11",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3837,
												"src": "18252:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3813,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:11"
									},
									"returnParameters": {
										"id": 3818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3817,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3837,
												"src": "18289:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3816,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:11"
									},
									"scope": 4632,
									"src": "18234:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3862,
										"nodeType": "Block",
										"src": "18855:150:11",
										"statements": [
											{
												"expression": {
													"id": 3850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3845,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3843,
														"src": "18865:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3848,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3840,
																"src": "18885:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3846,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3851,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3852,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3843,
														"src": "18905:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3853,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3840,
														"src": "18919:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3861,
												"nodeType": "IfStatement",
												"src": "18901:98:11",
												"trueBody": {
													"id": 3860,
													"nodeType": "Block",
													"src": "18926:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3857,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3840,
																		"src": "18982:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3855,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "18947:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3859,
															"nodeType": "RevertStatement",
															"src": "18940:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3838,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:11",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3840,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3863,
												"src": "18799:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3839,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:11"
									},
									"returnParameters": {
										"id": 3844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3843,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3863,
												"src": "18836:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3842,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:11"
									},
									"scope": 4632,
									"src": "18781:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3888,
										"nodeType": "Block",
										"src": "19402:150:11",
										"statements": [
											{
												"expression": {
													"id": 3876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3871,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3869,
														"src": "19412:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3874,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3866,
																"src": "19432:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3872,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3877,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3878,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3869,
														"src": "19452:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3879,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3866,
														"src": "19466:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3887,
												"nodeType": "IfStatement",
												"src": "19448:98:11",
												"trueBody": {
													"id": 3886,
													"nodeType": "Block",
													"src": "19473:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3883,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3866,
																		"src": "19529:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3881,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "19494:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3885,
															"nodeType": "RevertStatement",
															"src": "19487:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3864,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:11",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3889,
												"src": "19346:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3865,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:11"
									},
									"returnParameters": {
										"id": 3870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3869,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3889,
												"src": "19383:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3868,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:11"
									},
									"scope": 4632,
									"src": "19328:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3914,
										"nodeType": "Block",
										"src": "19949:150:11",
										"statements": [
											{
												"expression": {
													"id": 3902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3897,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3895,
														"src": "19959:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3900,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3892,
																"src": "19979:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3898,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3903,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3904,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3895,
														"src": "19999:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3905,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3892,
														"src": "20013:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3913,
												"nodeType": "IfStatement",
												"src": "19995:98:11",
												"trueBody": {
													"id": 3912,
													"nodeType": "Block",
													"src": "20020:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3909,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3892,
																		"src": "20076:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3907,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "20041:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3911,
															"nodeType": "RevertStatement",
															"src": "20034:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3890,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:11",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3915,
												"src": "19893:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3891,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:11"
									},
									"returnParameters": {
										"id": 3896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3895,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3915,
												"src": "19930:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3894,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:11"
									},
									"scope": 4632,
									"src": "19875:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3940,
										"nodeType": "Block",
										"src": "20496:150:11",
										"statements": [
											{
												"expression": {
													"id": 3928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3923,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3921,
														"src": "20506:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3926,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3918,
																"src": "20526:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3924,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3929,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3930,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3921,
														"src": "20546:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3931,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3918,
														"src": "20560:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3939,
												"nodeType": "IfStatement",
												"src": "20542:98:11",
												"trueBody": {
													"id": 3938,
													"nodeType": "Block",
													"src": "20567:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3935,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3918,
																		"src": "20623:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3933,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "20588:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3937,
															"nodeType": "RevertStatement",
															"src": "20581:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3916,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:11",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3941,
												"src": "20440:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3917,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:11"
									},
									"returnParameters": {
										"id": 3922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3921,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3941,
												"src": "20477:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3920,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:11"
									},
									"scope": 4632,
									"src": "20422:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3966,
										"nodeType": "Block",
										"src": "21043:150:11",
										"statements": [
											{
												"expression": {
													"id": 3954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3949,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3947,
														"src": "21053:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3952,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3944,
																"src": "21073:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3950,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3955,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3956,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3947,
														"src": "21093:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3957,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3944,
														"src": "21107:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3965,
												"nodeType": "IfStatement",
												"src": "21089:98:11",
												"trueBody": {
													"id": 3964,
													"nodeType": "Block",
													"src": "21114:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3961,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3944,
																		"src": "21170:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3959,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "21135:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3963,
															"nodeType": "RevertStatement",
															"src": "21128:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3942,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:11",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3967,
												"src": "20987:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3943,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:11"
									},
									"returnParameters": {
										"id": 3948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3947,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3967,
												"src": "21024:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3946,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:11"
									},
									"scope": 4632,
									"src": "20969:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3992,
										"nodeType": "Block",
										"src": "21590:150:11",
										"statements": [
											{
												"expression": {
													"id": 3980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3975,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3973,
														"src": "21600:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3978,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3970,
																"src": "21620:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3976,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 3979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3981,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3982,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3973,
														"src": "21640:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3983,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3970,
														"src": "21654:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3991,
												"nodeType": "IfStatement",
												"src": "21636:98:11",
												"trueBody": {
													"id": 3990,
													"nodeType": "Block",
													"src": "21661:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3987,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3970,
																		"src": "21717:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3985,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "21682:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3989,
															"nodeType": "RevertStatement",
															"src": "21675:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3968,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:11",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3970,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "21534:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3969,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:11"
									},
									"returnParameters": {
										"id": 3974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3973,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3993,
												"src": "21571:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3972,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:11"
									},
									"scope": 4632,
									"src": "21516:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4018,
										"nodeType": "Block",
										"src": "22137:150:11",
										"statements": [
											{
												"expression": {
													"id": 4006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4001,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3999,
														"src": "22147:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4004,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3996,
																"src": "22167:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 4002,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 4007,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4008,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3999,
														"src": "22187:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4009,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3996,
														"src": "22201:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4017,
												"nodeType": "IfStatement",
												"src": "22183:98:11",
												"trueBody": {
													"id": 4016,
													"nodeType": "Block",
													"src": "22208:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 4012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 4013,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3996,
																		"src": "22264:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4011,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "22229:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4015,
															"nodeType": "RevertStatement",
															"src": "22222:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3994,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:11",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 4019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4019,
												"src": "22081:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3995,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:11"
									},
									"returnParameters": {
										"id": 4000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3999,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4019,
												"src": "22118:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3998,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:11"
									},
									"scope": 4632,
									"src": "22063:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4044,
										"nodeType": "Block",
										"src": "22684:150:11",
										"statements": [
											{
												"expression": {
													"id": 4032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4027,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4025,
														"src": "22694:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4030,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4022,
																"src": "22714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 4028,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 4033,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4034,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4025,
														"src": "22734:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4035,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4022,
														"src": "22748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4043,
												"nodeType": "IfStatement",
												"src": "22730:98:11",
												"trueBody": {
													"id": 4042,
													"nodeType": "Block",
													"src": "22755:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 4038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 4039,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4022,
																		"src": "22811:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4037,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "22776:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4041,
															"nodeType": "RevertStatement",
															"src": "22769:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4020,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:11",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 4045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4045,
												"src": "22628:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4021,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:11"
									},
									"returnParameters": {
										"id": 4026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4025,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4045,
												"src": "22665:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 4024,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:11"
									},
									"scope": 4632,
									"src": "22610:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4070,
										"nodeType": "Block",
										"src": "23231:150:11",
										"statements": [
											{
												"expression": {
													"id": 4058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4053,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4051,
														"src": "23241:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4056,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4048,
																"src": "23261:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 4054,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 4059,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4060,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4051,
														"src": "23281:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4061,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4048,
														"src": "23295:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4069,
												"nodeType": "IfStatement",
												"src": "23277:98:11",
												"trueBody": {
													"id": 4068,
													"nodeType": "Block",
													"src": "23302:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 4064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 4065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4048,
																		"src": "23358:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4063,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "23323:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4067,
															"nodeType": "RevertStatement",
															"src": "23316:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4046,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:11",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 4071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4071,
												"src": "23175:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4047,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:11"
									},
									"returnParameters": {
										"id": 4052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4051,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4071,
												"src": "23212:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 4050,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:11"
									},
									"scope": 4632,
									"src": "23157:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4096,
										"nodeType": "Block",
										"src": "23778:150:11",
										"statements": [
											{
												"expression": {
													"id": 4084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4079,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4077,
														"src": "23788:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4082,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4074,
																"src": "23808:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 4080,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 4085,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4086,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4077,
														"src": "23828:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4087,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4074,
														"src": "23842:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4095,
												"nodeType": "IfStatement",
												"src": "23824:98:11",
												"trueBody": {
													"id": 4094,
													"nodeType": "Block",
													"src": "23849:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 4090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 4091,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4074,
																		"src": "23905:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4089,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "23870:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4093,
															"nodeType": "RevertStatement",
															"src": "23863:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4072,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:11",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 4097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4097,
												"src": "23722:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4073,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:11"
									},
									"returnParameters": {
										"id": 4078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4077,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4097,
												"src": "23759:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 4076,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:11"
									},
									"scope": 4632,
									"src": "23704:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4122,
										"nodeType": "Block",
										"src": "24325:150:11",
										"statements": [
											{
												"expression": {
													"id": 4110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4105,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4103,
														"src": "24335:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4108,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4100,
																"src": "24355:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 4106,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 4111,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4112,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4103,
														"src": "24375:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4113,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4100,
														"src": "24389:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4121,
												"nodeType": "IfStatement",
												"src": "24371:98:11",
												"trueBody": {
													"id": 4120,
													"nodeType": "Block",
													"src": "24396:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 4116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 4117,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4100,
																		"src": "24452:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4115,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "24417:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4119,
															"nodeType": "RevertStatement",
															"src": "24410:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4098,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:11",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4100,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4123,
												"src": "24269:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4099,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:11"
									},
									"returnParameters": {
										"id": 4104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4103,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4123,
												"src": "24306:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 4102,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:11"
									},
									"scope": 4632,
									"src": "24251:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4148,
										"nodeType": "Block",
										"src": "24872:150:11",
										"statements": [
											{
												"expression": {
													"id": 4136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4131,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4129,
														"src": "24882:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4134,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4126,
																"src": "24902:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 4132,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 4137,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4138,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4129,
														"src": "24922:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4139,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4126,
														"src": "24936:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4147,
												"nodeType": "IfStatement",
												"src": "24918:98:11",
												"trueBody": {
													"id": 4146,
													"nodeType": "Block",
													"src": "24943:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4143,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4126,
																		"src": "24999:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4141,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "24964:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4145,
															"nodeType": "RevertStatement",
															"src": "24957:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4124,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:11",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4149,
												"src": "24816:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4125,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:11"
									},
									"returnParameters": {
										"id": 4130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4129,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4149,
												"src": "24853:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 4128,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:11"
									},
									"scope": 4632,
									"src": "24798:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4174,
										"nodeType": "Block",
										"src": "25419:150:11",
										"statements": [
											{
												"expression": {
													"id": 4162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4157,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4155,
														"src": "25429:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4160,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4152,
																"src": "25449:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 4158,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 4163,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4164,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4155,
														"src": "25469:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4165,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4152,
														"src": "25483:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4173,
												"nodeType": "IfStatement",
												"src": "25465:98:11",
												"trueBody": {
													"id": 4172,
													"nodeType": "Block",
													"src": "25490:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4169,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4152,
																		"src": "25546:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4167,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "25511:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4171,
															"nodeType": "RevertStatement",
															"src": "25504:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4150,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:11",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4175,
												"src": "25363:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:11"
									},
									"returnParameters": {
										"id": 4156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4155,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4175,
												"src": "25400:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 4154,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:11"
									},
									"scope": 4632,
									"src": "25345:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4200,
										"nodeType": "Block",
										"src": "25966:150:11",
										"statements": [
											{
												"expression": {
													"id": 4188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4183,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4181,
														"src": "25976:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4186,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4178,
																"src": "25996:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 4184,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4189,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4190,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4181,
														"src": "26016:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4191,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4178,
														"src": "26030:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4199,
												"nodeType": "IfStatement",
												"src": "26012:98:11",
												"trueBody": {
													"id": 4198,
													"nodeType": "Block",
													"src": "26037:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4195,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4178,
																		"src": "26093:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4193,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "26058:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4197,
															"nodeType": "RevertStatement",
															"src": "26051:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4176,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:11",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4178,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4201,
												"src": "25910:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4177,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:11"
									},
									"returnParameters": {
										"id": 4182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4181,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4201,
												"src": "25947:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4180,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:11"
									},
									"scope": 4632,
									"src": "25892:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4226,
										"nodeType": "Block",
										"src": "26513:150:11",
										"statements": [
											{
												"expression": {
													"id": 4214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4209,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4207,
														"src": "26523:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4212,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4204,
																"src": "26543:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 4210,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 4215,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4216,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4207,
														"src": "26563:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4217,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4204,
														"src": "26577:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4225,
												"nodeType": "IfStatement",
												"src": "26559:98:11",
												"trueBody": {
													"id": 4224,
													"nodeType": "Block",
													"src": "26584:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4221,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4204,
																		"src": "26640:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4219,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "26605:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4223,
															"nodeType": "RevertStatement",
															"src": "26598:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4202,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:11",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4204,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4227,
												"src": "26457:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4203,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:11"
									},
									"returnParameters": {
										"id": 4208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4207,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4227,
												"src": "26494:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 4206,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:11"
									},
									"scope": 4632,
									"src": "26439:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4252,
										"nodeType": "Block",
										"src": "27060:150:11",
										"statements": [
											{
												"expression": {
													"id": 4240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4235,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4233,
														"src": "27070:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4238,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4230,
																"src": "27090:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 4236,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 4241,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4242,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4233,
														"src": "27110:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4243,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4230,
														"src": "27124:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4251,
												"nodeType": "IfStatement",
												"src": "27106:98:11",
												"trueBody": {
													"id": 4250,
													"nodeType": "Block",
													"src": "27131:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4247,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4230,
																		"src": "27187:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4245,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "27152:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4249,
															"nodeType": "RevertStatement",
															"src": "27145:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4228,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:11",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4253,
												"src": "27004:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4229,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:11"
									},
									"returnParameters": {
										"id": 4234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4233,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4253,
												"src": "27041:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 4232,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:11"
									},
									"scope": 4632,
									"src": "26986:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4278,
										"nodeType": "Block",
										"src": "27607:150:11",
										"statements": [
											{
												"expression": {
													"id": 4266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4261,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4259,
														"src": "27617:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4264,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4256,
																"src": "27637:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 4262,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 4265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 4267,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4268,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4259,
														"src": "27657:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4269,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4256,
														"src": "27671:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4277,
												"nodeType": "IfStatement",
												"src": "27653:98:11",
												"trueBody": {
													"id": 4276,
													"nodeType": "Block",
													"src": "27678:73:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4273,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4256,
																		"src": "27734:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4271,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "27699:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4275,
															"nodeType": "RevertStatement",
															"src": "27692:48:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4254,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:11",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4279,
												"src": "27551:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4255,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:11"
									},
									"returnParameters": {
										"id": 4260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4259,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4279,
												"src": "27588:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 4258,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:11"
									},
									"scope": 4632,
									"src": "27533:224:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4304,
										"nodeType": "Block",
										"src": "28147:148:11",
										"statements": [
											{
												"expression": {
													"id": 4292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4287,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4285,
														"src": "28157:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4290,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4282,
																"src": "28176:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 4288,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 4293,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4294,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4285,
														"src": "28196:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4295,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4282,
														"src": "28210:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4303,
												"nodeType": "IfStatement",
												"src": "28192:97:11",
												"trueBody": {
													"id": 4302,
													"nodeType": "Block",
													"src": "28217:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4299,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4282,
																		"src": "28272:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4297,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "28238:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4301,
															"nodeType": "RevertStatement",
															"src": "28231:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4280,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:11",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4305,
												"src": "28092:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4281,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:11"
									},
									"returnParameters": {
										"id": 4286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4285,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4305,
												"src": "28129:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 4284,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:11"
									},
									"scope": 4632,
									"src": "28075:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4330,
										"nodeType": "Block",
										"src": "28685:148:11",
										"statements": [
											{
												"expression": {
													"id": 4318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4313,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4311,
														"src": "28695:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4316,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4308,
																"src": "28714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4314,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4319,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4320,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4311,
														"src": "28734:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4321,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4308,
														"src": "28748:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4329,
												"nodeType": "IfStatement",
												"src": "28730:97:11",
												"trueBody": {
													"id": 4328,
													"nodeType": "Block",
													"src": "28755:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4325,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4308,
																		"src": "28810:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4323,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "28776:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4327,
															"nodeType": "RevertStatement",
															"src": "28769:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4306,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:11",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4331,
												"src": "28630:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4307,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:11"
									},
									"returnParameters": {
										"id": 4312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4311,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4331,
												"src": "28667:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4310,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:11"
									},
									"scope": 4632,
									"src": "28613:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4356,
										"nodeType": "Block",
										"src": "29223:148:11",
										"statements": [
											{
												"expression": {
													"id": 4344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4339,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4337,
														"src": "29233:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4334,
																"src": "29252:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4340,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4345,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4346,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4337,
														"src": "29272:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4347,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4334,
														"src": "29286:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4355,
												"nodeType": "IfStatement",
												"src": "29268:97:11",
												"trueBody": {
													"id": 4354,
													"nodeType": "Block",
													"src": "29293:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4351,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4334,
																		"src": "29348:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4349,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "29314:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4353,
															"nodeType": "RevertStatement",
															"src": "29307:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4332,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:11",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4357,
												"src": "29168:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:11"
									},
									"returnParameters": {
										"id": 4338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4337,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4357,
												"src": "29205:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4336,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:11"
									},
									"scope": 4632,
									"src": "29151:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4382,
										"nodeType": "Block",
										"src": "29761:148:11",
										"statements": [
											{
												"expression": {
													"id": 4370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4365,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4363,
														"src": "29771:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4360,
																"src": "29790:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4366,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4371,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4372,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4363,
														"src": "29810:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4373,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4360,
														"src": "29824:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4381,
												"nodeType": "IfStatement",
												"src": "29806:97:11",
												"trueBody": {
													"id": 4380,
													"nodeType": "Block",
													"src": "29831:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4377,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4360,
																		"src": "29886:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4375,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "29852:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4379,
															"nodeType": "RevertStatement",
															"src": "29845:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4358,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:11",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4360,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4383,
												"src": "29706:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4359,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:11"
									},
									"returnParameters": {
										"id": 4364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4363,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4383,
												"src": "29743:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4362,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:11"
									},
									"scope": 4632,
									"src": "29689:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4408,
										"nodeType": "Block",
										"src": "30299:148:11",
										"statements": [
											{
												"expression": {
													"id": 4396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4391,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4389,
														"src": "30309:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4394,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4386,
																"src": "30328:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4392,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4397,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4398,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4389,
														"src": "30348:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4399,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4386,
														"src": "30362:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4407,
												"nodeType": "IfStatement",
												"src": "30344:97:11",
												"trueBody": {
													"id": 4406,
													"nodeType": "Block",
													"src": "30369:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4403,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4386,
																		"src": "30424:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4401,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "30390:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4405,
															"nodeType": "RevertStatement",
															"src": "30383:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4384,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:11",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4409,
												"src": "30244:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4385,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:11"
									},
									"returnParameters": {
										"id": 4390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4389,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4409,
												"src": "30281:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4388,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:11"
									},
									"scope": 4632,
									"src": "30227:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4434,
										"nodeType": "Block",
										"src": "30837:148:11",
										"statements": [
											{
												"expression": {
													"id": 4422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4417,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4415,
														"src": "30847:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4412,
																"src": "30866:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4418,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4423,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4424,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4415,
														"src": "30886:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4425,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4412,
														"src": "30900:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4433,
												"nodeType": "IfStatement",
												"src": "30882:97:11",
												"trueBody": {
													"id": 4432,
													"nodeType": "Block",
													"src": "30907:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4429,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4412,
																		"src": "30962:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4427,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "30928:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4431,
															"nodeType": "RevertStatement",
															"src": "30921:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4410,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:11",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4435,
												"src": "30782:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4411,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:11"
									},
									"returnParameters": {
										"id": 4416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4415,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4435,
												"src": "30819:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4414,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:11"
									},
									"scope": 4632,
									"src": "30765:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4460,
										"nodeType": "Block",
										"src": "31375:148:11",
										"statements": [
											{
												"expression": {
													"id": 4448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4443,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4441,
														"src": "31385:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4446,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4438,
																"src": "31404:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4444,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4449,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4450,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4441,
														"src": "31424:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4451,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4438,
														"src": "31438:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4459,
												"nodeType": "IfStatement",
												"src": "31420:97:11",
												"trueBody": {
													"id": 4458,
													"nodeType": "Block",
													"src": "31445:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4455,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4438,
																		"src": "31500:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4453,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "31466:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4457,
															"nodeType": "RevertStatement",
															"src": "31459:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4436,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:11",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4461,
												"src": "31320:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4437,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:11"
									},
									"returnParameters": {
										"id": 4442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4441,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4461,
												"src": "31357:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4440,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:11"
									},
									"scope": 4632,
									"src": "31303:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4486,
										"nodeType": "Block",
										"src": "31913:148:11",
										"statements": [
											{
												"expression": {
													"id": 4474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4469,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4467,
														"src": "31923:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4472,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4464,
																"src": "31942:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4470,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4475,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4476,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4467,
														"src": "31962:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4477,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4464,
														"src": "31976:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4485,
												"nodeType": "IfStatement",
												"src": "31958:97:11",
												"trueBody": {
													"id": 4484,
													"nodeType": "Block",
													"src": "31983:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4481,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4464,
																		"src": "32038:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4479,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "32004:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4483,
															"nodeType": "RevertStatement",
															"src": "31997:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4462,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:11",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4487,
												"src": "31858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4463,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:11"
									},
									"returnParameters": {
										"id": 4468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4467,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4487,
												"src": "31895:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4466,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:11"
									},
									"scope": 4632,
									"src": "31841:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4512,
										"nodeType": "Block",
										"src": "32451:148:11",
										"statements": [
											{
												"expression": {
													"id": 4500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4495,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4493,
														"src": "32461:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4498,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4490,
																"src": "32480:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4496,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4501,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4502,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4493,
														"src": "32500:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4503,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4490,
														"src": "32514:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4511,
												"nodeType": "IfStatement",
												"src": "32496:97:11",
												"trueBody": {
													"id": 4510,
													"nodeType": "Block",
													"src": "32521:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4507,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4490,
																		"src": "32576:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4505,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "32542:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4509,
															"nodeType": "RevertStatement",
															"src": "32535:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4488,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:11",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4490,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4513,
												"src": "32396:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4489,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:11"
									},
									"returnParameters": {
										"id": 4494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4493,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4513,
												"src": "32433:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4492,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:11"
									},
									"scope": 4632,
									"src": "32379:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4538,
										"nodeType": "Block",
										"src": "32989:148:11",
										"statements": [
											{
												"expression": {
													"id": 4526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4521,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4519,
														"src": "32999:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4516,
																"src": "33018:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4522,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4527,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4528,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4519,
														"src": "33038:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4529,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4516,
														"src": "33052:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4537,
												"nodeType": "IfStatement",
												"src": "33034:97:11",
												"trueBody": {
													"id": 4536,
													"nodeType": "Block",
													"src": "33059:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4533,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4516,
																		"src": "33114:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4531,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "33080:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4535,
															"nodeType": "RevertStatement",
															"src": "33073:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4514,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:11",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4539,
												"src": "32934:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4515,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:11"
									},
									"returnParameters": {
										"id": 4520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4519,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4539,
												"src": "32971:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4518,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:11"
									},
									"scope": 4632,
									"src": "32917:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4564,
										"nodeType": "Block",
										"src": "33527:148:11",
										"statements": [
											{
												"expression": {
													"id": 4552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4547,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4545,
														"src": "33537:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4550,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4542,
																"src": "33556:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4548,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 4551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4553,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4554,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4545,
														"src": "33576:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4555,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4542,
														"src": "33590:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4563,
												"nodeType": "IfStatement",
												"src": "33572:97:11",
												"trueBody": {
													"id": 4562,
													"nodeType": "Block",
													"src": "33597:72:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4559,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4542,
																		"src": "33652:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4557,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "33618:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4561,
															"nodeType": "RevertStatement",
															"src": "33611:47:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4540,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:11",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4542,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4565,
												"src": "33472:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4541,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:11"
									},
									"returnParameters": {
										"id": 4546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4545,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4565,
												"src": "33509:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4544,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:11"
									},
									"scope": 4632,
									"src": "33455:220:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4590,
										"nodeType": "Block",
										"src": "34058:146:11",
										"statements": [
											{
												"expression": {
													"id": 4578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4573,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4571,
														"src": "34068:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4576,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4568,
																"src": "34086:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4574,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:11",
																"typeDescriptions": {}
															}
														},
														"id": 4577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4579,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4580,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4571,
														"src": "34106:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4581,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4568,
														"src": "34120:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4589,
												"nodeType": "IfStatement",
												"src": "34102:96:11",
												"trueBody": {
													"id": 4588,
													"nodeType": "Block",
													"src": "34127:71:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4585,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4568,
																		"src": "34181:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4583,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2889,
																	"src": "34148:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4587,
															"nodeType": "RevertStatement",
															"src": "34141:46:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4566,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:11",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4591,
												"src": "34004:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4567,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:11"
									},
									"returnParameters": {
										"id": 4572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4571,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4591,
												"src": "34041:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4570,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:11"
									},
									"scope": 4632,
									"src": "33988:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4620,
										"nodeType": "Block",
										"src": "34444:250:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4599,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4594,
														"src": "34557:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4603,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:11",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4602,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:11",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4600,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4614,
												"nodeType": "IfStatement",
												"src": "34553:105:11",
												"trueBody": {
													"id": 4613,
													"nodeType": "Block",
													"src": "34592:66:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4610,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4594,
																		"src": "34641:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4609,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2894,
																	"src": "34613:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4612,
															"nodeType": "RevertStatement",
															"src": "34606:41:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4594,
															"src": "34681:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4615,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 4618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4598,
												"id": 4619,
												"nodeType": "Return",
												"src": "34667:20:11"
											}
										]
									},
									"documentation": {
										"id": 4592,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:11",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4621,
												"src": "34398:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:11"
									},
									"returnParameters": {
										"id": 4598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4621,
												"src": "34436:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4596,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:11"
									},
									"scope": 4632,
									"src": "34380:314:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4630,
										"nodeType": "Block",
										"src": "34853:87:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:11",
													"nodeType": "YulBlock",
													"src": "34888:46:11",
													"statements": [
														{
															"nativeSrc": "34902:22:11",
															"nodeType": "YulAssignment",
															"src": "34902:22:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:11"
																		},
																		"nativeSrc": "34914:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:11"
																},
																"nativeSrc": "34907:17:11",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:11"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:11"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 4624,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:11",
														"valueSize": 1
													},
													{
														"declaration": 4627,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4629,
												"nodeType": "InlineAssembly",
												"src": "34863:71:11"
											}
										]
									},
									"documentation": {
										"id": 4622,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:11",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 4631,
												"src": "34811:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:11"
									},
									"returnParameters": {
										"id": 4628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4627,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 4631,
												"src": "34842:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:11"
									},
									"scope": 4632,
									"src": "34795:145:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4633,
							"src": "769:34173:11",
							"usedErrors": [
								2877,
								2882,
								2889,
								2894
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SafeCast": [
							4632
						],
						"SignedMath": [
							4776
						]
					},
					"id": 4777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 4636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4777,
							"sourceUnit": 4633,
							"src": "135:40:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4635,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4632,
										"src": "143:8:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4637,
								"nodeType": "StructuredDocumentation",
								"src": "177:80:12",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 4776,
							"linearizedBaseContracts": [
								4776
							],
							"name": "SignedMath",
							"nameLocation": "266:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4666,
										"nodeType": "Block",
										"src": "746:215:12",
										"statements": [
											{
												"id": 4665,
												"nodeType": "UncheckedBlock",
												"src": "756:199:12",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4649,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4644,
																"src": "894:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 4661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 4652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4650,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4642,
																						"src": "900:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 4651,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4644,
																						"src": "904:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "900:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 4653,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "899:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 4658,
																							"name": "condition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4640,
																							"src": "932:9:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"expression": {
																							"id": 4656,
																							"name": "SafeCast",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4632,
																							"src": "916:8:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeCast_$4632_$",
																								"typeString": "type(library SafeCast)"
																							}
																						},
																						"id": 4657,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "925:6:12",
																						"memberName": "toUint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 4631,
																						"src": "916:15:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																							"typeString": "function (bool) pure returns (uint256)"
																						}
																					},
																					"id": 4659,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "916:26:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 4655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "909:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 4654,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "909:6:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "909:34:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "899:44:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 4662,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "898:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "894:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 4648,
														"id": 4664,
														"nodeType": "Return",
														"src": "887:57:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4638,
										"nodeType": "StructuredDocumentation",
										"src": "283:374:12",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 4667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "671:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4640,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "684:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 4667,
												"src": "679:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "679:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4642,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "702:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4667,
												"src": "695:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4641,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4644,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "712:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4667,
												"src": "705:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4643,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "705:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "678:36:12"
									},
									"returnParameters": {
										"id": 4648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4667,
												"src": "738:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4646,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "738:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:8:12"
									},
									"scope": 4776,
									"src": "662:299:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4685,
										"nodeType": "Block",
										"src": "1102:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4678,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4670,
																"src": "1127:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 4679,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4672,
																"src": "1131:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1127:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 4681,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4670,
															"src": "1134:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 4682,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4672,
															"src": "1137:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4677,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4667,
														"src": "1119:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 4683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4676,
												"id": 4684,
												"nodeType": "Return",
												"src": "1112:27:12"
											}
										]
									},
									"documentation": {
										"id": 4668,
										"nodeType": "StructuredDocumentation",
										"src": "967:66:12",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 4686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1047:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4670,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1058:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4686,
												"src": "1051:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4669,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4672,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1068:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4686,
												"src": "1061:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4671,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:20:12"
									},
									"returnParameters": {
										"id": 4676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4686,
												"src": "1094:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4674,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:8:12"
									},
									"scope": 4776,
									"src": "1038:108:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4704,
										"nodeType": "Block",
										"src": "1288:44:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4697,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4689,
																"src": "1313:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 4698,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4691,
																"src": "1317:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1313:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 4700,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4689,
															"src": "1320:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 4701,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4691,
															"src": "1323:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 4696,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4667,
														"src": "1305:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (bool,int256,int256) pure returns (int256)"
														}
													},
													"id": 4702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1305:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4695,
												"id": 4703,
												"nodeType": "Return",
												"src": "1298:27:12"
											}
										]
									},
									"documentation": {
										"id": 4687,
										"nodeType": "StructuredDocumentation",
										"src": "1152:67:12",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 4705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1233:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1244:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4705,
												"src": "1237:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1254:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4705,
												"src": "1247:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:20:12"
									},
									"returnParameters": {
										"id": 4695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4705,
												"src": "1280:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1280:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:8:12"
									},
									"scope": 4776,
									"src": "1224:108:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4748,
										"nodeType": "Block",
										"src": "1537:162:12",
										"statements": [
											{
												"assignments": [
													4716
												],
												"declarations": [
													{
														"constant": false,
														"id": 4716,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "1606:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 4748,
														"src": "1599:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 4715,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1599:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4729,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4717,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4708,
																	"src": "1611:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 4718,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4710,
																	"src": "1615:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1611:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4720,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1610:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 4723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4721,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4708,
																				"src": "1622:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 4722,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4710,
																				"src": "1626:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1622:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 4724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1621:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 4725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1632:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1621:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4727,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1620:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1610:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1599:35:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4730,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4716,
														"src": "1651:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 4744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 4735,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4716,
																						"src": "1671:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 4734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1663:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 4733,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1663:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 4736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1663:10:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 4737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1677:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "1663:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1656:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 4731,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1656:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1656:25:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 4742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4740,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4708,
																				"src": "1685:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 4741,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4710,
																				"src": "1689:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1685:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 4743,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1684:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "1656:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 4745,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1655:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1651:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4714,
												"id": 4747,
												"nodeType": "Return",
												"src": "1644:48:12"
											}
										]
									},
									"documentation": {
										"id": 4706,
										"nodeType": "StructuredDocumentation",
										"src": "1338:126:12",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 4749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "1478:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4708,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1493:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4749,
												"src": "1486:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4707,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4710,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4749,
												"src": "1496:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4709,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:20:12"
									},
									"returnParameters": {
										"id": 4714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4749,
												"src": "1529:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4712,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:8:12"
									},
									"scope": 4776,
									"src": "1469:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4774,
										"nodeType": "Block",
										"src": "1843:767:12",
										"statements": [
											{
												"id": 4773,
												"nodeType": "UncheckedBlock",
												"src": "1853:751:12",
												"statements": [
													{
														"assignments": [
															4758
														],
														"declarations": [
															{
																"constant": false,
																"id": 4758,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "2424:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 4773,
																"src": "2417:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 4757,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2417:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 4762,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 4761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4759,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4752,
																"src": "2431:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "323535",
																"id": 4760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2436:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"src": "2431:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2417:22:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 4770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 4767,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 4765,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4752,
																					"src": "2576:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 4766,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4758,
																					"src": "2580:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "2576:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 4768,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2575:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 4769,
																		"name": "mask",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4758,
																		"src": "2588:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "2575:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 4764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2567:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 4763,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2567:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2567:26:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4756,
														"id": 4772,
														"nodeType": "Return",
														"src": "2560:33:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4750,
										"nodeType": "StructuredDocumentation",
										"src": "1705:78:12",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 4775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1797:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4752,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1808:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 4775,
												"src": "1801:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4751,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1800:10:12"
									},
									"returnParameters": {
										"id": 4756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4775,
												"src": "1834:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:9:12"
									},
									"scope": 4776,
									"src": "1788:822:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4777,
							"src": "258:2354:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:2504:12"
				},
				"id": 12
			},
			"smart-contract/hardhat/contracts/ClosedSurveyV4.sol": {
				"ast": {
					"absolutePath": "smart-contract/hardhat/contracts/ClosedSurveyV4.sol",
					"exportedSymbols": {
						"ClosedSurveyV4": [
							5521
						],
						"Context": [
							281
						],
						"ECDSA": [
							1187
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						],
						"MessageHashUtils": [
							1261
						],
						"Ownable": [
							147
						],
						"Pausable": [
							450
						],
						"ReentrancyGuard": [
							519
						],
						"Strings": [
							839
						]
					},
					"id": 5522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5522,
							"sourceUnit": 148,
							"src": "58:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 4780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5522,
							"sourceUnit": 252,
							"src": "111:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 4781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5522,
							"sourceUnit": 520,
							"src": "187:59:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 4782,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5522,
							"sourceUnit": 451,
							"src": "247:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 4783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5522,
							"sourceUnit": 1188,
							"src": "300:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"id": 4784,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5522,
							"sourceUnit": 1262,
							"src": "363:73:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4786,
										"name": "Ownable",
										"nameLocations": [
											"696:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "696:7:13"
									},
									"id": 4787,
									"nodeType": "InheritanceSpecifier",
									"src": "696:7:13"
								},
								{
									"baseName": {
										"id": 4788,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"705:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 519,
										"src": "705:15:13"
									},
									"id": 4789,
									"nodeType": "InheritanceSpecifier",
									"src": "705:15:13"
								},
								{
									"baseName": {
										"id": 4790,
										"name": "Pausable",
										"nameLocations": [
											"722:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 450,
										"src": "722:8:13"
									},
									"id": 4791,
									"nodeType": "InheritanceSpecifier",
									"src": "722:8:13"
								}
							],
							"canonicalName": "ClosedSurveyV4",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4785,
								"nodeType": "StructuredDocumentation",
								"src": "467:201:13",
								"text": " @notice Contract for managing a closed survey system with participant rewards\n @dev Inherits from Ownable for access control, ReentrancyGuard for security, and Pausable for emergency stops"
							},
							"fullyImplemented": true,
							"id": 5521,
							"linearizedBaseContracts": [
								5521,
								450,
								519,
								147,
								281
							],
							"name": "ClosedSurveyV4",
							"nameLocation": "678:14:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4794,
									"libraryName": {
										"id": 4792,
										"name": "ECDSA",
										"nameLocations": [
											"743:5:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "743:5:13"
									},
									"nodeType": "UsingForDirective",
									"src": "737:24:13",
									"typeName": {
										"id": 4793,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 4795,
										"nodeType": "StructuredDocumentation",
										"src": "767:63:13",
										"text": " @notice Reference to the cUSD token contract"
									},
									"functionSelector": "1fccf672",
									"id": 4798,
									"mutability": "immutable",
									"name": "cUSD",
									"nameLocation": "867:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "835:36:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Metadata_$251",
										"typeString": "contract IERC20Metadata"
									},
									"typeName": {
										"id": 4797,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4796,
											"name": "IERC20Metadata",
											"nameLocations": [
												"835:14:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 251,
											"src": "835:14:13"
										},
										"referencedDeclaration": 251,
										"src": "835:14:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Metadata_$251",
											"typeString": "contract IERC20Metadata"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4799,
										"nodeType": "StructuredDocumentation",
										"src": "878:82:13",
										"text": " @notice Mapping to track participants who have received rewards"
									},
									"id": 4803,
									"mutability": "mutable",
									"name": "rewardedParticipants",
									"nameLocation": "998:20:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "965:53:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 4802,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "973:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "965:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4801,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "984:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4804,
										"nodeType": "StructuredDocumentation",
										"src": "1025:94:13",
										"text": " @notice Mapping to track participants who have been screened for the survey"
									},
									"id": 4808,
									"mutability": "mutable",
									"name": "participantsScreenedForSurvey",
									"nameLocation": "1157:29:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1124:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 4807,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4805,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1132:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1124:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4806,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1143:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4809,
										"nodeType": "StructuredDocumentation",
										"src": "1193:96:13",
										"text": " @notice Mapping to track which signatures have been used for claiming rewards"
									},
									"id": 4813,
									"mutability": "mutable",
									"name": "signaturesUsedForClaiming",
									"nameLocation": "1325:25:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1294:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
										"typeString": "mapping(bytes => bool)"
									},
									"typeName": {
										"id": 4812,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4810,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1302:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"nodeType": "Mapping",
										"src": "1294:22:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
											"typeString": "mapping(bytes => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4811,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1311:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4814,
										"nodeType": "StructuredDocumentation",
										"src": "1357:68:13",
										"text": " @notice Amount of cUSD to reward each participant"
									},
									"functionSelector": "7a0abf08",
									"id": 4816,
									"mutability": "mutable",
									"name": "rewardAmountPerParticipantInWei",
									"nameLocation": "1445:31:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1430:46:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1430:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4817,
										"nodeType": "StructuredDocumentation",
										"src": "1483:79:13",
										"text": " @notice Maximum number of participants allowed in the survey"
									},
									"functionSelector": "a6a09811",
									"id": 4819,
									"mutability": "mutable",
									"name": "targetNumberOfParticipants",
									"nameLocation": "1582:26:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1567:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1567:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4820,
										"nodeType": "StructuredDocumentation",
										"src": "1615:84:13",
										"text": " @notice Counter for number of participants who have been rewarded"
									},
									"id": 4822,
									"mutability": "mutable",
									"name": "numberOfRewardedParticipants",
									"nameLocation": "1720:28:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1704:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1704:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4823,
										"nodeType": "StructuredDocumentation",
										"src": "1755:79:13",
										"text": " @notice Counter for number of rewards that have been claimed"
									},
									"id": 4825,
									"mutability": "mutable",
									"name": "numberOfClaimedRewards",
									"nameLocation": "1855:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1839:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1839:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4826,
										"nodeType": "StructuredDocumentation",
										"src": "1884:84:13",
										"text": " @notice Counter for number of participants who have been screened"
									},
									"functionSelector": "4074be40",
									"id": 4828,
									"mutability": "mutable",
									"name": "numberOfScreenedParticipants",
									"nameLocation": "1988:28:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "1973:43:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4827,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1973:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 4829,
										"nodeType": "StructuredDocumentation",
										"src": "2023:79:13",
										"text": " @notice Counter for number of signatures that have been used"
									},
									"functionSelector": "4fc91ba6",
									"id": 4831,
									"mutability": "mutable",
									"name": "numberOfUsedSignatures",
									"nameLocation": "2122:22:13",
									"nodeType": "VariableDeclaration",
									"scope": 5521,
									"src": "2107:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2107:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4832,
										"nodeType": "StructuredDocumentation",
										"src": "2151:151:13",
										"text": " @notice Emitted when a participant completes the screening process\n @param participant The address of the screened participant"
									},
									"eventSelector": "c4ec7a2dc5e72d17666a15570e438638bfc023a7a091df162b669c37198bacb2",
									"id": 4836,
									"name": "ParticipantScreened",
									"nameLocation": "2313:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4834,
												"indexed": false,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "2341:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4836,
												"src": "2333:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2333:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2332:21:13"
									},
									"src": "2307:47:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4837,
										"nodeType": "StructuredDocumentation",
										"src": "2360:214:13",
										"text": " @notice Emitted when a participant successfully claims their reward\n @param participant The address of the rewarded participant\n @param rewardAmount The amount of cUSD rewarded in wei"
									},
									"eventSelector": "8934d7a9692e763e356fd30d84ca5f61a737b35c5ccd5d31d4f140310267b73e",
									"id": 4843,
									"name": "ParticipantRewarded",
									"nameLocation": "2585:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4839,
												"indexed": false,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "2613:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4843,
												"src": "2605:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4841,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "2634:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 4843,
												"src": "2626:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2604:43:13"
									},
									"src": "2579:69:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4844,
										"nodeType": "StructuredDocumentation",
										"src": "2654:209:13",
										"text": " @notice Emitted when a signature is used to claim a reward\n @param signature The signature that was used\n @param participant The address of the participant who used the signature"
									},
									"eventSelector": "97fb84d3f0d20b64a0a8e52541408b0155ba98fea88e66283156f306d04b08b8",
									"id": 4850,
									"name": "SignatureUsed",
									"nameLocation": "2874:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4846,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2894:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 4850,
												"src": "2888:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4845,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2888:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4848,
												"indexed": false,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "2913:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4850,
												"src": "2905:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:38:13"
									},
									"src": "2868:58:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4851,
										"nodeType": "StructuredDocumentation",
										"src": "2932:171:13",
										"text": " @notice Emitted when a participant is marked as having received their reward\n @param participant The address of the participant marked as rewarded"
									},
									"eventSelector": "654c9a027765e6feb862f42d438e9f6948f9ee31113e379f0372b30efc722943",
									"id": 4855,
									"name": "ParticipantMarkedAsRewarded",
									"nameLocation": "3114:27:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4853,
												"indexed": false,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "3150:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4855,
												"src": "3142:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3142:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3141:21:13"
									},
									"src": "3108:55:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4856,
										"nodeType": "StructuredDocumentation",
										"src": "3169:225:13",
										"text": " @notice Emitted when reward funds are withdrawn by the researcher\n @param researcher The address of the researcher who withdrew the funds\n @param rewardAmount The amount of cUSD withdrawn in wei"
									},
									"eventSelector": "2036b9b38b69a2fa490ee702733a29cd2550accc20bc96e786cb9beedc779097",
									"id": 4862,
									"name": "RewardFundsWithdrawn",
									"nameLocation": "3405:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4858,
												"indexed": false,
												"mutability": "mutable",
												"name": "researcher",
												"nameLocation": "3434:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4862,
												"src": "3426:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4860,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "3454:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 4862,
												"src": "3446:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3425:42:13"
									},
									"src": "3399:69:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4863,
										"nodeType": "StructuredDocumentation",
										"src": "3474:239:13",
										"text": " @notice Emitted when the reward amount per participant is updated\n @param oldcUSDRewardAmountPerParticipantInWei The previous reward amount\n @param newcUSDRewardAmountPerParticipantInWei The new reward amount"
									},
									"eventSelector": "f0d37c3ae852021ac329281f604b658691cbfa6b9e9c22909f06b64a8ce87c94",
									"id": 4869,
									"name": "RewardAmountUpdated",
									"nameLocation": "3724:19:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4865,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldcUSDRewardAmountPerParticipantInWei",
												"nameLocation": "3761:38:13",
												"nodeType": "VariableDeclaration",
												"scope": 4869,
												"src": "3753:46:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4867,
												"indexed": false,
												"mutability": "mutable",
												"name": "newcUSDRewardAmountPerParticipantInWei",
												"nameLocation": "3817:38:13",
												"nodeType": "VariableDeclaration",
												"scope": 4869,
												"src": "3809:46:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:118:13"
									},
									"src": "3718:144:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 4870,
										"nodeType": "StructuredDocumentation",
										"src": "3868:221:13",
										"text": " @notice Emitted when the target number of participants is updated\n @param oldTargetNumberOfParticipants The previous target number\n @param newTargetNumberOfParticipants The new target number"
									},
									"eventSelector": "b90f11d36a1f2ec1f3b89ac87ccd1ffab1a49f3e3ca83cfdac21fd99a537cbc1",
									"id": 4876,
									"name": "TargetNumberOfParticipantsUpdated",
									"nameLocation": "4100:33:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4872,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldTargetNumberOfParticipants",
												"nameLocation": "4151:29:13",
												"nodeType": "VariableDeclaration",
												"scope": 4876,
												"src": "4143:37:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4143:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4874,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTargetNumberOfParticipants",
												"nameLocation": "4198:29:13",
												"nodeType": "VariableDeclaration",
												"scope": 4876,
												"src": "4190:37:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4133:100:13"
									},
									"src": "4094:140:13"
								},
								{
									"body": {
										"id": 4898,
										"nodeType": "Block",
										"src": "4818:148:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4889,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4879,
																	"src": "4865:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 4890,
																	"name": "rewardId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4881,
																	"src": "4878:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 4891,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4883,
																	"src": "4888:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 4892,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4885,
																	"src": "4895:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 4888,
																"name": "verifySignature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5182,
																"src": "4849:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,string memory,uint256,bytes memory) view returns (bool)"
																}
															},
															"id": 4893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4849:56:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 4894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4919:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 4887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:120:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4896,
												"nodeType": "ExpressionStatement",
												"src": "4828:120:13"
											},
											{
												"id": 4897,
												"nodeType": "PlaceholderStatement",
												"src": "4958:1:13"
											}
										]
									},
									"documentation": {
										"id": 4877,
										"nodeType": "StructuredDocumentation",
										"src": "4240:414:13",
										"text": " @dev Verifies that the signature provided matches the participant's data and was signed by the contract owner\n @param participant The wallet address of the participant claiming the reward\n @param rewardId Unique identifier for this reward claim\n @param nonce Unique number to prevent relay attacks\n @param signature Cryptographic signature generated by the contract owner"
									},
									"id": 4899,
									"name": "onlyIfGivenSignatureIsValid",
									"nameLocation": "4668:27:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4879,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "4713:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4899,
												"src": "4705:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4881,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "4748:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 4899,
												"src": "4734:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4734:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4883,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4774:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 4899,
												"src": "4766:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4766:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4885,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "4802:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 4899,
												"src": "4789:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4695:122:13"
									},
									"src": "4659:307:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4913,
										"nodeType": "Block",
										"src": "5195:134:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5226:37:13",
															"subExpression": {
																"baseExpression": {
																	"id": 4905,
																	"name": "signaturesUsedForClaiming",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4813,
																	"src": "5227:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
																		"typeString": "mapping(bytes memory => bool)"
																	}
																},
																"id": 4907,
																"indexExpression": {
																	"id": 4906,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4902,
																	"src": "5253:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5227:36:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e617475726520616c72656164792075736564",
															"id": 4909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5277:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8",
																"typeString": "literal_string \"Signature already used\""
															},
															"value": "Signature already used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_37ab88bfd1d48437415af2f04944d7b9d7170799901d28f078d8805c06e675a8",
																"typeString": "literal_string \"Signature already used\""
															}
														],
														"id": 4904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5205:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5205:106:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4911,
												"nodeType": "ExpressionStatement",
												"src": "5205:106:13"
											},
											{
												"id": 4912,
												"nodeType": "PlaceholderStatement",
												"src": "5321:1:13"
											}
										]
									},
									"documentation": {
										"id": 4900,
										"nodeType": "StructuredDocumentation",
										"src": "4972:156:13",
										"text": " @dev Ensures a signature hasn't been used before to prevent replay attacks\n @param signature - The cryptographic signature to check"
									},
									"id": 4914,
									"name": "onlyIfGivenSignatureIsUnused",
									"nameLocation": "5142:28:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4902,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "5184:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 4914,
												"src": "5171:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4901,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5171:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5170:24:13"
									},
									"src": "5133:196:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4928,
										"nodeType": "Block",
										"src": "5528:141:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5559:43:13",
															"subExpression": {
																"baseExpression": {
																	"id": 4920,
																	"name": "participantsScreenedForSurvey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4808,
																	"src": "5560:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 4922,
																"indexExpression": {
																	"id": 4921,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4917,
																	"src": "5590:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5560:42:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920756e73637265656e65642061646472657373",
															"id": 4924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5616:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0375f97ab5e8fa7e98e1a2649faf74aac348ea84fe30ae879b7455ac3cab3a1a",
																"typeString": "literal_string \"Only unscreened address\""
															},
															"value": "Only unscreened address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0375f97ab5e8fa7e98e1a2649faf74aac348ea84fe30ae879b7455ac3cab3a1a",
																"typeString": "literal_string \"Only unscreened address\""
															}
														],
														"id": 4919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5538:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5538:113:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4926,
												"nodeType": "ExpressionStatement",
												"src": "5538:113:13"
											},
											{
												"id": 4927,
												"nodeType": "PlaceholderStatement",
												"src": "5661:1:13"
											}
										]
									},
									"documentation": {
										"id": 4915,
										"nodeType": "StructuredDocumentation",
										"src": "5335:132:13",
										"text": " @dev Ensures participant hasn't been screened yet\n @param participant - Address of the participant to check"
									},
									"id": 4929,
									"name": "onlyUnscreenedParticipant",
									"nameLocation": "5481:25:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4917,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "5515:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4929,
												"src": "5507:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5507:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5506:21:13"
									},
									"src": "5472:197:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4942,
										"nodeType": "Block",
										"src": "5805:99:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 4935,
																"name": "participantsScreenedForSurvey",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4808,
																"src": "5823:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 4937,
															"indexExpression": {
																"id": 4936,
																"name": "participant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4932,
																"src": "5853:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5823:42:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652073637265656e6564",
															"id": 4938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5867:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8ca4b6d1328e36f577811b28f06a3362d1b121141fff96d1ec2415d973f2a3e",
																"typeString": "literal_string \"Must be screened\""
															},
															"value": "Must be screened"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8ca4b6d1328e36f577811b28f06a3362d1b121141fff96d1ec2415d973f2a3e",
																"typeString": "literal_string \"Must be screened\""
															}
														],
														"id": 4934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5815:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5815:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4940,
												"nodeType": "ExpressionStatement",
												"src": "5815:71:13"
											},
											{
												"id": 4941,
												"nodeType": "PlaceholderStatement",
												"src": "5896:1:13"
											}
										]
									},
									"documentation": {
										"id": 4930,
										"nodeType": "StructuredDocumentation",
										"src": "5675:80:13",
										"text": " @dev Throws if called for a [participant] that is unscreened."
									},
									"id": 4943,
									"name": "mustBeScreened",
									"nameLocation": "5769:14:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4932,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "5792:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4943,
												"src": "5784:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:21:13"
									},
									"src": "5760:144:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4957,
										"nodeType": "Block",
										"src": "6049:137:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6080:34:13",
															"subExpression": {
																"baseExpression": {
																	"id": 4949,
																	"name": "rewardedParticipants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4803,
																	"src": "6081:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 4951,
																"indexExpression": {
																	"id": 4950,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4946,
																	"src": "6102:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6081:33:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061727469636970616e7420616c7265616479207265776172646564",
															"id": 4953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6128:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_826d2dd8a9564762fd3468dbe3280b1593a291c391520dd1a6399d1ae4ab85ae",
																"typeString": "literal_string \"Participant already rewarded\""
															},
															"value": "Participant already rewarded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_826d2dd8a9564762fd3468dbe3280b1593a291c391520dd1a6399d1ae4ab85ae",
																"typeString": "literal_string \"Participant already rewarded\""
															}
														],
														"id": 4948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6059:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6059:109:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4955,
												"nodeType": "ExpressionStatement",
												"src": "6059:109:13"
											},
											{
												"id": 4956,
												"nodeType": "PlaceholderStatement",
												"src": "6178:1:13"
											}
										]
									},
									"documentation": {
										"id": 4944,
										"nodeType": "StructuredDocumentation",
										"src": "5910:78:13",
										"text": " @dev Throws if called for a [participant] that is rewarded."
									},
									"id": 4958,
									"name": "onlyUnrewardedParticipant",
									"nameLocation": "6002:25:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4946,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "6036:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4958,
												"src": "6028:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:21:13"
									},
									"src": "5993:193:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4972,
										"nodeType": "Block",
										"src": "6348:83:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4964,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6366:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6370:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6366:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 4966,
																"name": "participant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4961,
																"src": "6380:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6366:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792076616c69642073656e646572",
															"id": 4968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6393:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e1c7c18f0d2dc4858f8c47ddee92da3f67b15c69b268077538bb56715c5b443",
																"typeString": "literal_string \"Only valid sender\""
															},
															"value": "Only valid sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e1c7c18f0d2dc4858f8c47ddee92da3f67b15c69b268077538bb56715c5b443",
																"typeString": "literal_string \"Only valid sender\""
															}
														],
														"id": 4963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6358:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6358:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4970,
												"nodeType": "ExpressionStatement",
												"src": "6358:55:13"
											},
											{
												"id": 4971,
												"nodeType": "PlaceholderStatement",
												"src": "6423:1:13"
											}
										]
									},
									"documentation": {
										"id": 4959,
										"nodeType": "StructuredDocumentation",
										"src": "6192:90:13",
										"text": " @dev Throws if called for a [participant] that is not the [msg.sender]."
									},
									"id": 4973,
									"name": "onlyIfSenderIsGivenParticipant",
									"nameLocation": "6296:30:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4961,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "6335:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 4973,
												"src": "6327:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6327:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6326:21:13"
									},
									"src": "6287:144:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4990,
										"nodeType": "Block",
										"src": "6597:173:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 4981,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6651:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ClosedSurveyV4_$5521",
																					"typeString": "contract ClosedSurveyV4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ClosedSurveyV4_$5521",
																					"typeString": "contract ClosedSurveyV4"
																				}
																			],
																			"id": 4980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6643:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 4979,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6643:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 4982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6643:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4977,
																		"name": "cUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4798,
																		"src": "6628:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																			"typeString": "contract IERC20Metadata"
																		}
																	},
																	"id": 4978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6633:9:13",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "6628:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 4983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6628:29:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4984,
																"name": "rewardAmountPerParticipantInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4816,
																"src": "6661:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6628:64:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f6573206e6f74206861766520656e6f7567682063555344",
															"id": 4986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6706:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db126172be1e699e37f6c2f9d4fb7f5f5f2ed87fc020503321ead645fa2bf474",
																"typeString": "literal_string \"Contract does not have enough cUSD\""
															},
															"value": "Contract does not have enough cUSD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db126172be1e699e37f6c2f9d4fb7f5f5f2ed87fc020503321ead645fa2bf474",
																"typeString": "literal_string \"Contract does not have enough cUSD\""
															}
														],
														"id": 4976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6607:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6607:145:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4988,
												"nodeType": "ExpressionStatement",
												"src": "6607:145:13"
											},
											{
												"id": 4989,
												"nodeType": "PlaceholderStatement",
												"src": "6762:1:13"
											}
										]
									},
									"documentation": {
										"id": 4974,
										"nodeType": "StructuredDocumentation",
										"src": "6437:116:13",
										"text": " @dev Throws if called when [cUSD.balanceOf(address(this))] is < [rewardAmountPerParticipantInWei]"
									},
									"id": 4991,
									"name": "onlyIfContractHasEnoughcUSD",
									"nameLocation": "6567:27:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6594:2:13"
									},
									"src": "6558:212:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5008,
										"nodeType": "Block",
										"src": "6903:139:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 4999,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6957:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_ClosedSurveyV4_$5521",
																					"typeString": "contract ClosedSurveyV4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_ClosedSurveyV4_$5521",
																					"typeString": "contract ClosedSurveyV4"
																				}
																			],
																			"id": 4998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6949:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 4997,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6949:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 5000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 4995,
																		"name": "cUSD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4798,
																		"src": "6934:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																			"typeString": "contract IERC20Metadata"
																		}
																	},
																	"id": 4996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6939:9:13",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "6934:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 5001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6934:29:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 5002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6966:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6934:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420646f6573206e6f74206861766520616e792063555344",
															"id": 5004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6981:33:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f9c0d44ee40817c148b7e54c820d93205f217f292cbbe17b933fe457c858abf5",
																"typeString": "literal_string \"Contract does not have any cUSD\""
															},
															"value": "Contract does not have any cUSD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f9c0d44ee40817c148b7e54c820d93205f217f292cbbe17b933fe457c858abf5",
																"typeString": "literal_string \"Contract does not have any cUSD\""
															}
														],
														"id": 4994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6913:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6913:111:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5006,
												"nodeType": "ExpressionStatement",
												"src": "6913:111:13"
											},
											{
												"id": 5007,
												"nodeType": "PlaceholderStatement",
												"src": "7034:1:13"
											}
										]
									},
									"documentation": {
										"id": 4992,
										"nodeType": "StructuredDocumentation",
										"src": "6776:86:13",
										"text": " @dev Throws if called when [cUSD.balanceOf(address(this))] is == 0."
									},
									"id": 5009,
									"name": "onlyIfContractHasAnycUSD",
									"nameLocation": "6876:24:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6900:2:13"
									},
									"src": "6867:175:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5020,
										"nodeType": "Block",
										"src": "7189:167:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5013,
																"name": "numberOfRewardedParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4822,
																"src": "7220:28:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 5014,
																"name": "targetNumberOfParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4819,
																"src": "7251:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7220:57:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c207061727469636970616e74732068617665206265656e207265776172646564",
															"id": 5016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7291:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf43b20efd5aa3917da2a7fb2b1042c8d997ae65e047b330e66dc1292e43869a",
																"typeString": "literal_string \"All participants have been rewarded\""
															},
															"value": "All participants have been rewarded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf43b20efd5aa3917da2a7fb2b1042c8d997ae65e047b330e66dc1292e43869a",
																"typeString": "literal_string \"All participants have been rewarded\""
															}
														],
														"id": 5012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7199:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7199:139:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5018,
												"nodeType": "ExpressionStatement",
												"src": "7199:139:13"
											},
											{
												"id": 5019,
												"nodeType": "PlaceholderStatement",
												"src": "7348:1:13"
											}
										]
									},
									"documentation": {
										"id": 5010,
										"nodeType": "StructuredDocumentation",
										"src": "7048:82:13",
										"text": " @dev Throws if called when all participants have been rewarded."
									},
									"id": 5021,
									"name": "onlyWhenAllParticipantsHaveNotBeenRewarded",
									"nameLocation": "7144:42:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7186:2:13"
									},
									"src": "7135:221:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5084,
										"nodeType": "Block",
										"src": "8068:560:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 5042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5037,
																"name": "cUSDToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5030,
																"src": "8086:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 5040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8107:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 5039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8099:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 5038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8099:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 5041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8099:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8086:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320676976656e20666f72206355534420546f6b656e",
															"id": 5043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8111:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6a72d387a390c16f84e7f8d259ef0611622c87b42fb783dcfc88b7e0013c2636",
																"typeString": "literal_string \"Zero address given for cUSD Token\""
															},
															"value": "Zero address given for cUSD Token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6a72d387a390c16f84e7f8d259ef0611622c87b42fb783dcfc88b7e0013c2636",
																"typeString": "literal_string \"Zero address given for cUSD Token\""
															}
														],
														"id": 5036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8078:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8078:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5045,
												"nodeType": "ExpressionStatement",
												"src": "8078:69:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 5052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5047,
																"name": "researcher",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5024,
																"src": "8166:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 5050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8188:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 5049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8180:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 5048,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8180:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 5051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8180:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8166:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320676976656e20666f722072657365617263686572",
															"id": 5053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8192:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_103bbfc7ecdffe3c52e69956548acb8fb5089ef3e04fc9fa26455cd7c0109d66",
																"typeString": "literal_string \"Zero address given for researcher\""
															},
															"value": "Zero address given for researcher"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_103bbfc7ecdffe3c52e69956548acb8fb5089ef3e04fc9fa26455cd7c0109d66",
																"typeString": "literal_string \"Zero address given for researcher\""
															}
														],
														"id": 5046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8158:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5055,
												"nodeType": "ExpressionStatement",
												"src": "8158:70:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5057,
																"name": "_rewardAmountPerParticipantInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5026,
																"src": "8247:32:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 5058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8282:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8247:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420616d6f756e74",
															"id": 5060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf",
																"typeString": "literal_string \"Invalid reward amount\""
															},
															"value": "Invalid reward amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60ba5fdb44fc7fd732e1155d9b0de42ecec49adfdadcfa1a7705802c2b59f9bf",
																"typeString": "literal_string \"Invalid reward amount\""
															}
														],
														"id": 5056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8239:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8239:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5062,
												"nodeType": "ExpressionStatement",
												"src": "8239:70:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5064,
																"name": "_targetNumberOfParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5028,
																"src": "8341:27:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 5065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8371:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8341:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206e756d626572206f6620746172676574207061727469636970616e7473",
															"id": 5067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8386:39:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_026964306945d4bb6a65f3bbdd451c4d0a1384d87be81058cde982d69ca52e4c",
																"typeString": "literal_string \"Invalid number of target participants\""
															},
															"value": "Invalid number of target participants"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_026964306945d4bb6a65f3bbdd451c4d0a1384d87be81058cde982d69ca52e4c",
																"typeString": "literal_string \"Invalid number of target participants\""
															}
														],
														"id": 5063,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8320:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8320:115:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5069,
												"nodeType": "ExpressionStatement",
												"src": "8320:115:13"
											},
											{
												"expression": {
													"id": 5074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5070,
														"name": "cUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4798,
														"src": "8446:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$251",
															"typeString": "contract IERC20Metadata"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 5072,
																"name": "cUSDToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5030,
																"src": "8468:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 5071,
															"name": "IERC20Metadata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "8453:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$251_$",
																"typeString": "type(contract IERC20Metadata)"
															}
														},
														"id": 5073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8453:25:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Metadata_$251",
															"typeString": "contract IERC20Metadata"
														}
													},
													"src": "8446:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Metadata_$251",
														"typeString": "contract IERC20Metadata"
													}
												},
												"id": 5075,
												"nodeType": "ExpressionStatement",
												"src": "8446:32:13"
											},
											{
												"expression": {
													"id": 5078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5076,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4816,
														"src": "8489:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5077,
														"name": "_rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5026,
														"src": "8523:32:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8489:66:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5079,
												"nodeType": "ExpressionStatement",
												"src": "8489:66:13"
											},
											{
												"expression": {
													"id": 5082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5080,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4819,
														"src": "8565:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5081,
														"name": "_targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5028,
														"src": "8594:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8565:56:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5083,
												"nodeType": "ExpressionStatement",
												"src": "8565:56:13"
											}
										]
									},
									"documentation": {
										"id": 5022,
										"nodeType": "StructuredDocumentation",
										"src": "7362:513:13",
										"text": " @notice Initializes the survey contract with initial parameters\n @dev Sets up the contract with researcher address, reward amount, participant target, and cUSD token\n @param researcher Address of the researcher who will own and manage the contract\n @param _rewardAmountPerParticipantInWei Amount in wei to reward each participant\n @param _targetNumberOfParticipants Maximum number of participants for the survey\n @param cUSDToken Address of the cUSD token contract"
									},
									"id": 5085,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 5033,
													"name": "researcher",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5024,
													"src": "8056:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5034,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 5032,
												"name": "Ownable",
												"nameLocations": [
													"8048:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "8048:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8048:19:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5024,
												"mutability": "mutable",
												"name": "researcher",
												"nameLocation": "7909:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 5085,
												"src": "7901:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7901:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5026,
												"mutability": "mutable",
												"name": "_rewardAmountPerParticipantInWei",
												"nameLocation": "7937:32:13",
												"nodeType": "VariableDeclaration",
												"scope": 5085,
												"src": "7929:40:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7929:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5028,
												"mutability": "mutable",
												"name": "_targetNumberOfParticipants",
												"nameLocation": "7987:27:13",
												"nodeType": "VariableDeclaration",
												"scope": 5085,
												"src": "7979:35:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7979:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5030,
												"mutability": "mutable",
												"name": "cUSDToken",
												"nameLocation": "8032:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 5085,
												"src": "8024:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8024:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7891:156:13"
									},
									"returnParameters": {
										"id": 5035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8068:0:13"
									},
									"scope": 5521,
									"src": "7880:748:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5121,
										"nodeType": "Block",
										"src": "8898:255:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 5103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5098,
																"name": "participant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5088,
																"src": "8916:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 5101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8939:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 5100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8931:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 5099,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8931:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 5102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8931:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8916:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206164647265737320706173736564",
															"id": 5104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8943:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93e85f37f73cf8e1b855512ab7e00aab2b791117712ecb476daeb6c2c0a27a67",
																"typeString": "literal_string \"Zero address passed\""
															},
															"value": "Zero address passed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93e85f37f73cf8e1b855512ab7e00aab2b791117712ecb476daeb6c2c0a27a67",
																"typeString": "literal_string \"Zero address passed\""
															}
														],
														"id": 5097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8908:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5106,
												"nodeType": "ExpressionStatement",
												"src": "8908:57:13"
											},
											{
												"expression": {
													"id": 5111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 5107,
															"name": "participantsScreenedForSurvey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4808,
															"src": "8976:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 5109,
														"indexExpression": {
															"id": 5108,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5088,
															"src": "9006:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8976:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 5110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9021:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8976:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5112,
												"nodeType": "ExpressionStatement",
												"src": "8976:49:13"
											},
											{
												"id": 5116,
												"nodeType": "UncheckedBlock",
												"src": "9035:65:13",
												"statements": [
													{
														"expression": {
															"id": 5114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "9059:30:13",
															"subExpression": {
																"id": 5113,
																"name": "numberOfScreenedParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4828,
																"src": "9061:28:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 5115,
														"nodeType": "ExpressionStatement",
														"src": "9059:30:13"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5118,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5088,
															"src": "9134:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5117,
														"name": "ParticipantScreened",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4836,
														"src": "9114:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9114:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5120,
												"nodeType": "EmitStatement",
												"src": "9109:37:13"
											}
										]
									},
									"documentation": {
										"id": 5086,
										"nodeType": "StructuredDocumentation",
										"src": "8634:91:13",
										"text": " @dev Marks a [participant] as [true] in [participantsScreenedForSurvey]."
									},
									"functionSelector": "ea1dd101",
									"id": 5122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 5091,
													"name": "participant",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5088,
													"src": "8834:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5090,
												"name": "onlyIfSenderIsGivenParticipant",
												"nameLocations": [
													"8803:30:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4973,
												"src": "8803:30:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8803:43:13"
										},
										{
											"arguments": [
												{
													"id": 5094,
													"name": "participant",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5088,
													"src": "8881:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5093,
												"name": "onlyUnscreenedParticipant",
												"nameLocations": [
													"8855:25:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4929,
												"src": "8855:25:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8855:38:13"
										}
									],
									"name": "screenParticipant",
									"nameLocation": "8739:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5088,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "8765:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5122,
												"src": "8757:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8756:21:13"
									},
									"returnParameters": {
										"id": 5096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8898:0:13"
									},
									"scope": 5521,
									"src": "8730:423:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5143,
										"nodeType": "Block",
										"src": "9959:81:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 5137,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5125,
																	"src": "10003:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 5138,
																	"name": "rewardId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5127,
																	"src": "10016:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 5139,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5129,
																	"src": "10026:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 5135,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9986:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 5136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9990:12:13",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9986:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 5140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9986:46:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 5134,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9976:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 5141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9976:57:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 5133,
												"id": 5142,
												"nodeType": "Return",
												"src": "9969:64:13"
											}
										]
									},
									"documentation": {
										"id": 5123,
										"nodeType": "StructuredDocumentation",
										"src": "9159:650:13",
										"text": " @dev Gets the message hash that will be signed by the contract owner\n @param participant The wallet address of the participant claiming the reward\n @param rewardId A unique identifier for this specific reward claim\n @param nonce Unique number to prevent relay attacks\n @return bytes32 The keccak256 hash of the packed parameters\n The hash is created by tightly packing the parameters in order:\n 1. participant Address\n 2. rewardId String\n 3. nonce Unique number to prevent relay attacks\n This hash must match exactly what is signed off-chain by the contract owner"
									},
									"id": 5144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "9823:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5125,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "9855:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5144,
												"src": "9847:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9847:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5127,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "9890:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 5144,
												"src": "9876:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9876:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5129,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "9916:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5144,
												"src": "9908:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9908:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9837:90:13"
									},
									"returnParameters": {
										"id": 5133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5144,
												"src": "9950:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 5131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9950:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9949:9:13"
									},
									"scope": 5521,
									"src": "9814:226:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 5181,
										"nodeType": "Block",
										"src": "10628:265:13",
										"statements": [
											{
												"assignments": [
													5159
												],
												"declarations": [
													{
														"constant": false,
														"id": 5159,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "10646:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 5181,
														"src": "10638:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 5158,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10638:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5165,
												"initialValue": {
													"arguments": [
														{
															"id": 5161,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5147,
															"src": "10675:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5162,
															"name": "rewardId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5149,
															"src": "10688:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 5163,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5151,
															"src": "10698:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5160,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5144,
														"src": "10660:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,string memory,uint256) pure returns (bytes32)"
														}
													},
													"id": 5164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10660:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10638:66:13"
											},
											{
												"assignments": [
													5167
												],
												"declarations": [
													{
														"constant": false,
														"id": 5167,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "10722:20:13",
														"nodeType": "VariableDeclaration",
														"scope": 5181,
														"src": "10714:28:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 5166,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10714:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5172,
												"initialValue": {
													"arguments": [
														{
															"id": 5170,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5159,
															"src": "10798:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 5168,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "10745:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$1261_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 5169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10762:22:13",
														"memberName": "toEthSignedMessageHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1202,
														"src": "10745:39:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 5171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10745:74:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10714:105:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 5179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 5175,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5153,
																"src": "10865:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 5173,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5167,
																"src": "10836:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 5174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10857:7:13",
															"memberName": "recover",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "10836:28:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 5176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10836:39:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5177,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "10879:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 5178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10879:7:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10836:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5157,
												"id": 5180,
												"nodeType": "Return",
												"src": "10829:57:13"
											}
										]
									},
									"documentation": {
										"id": 5145,
										"nodeType": "StructuredDocumentation",
										"src": "10046:402:13",
										"text": " @dev Verifies that a signature is valid for given participant data\n @param participant Address of the participant claiming the reward\n @param rewardId Unique identifier for this reward claim\n @param nonce Unique number to prevent relay attacks\n @param signature Cryptographic signature to verify\n @return bool True if signature is valid, false otherwise"
									},
									"id": 5182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignature",
									"nameLocation": "10462:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5147,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "10495:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5182,
												"src": "10487:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10487:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5149,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "10530:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 5182,
												"src": "10516:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10516:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5151,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "10556:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5182,
												"src": "10548:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10548:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5153,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "10584:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 5182,
												"src": "10571:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10571:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10477:122:13"
									},
									"returnParameters": {
										"id": 5157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5182,
												"src": "10622:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10622:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10621:6:13"
									},
									"scope": 5521,
									"src": "10453:440:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 5238,
										"nodeType": "Block",
										"src": "11926:262:13",
										"statements": [
											{
												"assignments": [
													5221
												],
												"declarations": [
													{
														"constant": false,
														"id": 5221,
														"mutability": "mutable",
														"name": "rewardTransferIsSuccesful",
														"nameLocation": "11941:25:13",
														"nodeType": "VariableDeclaration",
														"scope": 5238,
														"src": "11936:30:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5220,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11936:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5225,
												"initialValue": {
													"arguments": [
														{
															"id": 5223,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5185,
															"src": "11987:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5222,
														"name": "rewardParticipant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5270,
														"src": "11969:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) returns (bool)"
														}
													},
													"id": 5224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11969:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11936:63:13"
											},
											{
												"condition": {
													"id": 5226,
													"name": "rewardTransferIsSuccesful",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5221,
													"src": "12014:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5237,
												"nodeType": "IfStatement",
												"src": "12010:172:13",
												"trueBody": {
													"id": 5236,
													"nodeType": "Block",
													"src": "12041:141:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 5228,
																		"name": "signature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5191,
																		"src": "12085:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 5229,
																		"name": "participant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5185,
																		"src": "12096:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 5227,
																	"name": "markSignatureAsHavingBeenUsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5315,
																	"src": "12055:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
																		"typeString": "function (bytes memory,address)"
																	}
																},
																"id": 5230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12055:53:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5231,
															"nodeType": "ExpressionStatement",
															"src": "12055:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 5233,
																		"name": "participant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5185,
																		"src": "12159:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 5232,
																	"name": "markParticipantAsHavingClaimedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5291,
																	"src": "12122:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 5234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12122:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5235,
															"nodeType": "ExpressionStatement",
															"src": "12122:49:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5183,
										"nodeType": "StructuredDocumentation",
										"src": "10899:448:13",
										"text": " @notice Allows a participant to claim their reward using a valid signature\n @dev Processes the reward claim if all conditions are met and signature is valid\n @param participant Address of the participant claiming the reward\n @param rewardId Unique identifier for this reward claim\n @param nonce Unique number to prevent relay attacks\n @param signature Cryptographic signature from the contract owner"
									},
									"functionSelector": "6fa55ed9",
									"id": 5239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5193,
												"name": "whenNotPaused",
												"nameLocations": [
													"11540:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "11540:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11540:13:13"
										},
										{
											"id": 5196,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5195,
												"name": "nonReentrant",
												"nameLocations": [
													"11562:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 483,
												"src": "11562:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11562:12:13"
										},
										{
											"arguments": [
												{
													"id": 5198,
													"name": "participant",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5185,
													"src": "11611:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 5199,
													"name": "rewardId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5187,
													"src": "11624:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 5200,
													"name": "nonce",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5189,
													"src": "11634:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 5201,
													"name": "signature",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5191,
													"src": "11641:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 5202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5197,
												"name": "onlyIfGivenSignatureIsValid",
												"nameLocations": [
													"11583:27:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4899,
												"src": "11583:27:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11583:68:13"
										},
										{
											"arguments": [
												{
													"id": 5204,
													"name": "signature",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5191,
													"src": "11689:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 5205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5203,
												"name": "onlyIfGivenSignatureIsUnused",
												"nameLocations": [
													"11660:28:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4914,
												"src": "11660:28:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11660:39:13"
										},
										{
											"id": 5207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5206,
												"name": "onlyIfContractHasEnoughcUSD",
												"nameLocations": [
													"11708:27:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4991,
												"src": "11708:27:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11708:27:13"
										},
										{
											"id": 5209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5208,
												"name": "onlyWhenAllParticipantsHaveNotBeenRewarded",
												"nameLocations": [
													"11744:42:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5021,
												"src": "11744:42:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11744:42:13"
										},
										{
											"arguments": [
												{
													"id": 5211,
													"name": "participant",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5185,
													"src": "11826:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5210,
												"name": "onlyIfSenderIsGivenParticipant",
												"nameLocations": [
													"11795:30:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4973,
												"src": "11795:30:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11795:43:13"
										},
										{
											"arguments": [
												{
													"id": 5214,
													"name": "participant",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5185,
													"src": "11873:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5213,
												"name": "onlyUnrewardedParticipant",
												"nameLocations": [
													"11847:25:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4958,
												"src": "11847:25:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11847:38:13"
										},
										{
											"arguments": [
												{
													"id": 5217,
													"name": "participant",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5185,
													"src": "11909:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 5218,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5216,
												"name": "mustBeScreened",
												"nameLocations": [
													"11894:14:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4943,
												"src": "11894:14:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11894:27:13"
										}
									],
									"name": "processRewardClaimByParticipant",
									"nameLocation": "11361:31:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5185,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "11410:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5239,
												"src": "11402:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11402:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5187,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "11445:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 5239,
												"src": "11431:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11431:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5189,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "11471:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 5239,
												"src": "11463:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11463:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5191,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "11499:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 5239,
												"src": "11486:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11486:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11392:122:13"
									},
									"returnParameters": {
										"id": 5219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11926:0:13"
									},
									"scope": 5521,
									"src": "11352:836:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5269,
										"nodeType": "Block",
										"src": "12470:454:13",
										"statements": [
											{
												"assignments": [
													5248
												],
												"declarations": [
													{
														"constant": false,
														"id": 5248,
														"mutability": "mutable",
														"name": "rewardTransferIsSuccesful",
														"nameLocation": "12485:25:13",
														"nodeType": "VariableDeclaration",
														"scope": 5269,
														"src": "12480:30:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12480:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5254,
												"initialValue": {
													"arguments": [
														{
															"id": 5251,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5242,
															"src": "12540:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5252,
															"name": "rewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4816,
															"src": "12565:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 5249,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4798,
															"src": "12513:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 5250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12518:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "12513:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 5253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12513:93:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12480:126:13"
											},
											{
												"condition": {
													"id": 5255,
													"name": "rewardTransferIsSuccesful",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5248,
													"src": "12621:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5266,
												"nodeType": "IfStatement",
												"src": "12617:258:13",
												"trueBody": {
													"id": 5265,
													"nodeType": "Block",
													"src": "12648:227:13",
													"statements": [
														{
															"id": 5259,
															"nodeType": "UncheckedBlock",
															"src": "12662:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 5257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "12690:30:13",
																		"subExpression": {
																			"id": 5256,
																			"name": "numberOfRewardedParticipants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4822,
																			"src": "12692:28:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 5258,
																	"nodeType": "ExpressionStatement",
																	"src": "12690:30:13"
																}
															]
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 5261,
																		"name": "participant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5242,
																		"src": "12790:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 5262,
																		"name": "rewardAmountPerParticipantInWei",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4816,
																		"src": "12819:31:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5260,
																	"name": "ParticipantRewarded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4843,
																	"src": "12753:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 5263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12753:111:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5264,
															"nodeType": "EmitStatement",
															"src": "12748:116:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 5267,
													"name": "rewardTransferIsSuccesful",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5248,
													"src": "12892:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5246,
												"id": 5268,
												"nodeType": "Return",
												"src": "12885:32:13"
											}
										]
									},
									"documentation": {
										"id": 5240,
										"nodeType": "StructuredDocumentation",
										"src": "12194:200:13",
										"text": " @dev Internal function to transfer the reward to a participant\n @param participant Address of the participant to reward\n @return bool True if the transfer was successful"
									},
									"id": 5270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardParticipant",
									"nameLocation": "12408:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5242,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "12434:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5270,
												"src": "12426:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12425:21:13"
									},
									"returnParameters": {
										"id": 5246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5270,
												"src": "12464:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12464:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12463:6:13"
									},
									"scope": 5521,
									"src": "12399:525:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 5290,
										"nodeType": "Block",
										"src": "13190:181:13",
										"statements": [
											{
												"expression": {
													"id": 5280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 5276,
															"name": "rewardedParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4803,
															"src": "13200:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 5278,
														"indexExpression": {
															"id": 5277,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5273,
															"src": "13221:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13200:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 5279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13236:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13200:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5281,
												"nodeType": "ExpressionStatement",
												"src": "13200:40:13"
											},
											{
												"id": 5285,
												"nodeType": "UncheckedBlock",
												"src": "13251:59:13",
												"statements": [
													{
														"expression": {
															"id": 5283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "13275:24:13",
															"subExpression": {
																"id": 5282,
																"name": "numberOfClaimedRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4825,
																"src": "13277:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 5284,
														"nodeType": "ExpressionStatement",
														"src": "13275:24:13"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5287,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5273,
															"src": "13352:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5286,
														"name": "ParticipantMarkedAsRewarded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4855,
														"src": "13324:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 5288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13324:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5289,
												"nodeType": "EmitStatement",
												"src": "13319:45:13"
											}
										]
									},
									"documentation": {
										"id": 5271,
										"nodeType": "StructuredDocumentation",
										"src": "12930:180:13",
										"text": " @notice Internal helper function to mark a participant as having claimed reward\n @param participant - The address of the participant who used the signature"
									},
									"id": 5291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markParticipantAsHavingClaimedReward",
									"nameLocation": "13124:36:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5273,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "13169:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5291,
												"src": "13161:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13161:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13160:21:13"
									},
									"returnParameters": {
										"id": 5275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13190:0:13"
									},
									"scope": 5521,
									"src": "13115:256:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 5314,
										"nodeType": "Block",
										"src": "13713:181:13",
										"statements": [
											{
												"expression": {
													"id": 5303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 5299,
															"name": "signaturesUsedForClaiming",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4813,
															"src": "13723:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
																"typeString": "mapping(bytes memory => bool)"
															}
														},
														"id": 5301,
														"indexExpression": {
															"id": 5300,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5294,
															"src": "13749:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13723:36:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 5302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13762:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13723:43:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5304,
												"nodeType": "ExpressionStatement",
												"src": "13723:43:13"
											},
											{
												"id": 5308,
												"nodeType": "UncheckedBlock",
												"src": "13777:59:13",
												"statements": [
													{
														"expression": {
															"id": 5306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "13801:24:13",
															"subExpression": {
																"id": 5305,
																"name": "numberOfUsedSignatures",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4831,
																"src": "13803:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 5307,
														"nodeType": "ExpressionStatement",
														"src": "13801:24:13"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5310,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5294,
															"src": "13864:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 5311,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5296,
															"src": "13875:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 5309,
														"name": "SignatureUsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4850,
														"src": "13850:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 5312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13850:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5313,
												"nodeType": "EmitStatement",
												"src": "13845:42:13"
											}
										]
									},
									"documentation": {
										"id": 5292,
										"nodeType": "StructuredDocumentation",
										"src": "13377:217:13",
										"text": " @notice Internal helper function to mark a signature as used\n @param signature - The signature to mark as used\n @param participant - The address of the participant who used the signature"
									},
									"id": 5315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "markSignatureAsHavingBeenUsed",
									"nameLocation": "13608:29:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5294,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "13660:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 5315,
												"src": "13647:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13647:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5296,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "13687:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5315,
												"src": "13679:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13679:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13637:67:13"
									},
									"returnParameters": {
										"id": 5298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13713:0:13"
									},
									"scope": 5521,
									"src": "13599:295:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 5353,
										"nodeType": "Block",
										"src": "14227:237:13",
										"statements": [
											{
												"assignments": [
													5326
												],
												"declarations": [
													{
														"constant": false,
														"id": 5326,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "14245:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 5353,
														"src": "14237:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14237:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5334,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 5331,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "14278:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ClosedSurveyV4_$5521",
																		"typeString": "contract ClosedSurveyV4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ClosedSurveyV4_$5521",
																		"typeString": "contract ClosedSurveyV4"
																	}
																],
																"id": 5330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14270:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 5329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14270:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 5332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14270:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 5327,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4798,
															"src": "14255:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 5328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14260:9:13",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "14255:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 5333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14255:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14237:47:13"
											},
											{
												"assignments": [
													5336
												],
												"declarations": [
													{
														"constant": false,
														"id": 5336,
														"mutability": "mutable",
														"name": "transferIsSuccessful",
														"nameLocation": "14299:20:13",
														"nodeType": "VariableDeclaration",
														"scope": 5353,
														"src": "14294:25:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 5335,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14294:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5343,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 5339,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "14336:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 5340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14336:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5341,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5326,
															"src": "14345:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 5337,
															"name": "cUSD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4798,
															"src": "14322:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 5338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14327:8:13",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "14322:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 5342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14322:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14294:59:13"
											},
											{
												"condition": {
													"id": 5344,
													"name": "transferIsSuccessful",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5336,
													"src": "14368:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5352,
												"nodeType": "IfStatement",
												"src": "14364:94:13",
												"trueBody": {
													"id": 5351,
													"nodeType": "Block",
													"src": "14390:68:13",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 5346,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "14430:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 5347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14430:7:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 5348,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5326,
																		"src": "14439:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 5345,
																	"name": "RewardFundsWithdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4862,
																	"src": "14409:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 5349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14409:38:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 5350,
															"nodeType": "EmitStatement",
															"src": "14404:43:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 5316,
										"nodeType": "StructuredDocumentation",
										"src": "13900:182:13",
										"text": " @notice Allows the researcher to withdraw all remaining cUSD from the contract\n @dev Can only be called by the contract owner when the contract is not paused"
									},
									"functionSelector": "f22069df",
									"id": 5354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5319,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5318,
												"name": "onlyOwner",
												"nameLocations": [
													"14158:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14158:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14158:9:13"
										},
										{
											"id": 5321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5320,
												"name": "whenNotPaused",
												"nameLocations": [
													"14176:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 375,
												"src": "14176:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14176:13:13"
										},
										{
											"id": 5323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5322,
												"name": "onlyIfContractHasAnycUSD",
												"nameLocations": [
													"14198:24:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 5009,
												"src": "14198:24:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14198:24:13"
										}
									],
									"name": "withdrawAllRewardFundsToResearcher",
									"nameLocation": "14096:34:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14130:2:13"
									},
									"returnParameters": {
										"id": 5324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14227:0:13"
									},
									"scope": 5521,
									"src": "14087:377:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5386,
										"nodeType": "Block",
										"src": "14793:525:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5363,
																"name": "_newRewardAmountPerParticipantInWei",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5357,
																"src": "14824:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 5364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14863:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14824:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2072657761726420616d6f756e7420676976656e",
															"id": 5366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14878:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65231543b70fec099ac2aa38f6223e4d6c8e1116a7ca9f31245a55884124fd17",
																"typeString": "literal_string \"Zero reward amount given\""
															},
															"value": "Zero reward amount given"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65231543b70fec099ac2aa38f6223e4d6c8e1116a7ca9f31245a55884124fd17",
																"typeString": "literal_string \"Zero reward amount given\""
															}
														],
														"id": 5362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14803:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14803:111:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5368,
												"nodeType": "ExpressionStatement",
												"src": "14803:111:13"
											},
											{
												"assignments": [
													5370
												],
												"declarations": [
													{
														"constant": false,
														"id": 5370,
														"mutability": "mutable",
														"name": "oldRewardAmountPerParticipantInWei",
														"nameLocation": "14933:34:13",
														"nodeType": "VariableDeclaration",
														"scope": 5386,
														"src": "14925:42:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14925:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5372,
												"initialValue": {
													"id": 5371,
													"name": "rewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4816,
													"src": "14970:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14925:76:13"
											},
											{
												"assignments": [
													5374
												],
												"declarations": [
													{
														"constant": false,
														"id": 5374,
														"mutability": "mutable",
														"name": "newRewardAmountPerParticipantInWei",
														"nameLocation": "15020:34:13",
														"nodeType": "VariableDeclaration",
														"scope": 5386,
														"src": "15012:42:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15012:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5376,
												"initialValue": {
													"id": 5375,
													"name": "_newRewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5357,
													"src": "15057:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15012:80:13"
											},
											{
												"expression": {
													"id": 5379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5377,
														"name": "rewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4816,
														"src": "15102:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5378,
														"name": "newRewardAmountPerParticipantInWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5374,
														"src": "15136:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15102:68:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5380,
												"nodeType": "ExpressionStatement",
												"src": "15102:68:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5382,
															"name": "oldRewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5370,
															"src": "15219:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5383,
															"name": "newRewardAmountPerParticipantInWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5374,
															"src": "15267:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5381,
														"name": "RewardAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4869,
														"src": "15186:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 5384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15186:125:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5385,
												"nodeType": "EmitStatement",
												"src": "15181:130:13"
											}
										]
									},
									"documentation": {
										"id": 5355,
										"nodeType": "StructuredDocumentation",
										"src": "14470:198:13",
										"text": " @notice Updates the reward amount per participant\n @dev Can only be called by the contract owner\n @param _newRewardAmountPerParticipantInWei - New reward amount in wei"
									},
									"functionSelector": "64bb632f",
									"id": 5387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5359,
												"name": "onlyOwner",
												"nameLocations": [
													"14783:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14783:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "14783:9:13"
										}
									],
									"name": "updateRewardAmountPerParticipant",
									"nameLocation": "14682:32:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5357,
												"mutability": "mutable",
												"name": "_newRewardAmountPerParticipantInWei",
												"nameLocation": "14732:35:13",
												"nodeType": "VariableDeclaration",
												"scope": 5387,
												"src": "14724:43:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14724:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14714:59:13"
									},
									"returnParameters": {
										"id": 5361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14793:0:13"
									},
									"scope": 5521,
									"src": "14673:645:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5419,
										"nodeType": "Block",
										"src": "15661:511:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 5396,
																"name": "_newTargetNumberOfParticipants",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5390,
																"src": "15692:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 5397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15726:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15692:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f206e756d626572206f6620746172676574207061727469636970616e747320676976656e",
															"id": 5399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15741:42:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46ae283ffec203fd37f672d1095b665b5786f54d125a160afc05124123212061",
																"typeString": "literal_string \"Zero number of target participants given\""
															},
															"value": "Zero number of target participants given"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46ae283ffec203fd37f672d1095b665b5786f54d125a160afc05124123212061",
																"typeString": "literal_string \"Zero number of target participants given\""
															}
														],
														"id": 5395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15671:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 5400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15671:122:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5401,
												"nodeType": "ExpressionStatement",
												"src": "15671:122:13"
											},
											{
												"assignments": [
													5403
												],
												"declarations": [
													{
														"constant": false,
														"id": 5403,
														"mutability": "mutable",
														"name": "oldTargetNumberOfParticipants",
														"nameLocation": "15812:29:13",
														"nodeType": "VariableDeclaration",
														"scope": 5419,
														"src": "15804:37:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15804:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5405,
												"initialValue": {
													"id": 5404,
													"name": "targetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4819,
													"src": "15844:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15804:66:13"
											},
											{
												"assignments": [
													5407
												],
												"declarations": [
													{
														"constant": false,
														"id": 5407,
														"mutability": "mutable",
														"name": "newTargetNumberOfParticipants",
														"nameLocation": "15889:29:13",
														"nodeType": "VariableDeclaration",
														"scope": 5419,
														"src": "15881:37:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15881:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5409,
												"initialValue": {
													"id": 5408,
													"name": "_newTargetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5390,
													"src": "15921:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15881:70:13"
											},
											{
												"expression": {
													"id": 5412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 5410,
														"name": "targetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4819,
														"src": "15962:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5411,
														"name": "newTargetNumberOfParticipants",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5407,
														"src": "15991:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15962:58:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5413,
												"nodeType": "ExpressionStatement",
												"src": "15962:58:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5415,
															"name": "oldTargetNumberOfParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5403,
															"src": "16083:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5416,
															"name": "newTargetNumberOfParticipants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5407,
															"src": "16126:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5414,
														"name": "TargetNumberOfParticipantsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4876,
														"src": "16036:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 5417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16036:129:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5418,
												"nodeType": "EmitStatement",
												"src": "16031:134:13"
											}
										]
									},
									"documentation": {
										"id": 5388,
										"nodeType": "StructuredDocumentation",
										"src": "15324:217:13",
										"text": " @notice Updates the target number of participants for the survey\n @dev Can only be called by the contract owner\n @param _newTargetNumberOfParticipants - New target number of participants"
									},
									"functionSelector": "528780cc",
									"id": 5420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5393,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5392,
												"name": "onlyOwner",
												"nameLocations": [
													"15651:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "15651:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "15651:9:13"
										}
									],
									"name": "updateTargetNumberOfParticipants",
									"nameLocation": "15555:32:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5390,
												"mutability": "mutable",
												"name": "_newTargetNumberOfParticipants",
												"nameLocation": "15605:30:13",
												"nodeType": "VariableDeclaration",
												"scope": 5420,
												"src": "15597:38:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15597:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15587:54:13"
									},
									"returnParameters": {
										"id": 5394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15661:0:13"
									},
									"scope": 5521,
									"src": "15546:626:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5429,
										"nodeType": "Block",
										"src": "16345:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5426,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "16355:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 5427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16355:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5428,
												"nodeType": "ExpressionStatement",
												"src": "16355:8:13"
											}
										]
									},
									"documentation": {
										"id": 5421,
										"nodeType": "StructuredDocumentation",
										"src": "16178:120:13",
										"text": " @notice Pauses all reward claims and withdrawals\n @dev Can only be called by the contract owner"
									},
									"functionSelector": "e082fe2a",
									"id": 5430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5423,
												"name": "onlyOwner",
												"nameLocations": [
													"16335:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "16335:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16335:9:13"
										}
									],
									"name": "pauseSurvey",
									"nameLocation": "16312:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16323:2:13"
									},
									"returnParameters": {
										"id": 5425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16345:0:13"
									},
									"scope": 5521,
									"src": "16303:67:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5439,
										"nodeType": "Block",
										"src": "16542:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 5436,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "16552:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 5437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16552:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5438,
												"nodeType": "ExpressionStatement",
												"src": "16552:10:13"
											}
										]
									},
									"documentation": {
										"id": 5431,
										"nodeType": "StructuredDocumentation",
										"src": "16376:117:13",
										"text": " @notice Resumes reward claims and withdrawals\n @dev Can only be called by the contract owner"
									},
									"functionSelector": "3960fc66",
									"id": 5440,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 5434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 5433,
												"name": "onlyOwner",
												"nameLocations": [
													"16532:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "16532:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "16532:9:13"
										}
									],
									"name": "unpauseSurvey",
									"nameLocation": "16507:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16520:2:13"
									},
									"returnParameters": {
										"id": 5435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16542:0:13"
									},
									"scope": 5521,
									"src": "16498:71:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5452,
										"nodeType": "Block",
										"src": "16896:66:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 5448,
														"name": "participantsScreenedForSurvey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4808,
														"src": "16913:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 5450,
													"indexExpression": {
														"id": 5449,
														"name": "participant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5443,
														"src": "16943:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16913:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5447,
												"id": 5451,
												"nodeType": "Return",
												"src": "16906:49:13"
											}
										]
									},
									"documentation": {
										"id": 5441,
										"nodeType": "StructuredDocumentation",
										"src": "16575:200:13",
										"text": " @notice Checks if a given participant has been screened\n @param participant - Address of the participant to check\n @return bool True if the participant has been screened"
									},
									"functionSelector": "825f98be",
									"id": 5453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfParticipantIsScreened",
									"nameLocation": "16789:28:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5443,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "16826:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 5453,
												"src": "16818:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16818:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16817:21:13"
									},
									"returnParameters": {
										"id": 5447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5453,
												"src": "16886:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16886:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16885:6:13"
									},
									"scope": 5521,
									"src": "16780:182:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5465,
										"nodeType": "Block",
										"src": "17290:60:13",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 5461,
														"name": "signaturesUsedForClaiming",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4813,
														"src": "17307:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
															"typeString": "mapping(bytes memory => bool)"
														}
													},
													"id": 5463,
													"indexExpression": {
														"id": 5462,
														"name": "signature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5456,
														"src": "17333:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17307:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 5460,
												"id": 5464,
												"nodeType": "Return",
												"src": "17300:43:13"
											}
										]
									},
									"documentation": {
										"id": 5454,
										"nodeType": "StructuredDocumentation",
										"src": "16968:204:13",
										"text": " @notice Checks if a given signature has been used\n @param signature Cryptographic signature generated by the contract owner\n @return bool True if the signature has been used"
									},
									"functionSelector": "c5dac913",
									"id": 5466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkIfSignatureIsUsed",
									"nameLocation": "17186:22:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5456,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "17222:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 5466,
												"src": "17209:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 5455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17209:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17208:24:13"
									},
									"returnParameters": {
										"id": 5460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5466,
												"src": "17280:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17280:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17279:6:13"
									},
									"scope": 5521,
									"src": "17177:173:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5474,
										"nodeType": "Block",
										"src": "17592:55:13",
										"statements": [
											{
												"expression": {
													"id": 5472,
													"name": "rewardAmountPerParticipantInWei",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4816,
													"src": "17609:31:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5471,
												"id": 5473,
												"nodeType": "Return",
												"src": "17602:38:13"
											}
										]
									},
									"documentation": {
										"id": 5467,
										"nodeType": "StructuredDocumentation",
										"src": "17360:121:13",
										"text": " @notice Gets the current reward amount per participant\n @return uint256 The reward amount in wei"
									},
									"functionSelector": "7069243c",
									"id": 5475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmountPerParticipantInWei",
									"nameLocation": "17495:34:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17529:2:13"
									},
									"returnParameters": {
										"id": 5471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5475,
												"src": "17579:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17579:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17578:9:13"
									},
									"scope": 5521,
									"src": "17486:161:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5483,
										"nodeType": "Block",
										"src": "17881:52:13",
										"statements": [
											{
												"expression": {
													"id": 5481,
													"name": "numberOfRewardedParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4822,
													"src": "17898:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5480,
												"id": 5482,
												"nodeType": "Return",
												"src": "17891:35:13"
											}
										]
									},
									"documentation": {
										"id": 5476,
										"nodeType": "StructuredDocumentation",
										"src": "17653:148:13",
										"text": " @notice Gets the current number of rewarded participants\n @return uint256 The number of participants who have been rewarded"
									},
									"functionSelector": "741ae614",
									"id": 5484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfRewardedParticipants",
									"nameLocation": "17815:31:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17846:2:13"
									},
									"returnParameters": {
										"id": 5480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5484,
												"src": "17872:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17872:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17871:9:13"
									},
									"scope": 5521,
									"src": "17806:127:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5492,
										"nodeType": "Block",
										"src": "18148:50:13",
										"statements": [
											{
												"expression": {
													"id": 5490,
													"name": "targetNumberOfParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4819,
													"src": "18165:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5489,
												"id": 5491,
												"nodeType": "Return",
												"src": "18158:33:13"
											}
										]
									},
									"documentation": {
										"id": 5485,
										"nodeType": "StructuredDocumentation",
										"src": "17939:131:13",
										"text": " @notice Gets the target number of participants\n @return uint256 The maximum number of participants allowed"
									},
									"functionSelector": "6fa1c59d",
									"id": 5493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTargetNumberOfParticipants",
									"nameLocation": "18084:29:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18113:2:13"
									},
									"returnParameters": {
										"id": 5489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5493,
												"src": "18139:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18139:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18138:9:13"
									},
									"scope": 5521,
									"src": "18075:123:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5501,
										"nodeType": "Block",
										"src": "18424:52:13",
										"statements": [
											{
												"expression": {
													"id": 5499,
													"name": "numberOfScreenedParticipants",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4828,
													"src": "18441:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5498,
												"id": 5500,
												"nodeType": "Return",
												"src": "18434:35:13"
											}
										]
									},
									"documentation": {
										"id": 5494,
										"nodeType": "StructuredDocumentation",
										"src": "18204:140:13",
										"text": " @notice Gets the number of participants who have been screened\n @return uint256 The number of screened participants"
									},
									"functionSelector": "f77a953e",
									"id": 5502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfScreenedParticipants",
									"nameLocation": "18358:31:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18389:2:13"
									},
									"returnParameters": {
										"id": 5498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5502,
												"src": "18415:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18415:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18414:9:13"
									},
									"scope": 5521,
									"src": "18349:127:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5510,
										"nodeType": "Block",
										"src": "18685:46:13",
										"statements": [
											{
												"expression": {
													"id": 5508,
													"name": "numberOfUsedSignatures",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4831,
													"src": "18702:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5507,
												"id": 5509,
												"nodeType": "Return",
												"src": "18695:29:13"
											}
										]
									},
									"documentation": {
										"id": 5503,
										"nodeType": "StructuredDocumentation",
										"src": "18482:129:13",
										"text": " @notice Gets the number of signatures that have been used\n @return uint256 The number of used signatures"
									},
									"functionSelector": "c3aa9721",
									"id": 5511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfUsedSignatures",
									"nameLocation": "18625:25:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18650:2:13"
									},
									"returnParameters": {
										"id": 5507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5511,
												"src": "18676:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18675:9:13"
									},
									"scope": 5521,
									"src": "18616:115:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 5519,
										"nodeType": "Block",
										"src": "18940:46:13",
										"statements": [
											{
												"expression": {
													"id": 5517,
													"name": "numberOfClaimedRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4825,
													"src": "18957:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5516,
												"id": 5518,
												"nodeType": "Return",
												"src": "18950:29:13"
											}
										]
									},
									"documentation": {
										"id": 5512,
										"nodeType": "StructuredDocumentation",
										"src": "18737:129:13",
										"text": " @notice Gets the number of rewards that have been claimed\n @return uint256 The number of claimed rewards"
									},
									"functionSelector": "627d3eb9",
									"id": 5520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfClaimedRewards",
									"nameLocation": "18880:25:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18905:2:13"
									},
									"returnParameters": {
										"id": 5516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5520,
												"src": "18931:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18931:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18930:9:13"
									},
									"scope": 5521,
									"src": "18871:115:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 5522,
							"src": "669:18319:13",
							"usedErrors": [
								13,
								18,
								355,
								358,
								464,
								850,
								855,
								860
							],
							"usedEvents": [
								24,
								347,
								352,
								4836,
								4843,
								4850,
								4855,
								4862,
								4869,
								4876
							]
						}
					],
					"src": "32:18957:13"
				},
				"id": 13
			}
		}
	}
}